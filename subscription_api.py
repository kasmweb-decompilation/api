# decompyle3 version 3.9.1
# Python bytecode version base 3.8.0 (3413)
# Decompiled from: Python 3.8.18 (default, Aug 25 2023, 13:20:30) 
# [GCC 11.4.0]
# Embedded file name: subscription_api.py

-- Stacks of completed symbols:
START ::= |- stmts . 
_come_froms ::= \e__come_froms . COME_FROM
_come_froms ::= \e__come_froms COME_FROM . 
_come_froms ::= _come_froms . COME_FROM
_come_froms ::= _come_froms COME_FROM . 
_stmts ::= stmts . 
and_cond ::= and_parts . expr_pjif \e__come_froms
and_cond ::= and_parts . expr_pjif _come_froms
and_cond ::= and_parts expr_pjif . _come_froms
and_cond ::= and_parts expr_pjif \e__come_froms . 
and_cond ::= testfalse . expr_pjif \e__come_froms
and_cond ::= testfalse . expr_pjif _come_froms
and_cond ::= testfalse expr_pjif . _come_froms
and_cond ::= testfalse expr_pjif \e__come_froms . 
and_not ::= expr_pjif . expr_pjit
and_or_cond ::= and_parts . expr POP_JUMP_IF_TRUE come_froms expr_pjif \e__come_froms
and_or_cond ::= and_parts . expr POP_JUMP_IF_TRUE come_froms expr_pjif _come_froms
and_or_cond ::= and_parts expr . POP_JUMP_IF_TRUE come_froms expr_pjif \e__come_froms
and_or_cond ::= and_parts expr . POP_JUMP_IF_TRUE come_froms expr_pjif _come_froms
and_or_expr ::= and_parts . expr jitop_come_from_expr COME_FROM
and_or_expr ::= and_parts expr . jitop_come_from_expr COME_FROM
and_parts ::= and_parts . expr_pjif
and_parts ::= and_parts expr_pjif . 
and_parts ::= expr_pjif . 
assert2 ::= expr . POP_JUMP_IF_TRUE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE . LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL . expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL expr . CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL expr CALL_FUNCTION_1 . RAISE_VARARGS_1
assert2_not ::= expr . POP_JUMP_IF_FALSE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE . LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert_invert ::= testtrue . LOAD_GLOBAL RAISE_VARARGS_1
assert_invert ::= testtrue LOAD_GLOBAL . RAISE_VARARGS_1
assign ::= expr . DUP_TOP designList
assign ::= expr . store
assign ::= expr store . 
assign2 ::= expr . expr ROT_TWO store store
assign2 ::= expr expr . ROT_TWO store store
assign3 ::= expr . expr expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr . expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr expr . ROT_THREE ROT_TWO store store store
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
attribute ::= expr . LOAD_ATTR
attribute ::= expr LOAD_ATTR . 
attribute37 ::= expr . LOAD_METHOD
attribute37 ::= expr LOAD_METHOD . 
aug_assign1 ::= expr . expr inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr . expr inplace_op store
aug_assign1 ::= expr expr . inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr expr . inplace_op store
aug_assign2 ::= expr . DUP_TOP LOAD_ATTR expr inplace_op ROT_TWO STORE_ATTR
await_expr ::= expr . GET_AWAITABLE LOAD_CONST YIELD_FROM
bin_op ::= expr . expr binary_operator
bin_op ::= expr expr . binary_operator
bin_op ::= expr expr binary_operator . 
binary_operator ::= BINARY_MODULO . 
c_compare_chained37 ::= expr . c_compare_chained_middlea_37
c_compare_chained37_false ::= expr . c_compare_chained_middleb_false_37
c_compare_chained37_false ::= expr . c_compare_chained_right_false_37
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suitec
c_nand ::= and_parts . expr_pjitt come_froms
c_returns ::= c_stmts . return
c_returns ::= c_stmts return . 
c_returns ::= returns . 
c_stmt ::= if_not_stmtc . 
c_stmt ::= ifelsestmtc . 
c_stmt ::= ifstmtc . 
c_stmt ::= stmt . 
c_stmts ::= _stmts . 
c_stmts ::= _stmts . lastc_stmt
c_stmts ::= c_returns . 
c_stmts ::= c_stmt . 
c_stmts ::= c_stmts . c_stmt
c_stmts ::= c_stmts c_stmt . 
c_stmts_opt ::= c_stmts . 
call ::= expr . CALL_FUNCTION_0
call ::= expr . CALL_METHOD_0
call ::= expr . expr CALL_FUNCTION_1
call ::= expr . expr CALL_METHOD_1
call ::= expr . expr expr CALL_METHOD_2
call ::= expr . expr expr expr CALL_FUNCTION_3
call ::= expr . expr expr expr CALL_METHOD_3
call ::= expr CALL_METHOD_0 . 
call ::= expr expr . CALL_FUNCTION_1
call ::= expr expr . CALL_METHOD_1
call ::= expr expr . expr CALL_METHOD_2
call ::= expr expr . expr expr CALL_FUNCTION_3
call ::= expr expr . expr expr CALL_METHOD_3
call ::= expr expr CALL_FUNCTION_1 . 
call ::= expr expr CALL_METHOD_1 . 
call ::= expr expr expr . CALL_METHOD_2
call ::= expr expr expr . expr CALL_FUNCTION_3
call ::= expr expr expr . expr CALL_METHOD_3
call ::= expr expr expr CALL_METHOD_2 . 
call ::= expr expr expr expr . CALL_FUNCTION_3
call ::= expr expr expr expr . CALL_METHOD_3
call ::= expr expr expr expr CALL_METHOD_3 . 
call_kw36 ::= expr . expr LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr . expr expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr . LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr expr . expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr LOAD_CONST . CALL_FUNCTION_KW_1
call_kw36 ::= expr expr expr . LOAD_CONST CALL_FUNCTION_KW_2
cf_jump_back ::= COME_FROM . JUMP_LOOP
cf_pt ::= COME_FROM . POP_TOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE_LOOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE_LOOP
classdefdeco1 ::= expr . classdefdeco1 CALL_FUNCTION_1
classdefdeco1 ::= expr . classdefdeco2 CALL_FUNCTION_1
come_any_from ::= COME_FROM . 
come_any_froms ::= come_any_from . 
come_any_froms ::= come_any_froms . come_any_from
come_any_froms ::= come_any_froms come_any_from . 
come_from_opt ::= COME_FROM . 
come_froms ::= COME_FROM . 
come_froms ::= come_froms . COME_FROM
come_froms ::= come_froms COME_FROM . 
compare ::= compare_single . 
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP \e__come_froms
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP _come_froms
compare_chained37 ::= expr . chained_parts
compare_chained37 ::= expr . compare_chained_middlea_37
compare_chained37 ::= expr . compare_chained_middlec_37
compare_chained37_false ::= expr . compare_chained_middle_false_37
compare_chained37_false ::= expr . compare_chained_middleb_false_37
compare_chained37_false ::= expr . compare_chained_right_false_37
compare_chained_and ::= expr . chained_parts compare_chained_righta_false_37 come_froms POP_TOP JUMP_FORWARD COME_FROM negated_testtrue come_froms
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_middle COME_FROM
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_right COME_FROM
compare_single ::= expr . expr COMPARE_OP
compare_single ::= expr expr . COMPARE_OP
compare_single ::= expr expr COMPARE_OP . 
continues ::= _stmts . lastc_stmt continue
dict ::= expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr . expr expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr . expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr . expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= kvlist_0 . 
dict_comp_func ::= BUILD_MAP_0 . LOAD_ARG for_iter store comp_iter JUMP_LOOP \e__come_froms ending_return
dict_comp_func ::= BUILD_MAP_0 . LOAD_ARG for_iter store comp_iter JUMP_LOOP _come_froms ending_return
else_suite ::= returns . 
else_suite ::= suite_stmts . 
else_suite_opt ::= else_suite . 
else_suitec ::= c_stmts . 
else_suitec ::= suite_stmts . 
expr ::= LOAD_CONST . 
expr ::= LOAD_FAST . 
expr ::= LOAD_GLOBAL . 
expr ::= LOAD_STR . 
expr ::= attribute . 
expr ::= attribute37 . 
expr ::= bin_op . 
expr ::= call . 
expr ::= compare . 
expr ::= dict . 
expr ::= if_exp . 
expr ::= not . 
expr ::= subscript . 
expr_jifop ::= expr . JUMP_IF_FALSE_OR_POP
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP \e__come_froms
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP _come_froms
expr_jitop ::= expr . JUMP_IF_TRUE_OR_POP
expr_pjif ::= expr . POP_JUMP_IF_FALSE
expr_pjif ::= expr POP_JUMP_IF_FALSE . 
expr_pjit ::= expr . POP_JUMP_IF_TRUE
expr_pjit ::= expr POP_JUMP_IF_TRUE . 
expr_pjitt ::= expr . pjump_ift
expr_stmt ::= expr . POP_TOP
expr_stmt ::= expr POP_TOP . 
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block \e__come_froms
for38 ::= expr . get_for_iter store for_block _come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP _come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite _come_froms
get_iter ::= expr . GET_ITER
if_and_elsestmtc ::= expr_pjif . expr_pjif c_stmts jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif . expr_pjif c_stmts jb_cfs else_suitec opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif . c_stmts jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif . c_stmts jb_cfs else_suitec opt_come_from_except
if_and_stmt ::= expr_pjif . expr COME_FROM stmts \e__come_froms
if_and_stmt ::= expr_pjif . expr COME_FROM stmts _come_froms
if_and_stmt ::= expr_pjif expr . COME_FROM stmts \e__come_froms
if_and_stmt ::= expr_pjif expr . COME_FROM stmts _come_froms
if_and_stmt ::= expr_pjif expr COME_FROM . stmts \e__come_froms
if_and_stmt ::= expr_pjif expr COME_FROM . stmts _come_froms
if_exp ::= expr_pjif . expr jf_cf expr COME_FROM
if_exp ::= expr_pjif . expr jump_forward_else expr
if_exp ::= expr_pjif . expr jump_forward_else expr come_froms
if_exp ::= expr_pjif expr . jf_cf expr COME_FROM
if_exp ::= expr_pjif expr . jump_forward_else expr
if_exp ::= expr_pjif expr . jump_forward_else expr come_froms
if_exp ::= expr_pjif expr jf_cf . expr COME_FROM
if_exp ::= expr_pjif expr jf_cf expr . COME_FROM
if_exp ::= expr_pjif expr jf_cf expr COME_FROM . 
if_exp ::= expr_pjif expr jump_forward_else . expr
if_exp ::= expr_pjif expr jump_forward_else . expr come_froms
if_exp ::= expr_pjif expr jump_forward_else expr . 
if_exp ::= expr_pjif expr jump_forward_else expr . come_froms
if_exp ::= expr_pjif expr jump_forward_else expr come_froms . 
if_exp_37b ::= expr_pjif . expr_pjif jump_forward_else expr
if_exp_37b ::= expr_pjif expr_pjif . jump_forward_else expr
if_exp_compare ::= expr . expr jf_cfs expr COME_FROM
if_exp_compare ::= expr expr . jf_cfs expr COME_FROM
if_exp_compare38 ::= or_in_ifexp . jump_if_false_cf expr jf_cfs expr come_froms
if_exp_loop ::= expr_pjif . expr POP_JUMP_IF_FALSE_LOOP JUMP_FORWARD come_froms expr
if_exp_loop ::= expr_pjif expr . POP_JUMP_IF_FALSE_LOOP JUMP_FORWARD come_froms expr
if_exp_not ::= expr . POP_JUMP_IF_TRUE expr jump_forward_else expr COME_FROM
if_exp_not ::= expr POP_JUMP_IF_TRUE . expr jump_forward_else expr COME_FROM
if_exp_not ::= expr POP_JUMP_IF_TRUE expr . jump_forward_else expr COME_FROM
if_exp_true ::= expr . JUMP_FORWARD expr COME_FROM
if_exp_true ::= expr JUMP_FORWARD . expr COME_FROM
if_not_stmtc ::= testexprc . ifstmts_jumpc \e__come_froms
if_not_stmtc ::= testexprc . ifstmts_jumpc _come_froms
if_not_stmtc ::= testexprc ifstmts_jumpc . _come_froms
if_not_stmtc ::= testexprc ifstmts_jumpc \e__come_froms . 
if_not_stmtc ::= testexprc ifstmts_jumpc _come_froms . 
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE . come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE . come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE . come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE . come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms . stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms . stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts . jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts . jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs . else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs . else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite . opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except . 
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except . 
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_stmt ::= expr . POP_JUMP_IF_TRUE expr pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE . expr pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr . pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump . come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms . stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms stmts . COME_FROM
ifelsestmt ::= testexpr . stmts_opt JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr . stmts_opt JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr . stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr \e_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt JUMP_FORWARD . else_suite \e__come_froms
ifelsestmt ::= testexpr stmts_opt JUMP_FORWARD . else_suite _come_froms
ifelsestmt ::= testexpr stmts_opt jf_cfs . else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs . else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt . opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt . opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt opt_come_from_except . 
ifelsestmtc ::= testexpr . c_stmts cf_pt else_suite
ifelsestmtc ::= testexpr . c_stmts come_froms else_suite
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr . c_stmts_opt cf_jump_back else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt jb_cfs else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr . c_stmts_opt jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr . c_stmts_opt jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr \e_c_stmts_opt . cf_jump_back else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . jb_cfs else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr \e_c_stmts_opt . jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts . cf_pt else_suite
ifelsestmtc ::= testexpr c_stmts . come_froms else_suite
ifelsestmtc ::= testexpr c_stmts come_froms . else_suite
ifelsestmtc ::= testexpr c_stmts come_froms else_suite . 
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr c_stmts_opt . cf_jump_back else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . jb_cfs else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr c_stmts_opt . jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt . jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suite \e__come_froms
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suite _come_froms
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suitec
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else . else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else . else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec . opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec \e_opt_come_from_except . 
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec opt_come_from_except . 
ifelsestmtc ::= testexpr_cf . c_stmts_opt jb_cf else_suitec
ifelsestmtc ::= testexpr_cf \e_c_stmts_opt . jb_cf else_suitec
ifelsestmtc ::= testexpr_cf c_stmts_opt . jb_cf else_suitec
ifelsestmtr ::= testexpr . return_if_stmts returns
iflaststmt ::= testexpr . returns
iflaststmt ::= testexpr . stmts
iflaststmt ::= testexpr . stmts JUMP_FORWARD
iflaststmt ::= testexpr . stmts_opt JUMP_FORWARD
iflaststmt ::= testexpr \e_stmts_opt . JUMP_FORWARD
iflaststmt ::= testexpr returns . 
iflaststmt ::= testexpr stmts . 
iflaststmt ::= testexpr stmts . JUMP_FORWARD
iflaststmt ::= testexpr stmts JUMP_FORWARD . 
iflaststmt ::= testexpr stmts_opt . JUMP_FORWARD
iflaststmt ::= testexpr stmts_opt JUMP_FORWARD . 
iflaststmtc ::= testexpr . c_stmts
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP POP_BLOCK
iflaststmtc ::= testexpr . c_stmts come_froms
iflaststmtc ::= testexpr c_stmts . 
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP POP_BLOCK
iflaststmtc ::= testexpr c_stmts . come_froms
iflaststmtc ::= testexpr c_stmts come_froms . 
iflaststmtc ::= testexprc . c_stmts
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP \e_opt_pop_block
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP opt_pop_block
iflaststmtc ::= testexprc c_stmts . 
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP \e_opt_pop_block
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP opt_pop_block
ifpoplaststmtc ::= testexpr . POP_TOP \e_c_stmts_opt
ifpoplaststmtc ::= testexpr . POP_TOP c_stmts_opt
ifstmt ::= testexpr . ifstmts_jump \e__come_froms
ifstmt ::= testexpr . ifstmts_jump _come_froms
ifstmt ::= testexpr . stmts \e__come_froms
ifstmt ::= testexpr . stmts _come_froms
ifstmt ::= testexpr ifstmts_jump . _come_froms
ifstmt ::= testexpr ifstmts_jump \e__come_froms . 
ifstmt ::= testexpr ifstmts_jump _come_froms . 
ifstmt ::= testexpr stmts . _come_froms
ifstmt ::= testexpr stmts \e__come_froms . 
ifstmt ::= testexpr stmts _come_froms . 
ifstmtc ::= testexpr . ifstmts_jumpc
ifstmtc ::= testexpr ifstmts_jumpc . 
ifstmtc ::= testexprc . ifstmts_jumpc \e__come_froms
ifstmtc ::= testexprc . ifstmts_jumpc _come_froms
ifstmtc ::= testexprc ifstmts_jumpc . _come_froms
ifstmtc ::= testexprc ifstmts_jumpc \e__come_froms . 
ifstmtc ::= testexprc ifstmts_jumpc _come_froms . 
ifstmts_jump ::= COME_FROM . stmts COME_FROM
ifstmts_jump ::= COME_FROM . stmts come_froms
ifstmts_jump ::= \e_stmts_opt . JUMP_FORWARD JUMP_FORWARD \e__come_froms
ifstmts_jump ::= \e_stmts_opt . JUMP_FORWARD JUMP_FORWARD _come_froms
ifstmts_jump ::= \e_stmts_opt . come_froms
ifstmts_jump ::= \e_stmts_opt come_froms . 
ifstmts_jump ::= stmts . come_froms
ifstmts_jump ::= stmts come_froms . 
ifstmts_jump ::= stmts_opt . JUMP_FORWARD JUMP_FORWARD \e__come_froms
ifstmts_jump ::= stmts_opt . JUMP_FORWARD JUMP_FORWARD _come_froms
ifstmts_jump ::= stmts_opt . come_froms
ifstmts_jump ::= stmts_opt JUMP_FORWARD . JUMP_FORWARD \e__come_froms
ifstmts_jump ::= stmts_opt JUMP_FORWARD . JUMP_FORWARD _come_froms
ifstmts_jump ::= stmts_opt come_froms . 
ifstmts_jumpc ::= COME_FROM . c_stmts JUMP_FORWARD
ifstmts_jumpc ::= COME_FROM . c_stmts JUMP_LOOP
ifstmts_jumpc ::= COME_FROM . c_stmts come_froms
ifstmts_jumpc ::= \e_c_stmts_opt . come_froms
ifstmts_jumpc ::= \e_c_stmts_opt come_froms . 
ifstmts_jumpc ::= c_stmts . 
ifstmts_jumpc ::= c_stmts . JUMP_LOOP
ifstmts_jumpc ::= c_stmts_opt . come_froms
ifstmts_jumpc ::= c_stmts_opt come_froms . 
ifstmts_jumpc ::= ifstmts_jump . 
import ::= LOAD_CONST . LOAD_CONST alias
import_as37 ::= LOAD_CONST . LOAD_CONST importlist37 store POP_TOP
import_from ::= LOAD_CONST . LOAD_CONST IMPORT_NAME importlist POP_TOP
import_from ::= LOAD_CONST . LOAD_CONST importlist POP_TOP
import_from37 ::= LOAD_CONST . LOAD_CONST IMPORT_NAME_ATTR importlist37 POP_TOP
import_from_as37 ::= LOAD_CONST . LOAD_CONST import_from_attr37 store POP_TOP
import_from_star ::= LOAD_CONST . LOAD_CONST IMPORT_NAME IMPORT_STAR
import_from_star ::= LOAD_CONST . LOAD_CONST IMPORT_NAME_ATTR IMPORT_STAR
importmultiple ::= LOAD_CONST . LOAD_CONST alias imports_cont
jb_cfs ::= \e_come_from_opt . JUMP_LOOP come_froms
jb_cfs ::= come_from_opt . JUMP_LOOP come_froms
jf_cf ::= JUMP_FORWARD . COME_FROM
jf_cf ::= JUMP_FORWARD COME_FROM . 
jf_cfs ::= JUMP_FORWARD . _come_froms
jf_cfs ::= JUMP_FORWARD \e__come_froms . 
jf_cfs ::= JUMP_FORWARD _come_froms . 
jump_forward_else ::= JUMP_FORWARD . _come_froms
jump_forward_else ::= JUMP_FORWARD \e__come_froms . 
jump_forward_else ::= JUMP_FORWARD _come_froms . 
jump_forward_else ::= come_froms . jump COME_FROM
kvlist_0 ::= BUILD_MAP_0 . 
last_stmt ::= iflaststmt . 
lastc_stmt ::= ifelsestmtc . 
lc_setup_finally ::= LOAD_CONST . SETUP_FINALLY
mkfuncdeco ::= expr . mkfuncdeco CALL_FUNCTION_1
mkfuncdeco ::= expr . mkfuncdeco0 CALL_FUNCTION_1
named_expr ::= expr . DUP_TOP store
nand ::= and_parts . expr_pjit come_froms
nor_cond ::= or_parts . expr_pjif
not ::= expr_pjit . 
not_and_not ::= not . expr_pjif COME_FROM
not_or ::= and_parts . expr_pjif \e__come_froms
not_or ::= and_parts . expr_pjif _come_froms
not_or ::= and_parts expr_pjif . _come_froms
not_or ::= and_parts expr_pjif \e__come_froms . 
opt_come_from_except ::= come_any_froms . 
or ::= expr_pjit . expr COME_FROM
or ::= expr_pjit . expr jump_if_false_cf
or ::= expr_pjit expr . COME_FROM
or ::= expr_pjit expr . jump_if_false_cf
or ::= expr_pjit expr COME_FROM . 
or ::= or_parts . expr
or ::= or_parts expr . 
or_and1 ::= or_parts . and_parts come_froms
or_and_not ::= expr_pjit . and_not COME_FROM
or_cond ::= or_parts . expr_pjif come_froms
or_expr ::= expr . JUMP_IF_TRUE expr COME_FROM
or_in_ifexp ::= expr_pjit . expr
or_in_ifexp ::= expr_pjit expr . 
or_in_ifexp ::= or_in_ifexp . POP_JUMP_IF_TRUE expr
or_in_ifexp ::= or_in_ifexp POP_JUMP_IF_TRUE . expr
or_in_ifexp ::= or_in_ifexp POP_JUMP_IF_TRUE expr . 
or_parts ::= expr_pjit . 
or_parts ::= or_parts . expr_pjit
or_parts ::= or_parts expr_pjit . 
pop_ex_return ::= return_expr . ROT_FOUR POP_EXCEPT RETURN_VALUE
pop_jump ::= POP_JUMP_IF_TRUE . 
popb_return ::= return_expr . POP_BLOCK RETURN_VALUE
return ::= return_expr . RETURN_END_IF
return ::= return_expr . RETURN_VALUE
return ::= return_expr . discard_tops RETURN_VALUE
return ::= return_expr RETURN_VALUE . 
return_expr ::= expr . 
return_if_stmt ::= return_expr . RETURN_END_IF
return_if_stmt ::= return_expr . RETURN_END_IF POP_BLOCK
return_if_stmts ::= _stmts . return_if_stmt \e__come_froms
return_if_stmts ::= _stmts . return_if_stmt _come_froms
returns ::= _stmts . return
returns ::= _stmts . return_if_stmt
returns ::= _stmts return . 
returns ::= return . 
sstmt ::= return . RETURN_LAST
sstmt ::= return RETURN_LAST . 
sstmt ::= sstmt . RETURN_LAST
sstmt ::= sstmt RETURN_LAST . 
sstmt ::= stmt . 
stmt ::= assign . 
stmt ::= expr_stmt . 
stmt ::= if_or_not_elsestmt . 
stmt ::= ifelsestmt . 
stmt ::= ifstmt . 
stmt ::= last_stmt . 
stmt ::= return . 
stmts ::= sstmt . 
stmts ::= stmt . 
stmts ::= stmts . last_stmt
stmts ::= stmts . sstmt
stmts ::= stmts . stmt
stmts ::= stmts sstmt . 
stmts ::= stmts stmt . 
stmts_opt ::= stmts . 
store ::= STORE_FAST . 
store ::= expr . STORE_ATTR
store ::= expr STORE_ATTR . 
store ::= store_subscript . 
store_subscript ::= expr . expr STORE_SUBSCR
store_subscript ::= expr expr . STORE_SUBSCR
store_subscript ::= expr expr STORE_SUBSCR . 
subscript ::= expr . expr BINARY_SUBSCR
subscript ::= expr expr . BINARY_SUBSCR
subscript ::= expr expr BINARY_SUBSCR . 
subscript2 ::= expr . expr DUP_TOP_TWO BINARY_SUBSCR
subscript2 ::= expr expr . DUP_TOP_TWO BINARY_SUBSCR
suite_stmts ::= _stmts . 
suite_stmts ::= returns . 
testexpr ::= testfalse . 
testexpr ::= testtrue . 
testexpr_cf ::= testexpr . come_froms
testexpr_cf ::= testexpr come_froms . 
testexprc ::= testexpr . 
testfalse ::= expr_pjif . 
testfalsec ::= expr . POP_JUMP_IF_TRUE_LOOP
testtrue ::= expr_pjit . 
testtrue ::= or_in_ifexp . POP_JUMP_IF_TRUE
testtrue ::= or_in_ifexp POP_JUMP_IF_TRUE . 
testtruec ::= expr . POP_JUMP_IF_FALSE_LOOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP \e_suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP \e_suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP suite_stmts_opt END_FINALLY POP_TOP
unary_not ::= expr . UNARY_NOT
unary_op ::= expr . unary_operator
while1stmt ::= \e__come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts COME_FROM . JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts . COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts COME_FROM . JUMP_LOOP COME_FROM_LOOP
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= _come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= _come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= \e__come_froms . pass JUMP_LOOP
whileTruestmt38 ::= \e__come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= _come_froms . pass JUMP_LOOP
whileTruestmt38 ::= _come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr . returns POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts . come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts come_froms . 
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr returns . POP_BLOCK
whilestmt38 ::= \e__come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= _come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr . c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr . c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr . returns POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexpr c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr c_stmts . come_froms
whilestmt38 ::= _come_froms testexpr c_stmts come_froms . 
whilestmt38 ::= _come_froms testexpr c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr returns . POP_BLOCK
whilestmt38 ::= _come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP _come_froms
yield ::= expr . YIELD_VALUE
yield_from ::= expr . GET_YIELD_FROM_ITER LOAD_CONST YIELD_FROM
Instruction context:
   
 L. 117       258  LOAD_GLOBAL              json
                 260  LOAD_METHOD              dumps
                 262  LOAD_FAST                'response'
                 264  CALL_METHOD_1         1  '1 positional argument'
->               266  RETURN_VALUE     

-- Stacks of completed symbols:
START ::= |- stmts . 
_come_froms ::= \e__come_froms . COME_FROM
_come_froms ::= \e__come_froms COME_FROM . 
_come_froms ::= _come_froms . COME_FROM
_come_froms ::= _come_froms COME_FROM . 
_stmts ::= stmts . 
and_cond ::= and_parts . expr_pjif \e__come_froms
and_cond ::= and_parts . expr_pjif _come_froms
and_cond ::= and_parts expr_pjif . _come_froms
and_cond ::= and_parts expr_pjif \e__come_froms . 
and_cond ::= testfalse . expr_pjif \e__come_froms
and_cond ::= testfalse . expr_pjif _come_froms
and_cond ::= testfalse expr_pjif . _come_froms
and_cond ::= testfalse expr_pjif \e__come_froms . 
and_not ::= expr_pjif . expr_pjit
and_or_cond ::= and_parts . expr POP_JUMP_IF_TRUE come_froms expr_pjif \e__come_froms
and_or_cond ::= and_parts . expr POP_JUMP_IF_TRUE come_froms expr_pjif _come_froms
and_or_cond ::= and_parts expr . POP_JUMP_IF_TRUE come_froms expr_pjif \e__come_froms
and_or_cond ::= and_parts expr . POP_JUMP_IF_TRUE come_froms expr_pjif _come_froms
and_or_expr ::= and_parts . expr jitop_come_from_expr COME_FROM
and_or_expr ::= and_parts expr . jitop_come_from_expr COME_FROM
and_parts ::= and_parts . expr_pjif
and_parts ::= and_parts expr_pjif . 
and_parts ::= expr_pjif . 
assert2 ::= expr . POP_JUMP_IF_TRUE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE . LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL . expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL expr . CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL expr CALL_FUNCTION_1 . RAISE_VARARGS_1
assert2_not ::= expr . POP_JUMP_IF_FALSE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE . LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE LOAD_GLOBAL . expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE LOAD_GLOBAL expr . CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE LOAD_GLOBAL expr CALL_FUNCTION_1 . RAISE_VARARGS_1
assert_invert ::= testtrue . LOAD_GLOBAL RAISE_VARARGS_1
assert_invert ::= testtrue LOAD_GLOBAL . RAISE_VARARGS_1
assign ::= expr . DUP_TOP designList
assign ::= expr . store
assign ::= expr store . 
assign2 ::= expr . expr ROT_TWO store store
assign2 ::= expr expr . ROT_TWO store store
assign3 ::= expr . expr expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr . expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr expr . ROT_THREE ROT_TWO store store store
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
attribute ::= expr . LOAD_ATTR
attribute ::= expr LOAD_ATTR . 
attribute37 ::= expr . LOAD_METHOD
attribute37 ::= expr LOAD_METHOD . 
aug_assign1 ::= expr . expr inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr . expr inplace_op store
aug_assign1 ::= expr expr . inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr expr . inplace_op store
aug_assign2 ::= expr . DUP_TOP LOAD_ATTR expr inplace_op ROT_TWO STORE_ATTR
await_expr ::= expr . GET_AWAITABLE LOAD_CONST YIELD_FROM
bin_op ::= expr . expr binary_operator
bin_op ::= expr expr . binary_operator
bin_op ::= expr expr binary_operator . 
binary_operator ::= BINARY_ADD . 
binary_operator ::= BINARY_MODULO . 
binary_operator ::= BINARY_SUBTRACT . 
bool_op ::= and_cond . 
c_compare_chained37 ::= expr . c_compare_chained_middlea_37
c_compare_chained37_false ::= expr . c_compare_chained_middleb_false_37
c_compare_chained37_false ::= expr . c_compare_chained_right_false_37
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suitec
c_nand ::= and_parts . expr_pjitt come_froms
c_returns ::= c_stmts . return
c_returns ::= c_stmts return . 
c_returns ::= returns . 
c_stmt ::= if_not_stmtc . 
c_stmt ::= ifelsestmtc . 
c_stmt ::= ifstmtc . 
c_stmt ::= stmt . 
c_stmts ::= _stmts . 
c_stmts ::= _stmts . lastc_stmt
c_stmts ::= c_returns . 
c_stmts ::= c_stmt . 
c_stmts ::= c_stmts . c_stmt
c_stmts ::= c_stmts c_stmt . 
c_stmts_opt ::= c_stmts . 
call ::= expr . CALL_FUNCTION_0
call ::= expr . CALL_METHOD_0
call ::= expr . expr CALL_FUNCTION_1
call ::= expr . expr CALL_METHOD_1
call ::= expr . expr expr CALL_METHOD_2
call ::= expr . expr expr expr CALL_FUNCTION_3
call ::= expr . expr expr expr CALL_METHOD_3
call ::= expr CALL_METHOD_0 . 
call ::= expr expr . CALL_FUNCTION_1
call ::= expr expr . CALL_METHOD_1
call ::= expr expr . expr CALL_METHOD_2
call ::= expr expr . expr expr CALL_FUNCTION_3
call ::= expr expr . expr expr CALL_METHOD_3
call ::= expr expr CALL_FUNCTION_1 . 
call ::= expr expr CALL_METHOD_1 . 
call ::= expr expr expr . CALL_METHOD_2
call ::= expr expr expr . expr CALL_FUNCTION_3
call ::= expr expr expr . expr CALL_METHOD_3
call ::= expr expr expr CALL_METHOD_2 . 
call ::= expr expr expr expr . CALL_FUNCTION_3
call ::= expr expr expr expr . CALL_METHOD_3
call_kw36 ::= expr . expr LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr . expr expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr . expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr . LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr expr . expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr . expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr LOAD_CONST . CALL_FUNCTION_KW_1
call_kw36 ::= expr expr expr . LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr LOAD_CONST . CALL_FUNCTION_KW_2
call_kw36 ::= expr expr expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr expr LOAD_CONST . CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5 . 
cf_jump_back ::= COME_FROM . JUMP_LOOP
cf_pt ::= COME_FROM . POP_TOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE_LOOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE_LOOP
classdefdeco1 ::= expr . classdefdeco1 CALL_FUNCTION_1
classdefdeco1 ::= expr . classdefdeco2 CALL_FUNCTION_1
come_any_from ::= COME_FROM . 
come_any_froms ::= come_any_from . 
come_any_froms ::= come_any_froms . come_any_from
come_any_froms ::= come_any_froms come_any_from . 
come_from_opt ::= COME_FROM . 
come_froms ::= COME_FROM . 
come_froms ::= come_froms . COME_FROM
come_froms ::= come_froms COME_FROM . 
compare ::= compare_single . 
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP \e__come_froms
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP _come_froms
compare_chained37 ::= expr . chained_parts
compare_chained37 ::= expr . compare_chained_middlea_37
compare_chained37 ::= expr . compare_chained_middlec_37
compare_chained37_false ::= expr . compare_chained_middle_false_37
compare_chained37_false ::= expr . compare_chained_middleb_false_37
compare_chained37_false ::= expr . compare_chained_right_false_37
compare_chained_and ::= expr . chained_parts compare_chained_righta_false_37 come_froms POP_TOP JUMP_FORWARD COME_FROM negated_testtrue come_froms
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_middle COME_FROM
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_right COME_FROM
compare_single ::= expr . expr COMPARE_OP
compare_single ::= expr expr . COMPARE_OP
compare_single ::= expr expr COMPARE_OP . 
continues ::= _stmts . lastc_stmt continue
dict ::= expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr . expr expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr . expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr . expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr LOAD_CONST . BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= kvlist_0 . 
dict_comp_func ::= BUILD_MAP_0 . LOAD_ARG for_iter store comp_iter JUMP_LOOP \e__come_froms ending_return
dict_comp_func ::= BUILD_MAP_0 . LOAD_ARG for_iter store comp_iter JUMP_LOOP _come_froms ending_return
else_suite ::= returns . 
else_suite ::= suite_stmts . 
else_suite_opt ::= else_suite . 
else_suitec ::= c_returns . 
else_suitec ::= c_stmts . 
else_suitec ::= suite_stmts . 
expr ::= LOAD_CONST . 
expr ::= LOAD_FAST . 
expr ::= LOAD_GLOBAL . 
expr ::= LOAD_STR . 
expr ::= attribute . 
expr ::= attribute37 . 
expr ::= bin_op . 
expr ::= call . 
expr ::= call_kw36 . 
expr ::= compare . 
expr ::= dict . 
expr ::= if_exp . 
expr ::= not . 
expr ::= subscript . 
expr_jifop ::= expr . JUMP_IF_FALSE_OR_POP
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP \e__come_froms
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP _come_froms
expr_jitop ::= expr . JUMP_IF_TRUE_OR_POP
expr_pjif ::= expr . POP_JUMP_IF_FALSE
expr_pjif ::= expr POP_JUMP_IF_FALSE . 
expr_pjit ::= expr . POP_JUMP_IF_TRUE
expr_pjit ::= expr POP_JUMP_IF_TRUE . 
expr_pjitt ::= expr . pjump_ift
expr_stmt ::= expr . POP_TOP
expr_stmt ::= expr POP_TOP . 
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block \e__come_froms
for38 ::= expr . get_for_iter store for_block _come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP _come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite _come_froms
get_iter ::= expr . GET_ITER
if_and_elsestmtc ::= expr_pjif . expr_pjif c_stmts jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif . expr_pjif c_stmts jb_cfs else_suitec opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif . c_stmts jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif . c_stmts jb_cfs else_suitec opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif c_stmts . jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif c_stmts . jb_cfs else_suitec opt_come_from_except
if_and_stmt ::= expr_pjif . expr COME_FROM stmts \e__come_froms
if_and_stmt ::= expr_pjif . expr COME_FROM stmts _come_froms
if_and_stmt ::= expr_pjif expr . COME_FROM stmts \e__come_froms
if_and_stmt ::= expr_pjif expr . COME_FROM stmts _come_froms
if_and_stmt ::= expr_pjif expr COME_FROM . stmts \e__come_froms
if_and_stmt ::= expr_pjif expr COME_FROM . stmts _come_froms
if_exp ::= expr_pjif . expr jf_cf expr COME_FROM
if_exp ::= expr_pjif . expr jump_forward_else expr
if_exp ::= expr_pjif . expr jump_forward_else expr come_froms
if_exp ::= expr_pjif expr . jf_cf expr COME_FROM
if_exp ::= expr_pjif expr . jump_forward_else expr
if_exp ::= expr_pjif expr . jump_forward_else expr come_froms
if_exp ::= expr_pjif expr jf_cf . expr COME_FROM
if_exp ::= expr_pjif expr jf_cf expr . COME_FROM
if_exp ::= expr_pjif expr jf_cf expr COME_FROM . 
if_exp ::= expr_pjif expr jump_forward_else . expr
if_exp ::= expr_pjif expr jump_forward_else . expr come_froms
if_exp ::= expr_pjif expr jump_forward_else expr . 
if_exp ::= expr_pjif expr jump_forward_else expr . come_froms
if_exp ::= expr_pjif expr jump_forward_else expr come_froms . 
if_exp_37b ::= expr_pjif . expr_pjif jump_forward_else expr
if_exp_37b ::= expr_pjif expr_pjif . jump_forward_else expr
if_exp_compare ::= bool_op . expr jf_cfs expr COME_FROM
if_exp_compare ::= bool_op expr . jf_cfs expr COME_FROM
if_exp_compare ::= expr . expr jf_cfs expr COME_FROM
if_exp_compare ::= expr expr . jf_cfs expr COME_FROM
if_exp_compare38 ::= or_in_ifexp . jump_if_false_cf expr jf_cfs expr come_froms
if_exp_compare38 ::= or_in_ifexp jump_if_false_cf . expr jf_cfs expr come_froms
if_exp_compare38 ::= or_in_ifexp jump_if_false_cf expr . jf_cfs expr come_froms
if_exp_loop ::= expr_pjif . expr POP_JUMP_IF_FALSE_LOOP JUMP_FORWARD come_froms expr
if_exp_loop ::= expr_pjif expr . POP_JUMP_IF_FALSE_LOOP JUMP_FORWARD come_froms expr
if_exp_not ::= expr . POP_JUMP_IF_TRUE expr jump_forward_else expr COME_FROM
if_exp_not ::= expr POP_JUMP_IF_TRUE . expr jump_forward_else expr COME_FROM
if_exp_not ::= expr POP_JUMP_IF_TRUE expr . jump_forward_else expr COME_FROM
if_exp_true ::= expr . JUMP_FORWARD expr COME_FROM
if_exp_true ::= expr JUMP_FORWARD . expr COME_FROM
if_not_stmtc ::= testexprc . ifstmts_jumpc \e__come_froms
if_not_stmtc ::= testexprc . ifstmts_jumpc _come_froms
if_not_stmtc ::= testexprc ifstmts_jumpc . _come_froms
if_not_stmtc ::= testexprc ifstmts_jumpc \e__come_froms . 
if_not_stmtc ::= testexprc ifstmts_jumpc _come_froms . 
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE . come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE . come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE . come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE . come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms . stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms . stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts . jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts . jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs . else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs . else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite . opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except . 
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except . 
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_stmt ::= expr . POP_JUMP_IF_TRUE expr pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE . expr pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr . pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump . come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms . stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms stmts . COME_FROM
ifelsestmt ::= bool_op . stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op . stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op . stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op . stmts_opt jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs . else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs . else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs \e_else_suite_opt . opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= bool_op stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except . 
ifelsestmt ::= bool_op stmts_opt jf_cfs else_suite_opt . opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= bool_op stmts_opt jf_cfs else_suite_opt opt_come_from_except . 
ifelsestmt ::= testexpr . stmts_opt JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr . stmts_opt JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr . stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr \e_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt JUMP_FORWARD . else_suite \e__come_froms
ifelsestmt ::= testexpr stmts_opt JUMP_FORWARD . else_suite _come_froms
ifelsestmt ::= testexpr stmts_opt jf_cfs . else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs . else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt . opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt . opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt opt_come_from_except . 
ifelsestmtc ::= testexpr . c_stmts cf_pt else_suite
ifelsestmtc ::= testexpr . c_stmts come_froms else_suite
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr . c_stmts_opt cf_jump_back else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt jb_cfs else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr . c_stmts_opt jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr . c_stmts_opt jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr \e_c_stmts_opt . cf_jump_back else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . jb_cfs else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr \e_c_stmts_opt . jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts . cf_pt else_suite
ifelsestmtc ::= testexpr c_stmts . come_froms else_suite
ifelsestmtc ::= testexpr c_stmts come_froms . else_suite
ifelsestmtc ::= testexpr c_stmts come_froms else_suite . 
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr c_stmts_opt . cf_jump_back else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . jb_cfs else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr c_stmts_opt . jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt . jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suite \e__come_froms
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suite _come_froms
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suitec
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else . else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else . else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec . opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec \e_opt_come_from_except . 
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec opt_come_from_except . 
ifelsestmtc ::= testexpr_cf . c_stmts_opt jb_cf else_suitec
ifelsestmtc ::= testexpr_cf \e_c_stmts_opt . jb_cf else_suitec
ifelsestmtc ::= testexpr_cf c_stmts_opt . jb_cf else_suitec
ifelsestmtr ::= testexpr . return_if_stmts returns
iflaststmt ::= testexpr . returns
iflaststmt ::= testexpr . stmts
iflaststmt ::= testexpr . stmts JUMP_FORWARD
iflaststmt ::= testexpr . stmts_opt JUMP_FORWARD
iflaststmt ::= testexpr \e_stmts_opt . JUMP_FORWARD
iflaststmt ::= testexpr returns . 
iflaststmt ::= testexpr stmts . 
iflaststmt ::= testexpr stmts . JUMP_FORWARD
iflaststmt ::= testexpr stmts JUMP_FORWARD . 
iflaststmt ::= testexpr stmts_opt . JUMP_FORWARD
iflaststmt ::= testexpr stmts_opt JUMP_FORWARD . 
iflaststmtc ::= testexpr . c_stmts
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP POP_BLOCK
iflaststmtc ::= testexpr . c_stmts come_froms
iflaststmtc ::= testexpr c_stmts . 
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP POP_BLOCK
iflaststmtc ::= testexpr c_stmts . come_froms
iflaststmtc ::= testexpr c_stmts come_froms . 
iflaststmtc ::= testexprc . c_stmts
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP \e_opt_pop_block
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP opt_pop_block
iflaststmtc ::= testexprc c_stmts . 
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP \e_opt_pop_block
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP opt_pop_block
ifpoplaststmtc ::= testexpr . POP_TOP \e_c_stmts_opt
ifpoplaststmtc ::= testexpr . POP_TOP c_stmts_opt
ifstmt ::= testexpr . ifstmts_jump \e__come_froms
ifstmt ::= testexpr . ifstmts_jump _come_froms
ifstmt ::= testexpr . stmts \e__come_froms
ifstmt ::= testexpr . stmts _come_froms
ifstmt ::= testexpr ifstmts_jump . _come_froms
ifstmt ::= testexpr ifstmts_jump \e__come_froms . 
ifstmt ::= testexpr ifstmts_jump _come_froms . 
ifstmt ::= testexpr stmts . _come_froms
ifstmt ::= testexpr stmts \e__come_froms . 
ifstmt ::= testexpr stmts _come_froms . 
ifstmt_bool ::= not_and_not . stmts come_froms
ifstmt_bool ::= not_and_not stmts . come_froms
ifstmt_bool ::= or_and1 . stmts come_froms
ifstmt_bool ::= or_and1 stmts . come_froms
ifstmtc ::= testexpr . ifstmts_jumpc
ifstmtc ::= testexpr ifstmts_jumpc . 
ifstmtc ::= testexprc . ifstmts_jumpc \e__come_froms
ifstmtc ::= testexprc . ifstmts_jumpc _come_froms
ifstmtc ::= testexprc ifstmts_jumpc . _come_froms
ifstmtc ::= testexprc ifstmts_jumpc \e__come_froms . 
ifstmtc ::= testexprc ifstmts_jumpc _come_froms . 
ifstmts_jump ::= COME_FROM . stmts COME_FROM
ifstmts_jump ::= COME_FROM . stmts come_froms
ifstmts_jump ::= COME_FROM stmts . COME_FROM
ifstmts_jump ::= COME_FROM stmts . come_froms
ifstmts_jump ::= \e_stmts_opt . JUMP_FORWARD JUMP_FORWARD \e__come_froms
ifstmts_jump ::= \e_stmts_opt . JUMP_FORWARD JUMP_FORWARD _come_froms
ifstmts_jump ::= \e_stmts_opt . come_froms
ifstmts_jump ::= \e_stmts_opt come_froms . 
ifstmts_jump ::= stmts . come_froms
ifstmts_jump ::= stmts come_froms . 
ifstmts_jump ::= stmts_opt . JUMP_FORWARD JUMP_FORWARD \e__come_froms
ifstmts_jump ::= stmts_opt . JUMP_FORWARD JUMP_FORWARD _come_froms
ifstmts_jump ::= stmts_opt . come_froms
ifstmts_jump ::= stmts_opt JUMP_FORWARD . JUMP_FORWARD \e__come_froms
ifstmts_jump ::= stmts_opt JUMP_FORWARD . JUMP_FORWARD _come_froms
ifstmts_jump ::= stmts_opt come_froms . 
ifstmts_jumpc ::= COME_FROM . c_stmts JUMP_FORWARD
ifstmts_jumpc ::= COME_FROM . c_stmts JUMP_LOOP
ifstmts_jumpc ::= COME_FROM . c_stmts come_froms
ifstmts_jumpc ::= COME_FROM c_stmts . JUMP_FORWARD
ifstmts_jumpc ::= COME_FROM c_stmts . JUMP_LOOP
ifstmts_jumpc ::= COME_FROM c_stmts . come_froms
ifstmts_jumpc ::= COME_FROM c_stmts JUMP_FORWARD . 
ifstmts_jumpc ::= \e_c_stmts_opt . come_froms
ifstmts_jumpc ::= \e_c_stmts_opt come_froms . 
ifstmts_jumpc ::= c_stmts . 
ifstmts_jumpc ::= c_stmts . JUMP_LOOP
ifstmts_jumpc ::= c_stmts_opt . come_froms
ifstmts_jumpc ::= c_stmts_opt come_froms . 
ifstmts_jumpc ::= ifstmts_jump . 
import ::= LOAD_CONST . LOAD_CONST alias
import_as37 ::= LOAD_CONST . LOAD_CONST importlist37 store POP_TOP
import_from ::= LOAD_CONST . LOAD_CONST IMPORT_NAME importlist POP_TOP
import_from ::= LOAD_CONST . LOAD_CONST importlist POP_TOP
import_from37 ::= LOAD_CONST . LOAD_CONST IMPORT_NAME_ATTR importlist37 POP_TOP
import_from_as37 ::= LOAD_CONST . LOAD_CONST import_from_attr37 store POP_TOP
import_from_star ::= LOAD_CONST . LOAD_CONST IMPORT_NAME IMPORT_STAR
import_from_star ::= LOAD_CONST . LOAD_CONST IMPORT_NAME_ATTR IMPORT_STAR
importmultiple ::= LOAD_CONST . LOAD_CONST alias imports_cont
jb_cfs ::= \e_come_from_opt . JUMP_LOOP come_froms
jb_cfs ::= come_from_opt . JUMP_LOOP come_froms
jf_cf ::= JUMP_FORWARD . COME_FROM
jf_cf ::= JUMP_FORWARD COME_FROM . 
jf_cfs ::= JUMP_FORWARD . _come_froms
jf_cfs ::= JUMP_FORWARD \e__come_froms . 
jf_cfs ::= JUMP_FORWARD _come_froms . 
jump ::= JUMP_FORWARD . 
jump_forward_else ::= JUMP_FORWARD . _come_froms
jump_forward_else ::= JUMP_FORWARD \e__come_froms . 
jump_forward_else ::= JUMP_FORWARD _come_froms . 
jump_forward_else ::= come_froms . jump COME_FROM
jump_forward_else ::= come_froms jump . COME_FROM
jump_forward_else ::= come_froms jump COME_FROM . 
jump_if_false_cf ::= POP_JUMP_IF_FALSE . COME_FROM
jump_if_false_cf ::= POP_JUMP_IF_FALSE COME_FROM . 
kvlist_0 ::= BUILD_MAP_0 . 
last_stmt ::= iflaststmt . 
lastc_stmt ::= ifelsestmtc . 
lc_setup_finally ::= LOAD_CONST . SETUP_FINALLY
mkfuncdeco ::= expr . mkfuncdeco CALL_FUNCTION_1
mkfuncdeco ::= expr . mkfuncdeco0 CALL_FUNCTION_1
named_expr ::= expr . DUP_TOP store
nand ::= and_parts . expr_pjit come_froms
nor_cond ::= or_parts . expr_pjif
nor_cond ::= or_parts expr_pjif . 
not ::= expr_pjit . 
not_and_not ::= not . expr_pjif COME_FROM
not_and_not ::= not expr_pjif . COME_FROM
not_and_not ::= not expr_pjif COME_FROM . 
not_or ::= and_parts . expr_pjif \e__come_froms
not_or ::= and_parts . expr_pjif _come_froms
not_or ::= and_parts expr_pjif . _come_froms
not_or ::= and_parts expr_pjif \e__come_froms . 
opt_come_from_except ::= come_any_froms . 
or ::= expr_pjit . expr COME_FROM
or ::= expr_pjit . expr jump_if_false_cf
or ::= expr_pjit expr . COME_FROM
or ::= expr_pjit expr . jump_if_false_cf
or ::= expr_pjit expr COME_FROM . 
or ::= expr_pjit expr jump_if_false_cf . 
or ::= or_parts . expr
or ::= or_parts expr . 
or_and1 ::= or_parts . and_parts come_froms
or_and1 ::= or_parts and_parts . come_froms
or_and1 ::= or_parts and_parts come_froms . 
or_and_not ::= expr_pjit . and_not COME_FROM
or_cond ::= not_and_not . expr_pjif come_froms
or_cond ::= or_parts . expr_pjif come_froms
or_cond ::= or_parts expr_pjif . come_froms
or_cond ::= or_parts expr_pjif come_froms . 
or_expr ::= expr . JUMP_IF_TRUE expr COME_FROM
or_in_ifexp ::= expr_pjit . expr
or_in_ifexp ::= expr_pjit expr . 
or_in_ifexp ::= or_in_ifexp . POP_JUMP_IF_TRUE expr
or_in_ifexp ::= or_in_ifexp POP_JUMP_IF_TRUE . expr
or_in_ifexp ::= or_in_ifexp POP_JUMP_IF_TRUE expr . 
or_parts ::= expr_pjit . 
or_parts ::= or_parts . expr_pjit
or_parts ::= or_parts expr_pjit . 
pop_ex_return ::= return_expr . ROT_FOUR POP_EXCEPT RETURN_VALUE
pop_jump ::= POP_JUMP_IF_FALSE . 
pop_jump ::= POP_JUMP_IF_TRUE . 
popb_return ::= return_expr . POP_BLOCK RETURN_VALUE
return ::= return_expr . RETURN_END_IF
return ::= return_expr . RETURN_VALUE
return ::= return_expr . discard_tops RETURN_VALUE
return ::= return_expr RETURN_VALUE . 
return_expr ::= expr . 
return_if_stmt ::= return_expr . RETURN_END_IF
return_if_stmt ::= return_expr . RETURN_END_IF POP_BLOCK
return_if_stmts ::= _stmts . return_if_stmt \e__come_froms
return_if_stmts ::= _stmts . return_if_stmt _come_froms
returns ::= _stmts . return
returns ::= _stmts . return_if_stmt
returns ::= _stmts return . 
returns ::= return . 
sstmt ::= return . RETURN_LAST
sstmt ::= return RETURN_LAST . 
sstmt ::= sstmt . RETURN_LAST
sstmt ::= sstmt RETURN_LAST . 
sstmt ::= stmt . 
stmt ::= assign . 
stmt ::= expr_stmt . 
stmt ::= if_or_not_elsestmt . 
stmt ::= ifelsestmt . 
stmt ::= ifstmt . 
stmt ::= last_stmt . 
stmt ::= return . 
stmts ::= sstmt . 
stmts ::= stmt . 
stmts ::= stmts . last_stmt
stmts ::= stmts . sstmt
stmts ::= stmts . stmt
stmts ::= stmts last_stmt . 
stmts ::= stmts sstmt . 
stmts ::= stmts stmt . 
stmts_opt ::= stmts . 
store ::= STORE_FAST . 
store ::= expr . STORE_ATTR
store ::= expr STORE_ATTR . 
store ::= store_subscript . 
store_subscript ::= expr . expr STORE_SUBSCR
store_subscript ::= expr expr . STORE_SUBSCR
store_subscript ::= expr expr STORE_SUBSCR . 
subscript ::= expr . expr BINARY_SUBSCR
subscript ::= expr expr . BINARY_SUBSCR
subscript ::= expr expr BINARY_SUBSCR . 
subscript2 ::= expr . expr DUP_TOP_TWO BINARY_SUBSCR
subscript2 ::= expr expr . DUP_TOP_TWO BINARY_SUBSCR
suite_stmts ::= _stmts . 
suite_stmts ::= returns . 
testexpr ::= testfalse . 
testexpr ::= testtrue . 
testexpr_cf ::= testexpr . come_froms
testexpr_cf ::= testexpr come_froms . 
testexprc ::= testexpr . 
testfalse ::= expr_pjif . 
testfalse ::= or_cond . 
testfalsec ::= expr . POP_JUMP_IF_TRUE_LOOP
testtrue ::= expr_pjit . 
testtrue ::= nor_cond . 
testtrue ::= or_in_ifexp . POP_JUMP_IF_TRUE
testtrue ::= or_in_ifexp POP_JUMP_IF_TRUE . 
testtruec ::= expr . POP_JUMP_IF_FALSE_LOOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP \e_suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP \e_suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP suite_stmts_opt END_FINALLY POP_TOP
unary_not ::= expr . UNARY_NOT
unary_op ::= expr . unary_operator
while1stmt ::= \e__come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts COME_FROM . JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts . COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts COME_FROM . JUMP_LOOP COME_FROM_LOOP
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= _come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= _come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= \e__come_froms . pass JUMP_LOOP
whileTruestmt38 ::= \e__come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= _come_froms . pass JUMP_LOOP
whileTruestmt38 ::= _come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms bool_op . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms bool_op . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms bool_op c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms bool_op c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr . returns POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts . come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts come_froms . 
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr returns . POP_BLOCK
whilestmt38 ::= \e__come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= _come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr . c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr . c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr . returns POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexpr c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr c_stmts . come_froms
whilestmt38 ::= _come_froms testexpr c_stmts come_froms . 
whilestmt38 ::= _come_froms testexpr c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr returns . POP_BLOCK
whilestmt38 ::= _come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP _come_froms
yield ::= expr . YIELD_VALUE
yield_from ::= expr . GET_YIELD_FROM_ITER LOAD_CONST YIELD_FROM
Instruction context:
   
 L. 171       520  LOAD_GLOBAL              json
                 522  LOAD_METHOD              dumps
                 524  LOAD_FAST                'response'
                 526  CALL_METHOD_1         1  '1 positional argument'
->               528  RETURN_VALUE     

-- Stacks of completed symbols:
START ::= |- stmts . 
_come_froms ::= \e__come_froms . COME_FROM
_come_froms ::= \e__come_froms COME_FROM . 
_come_froms ::= _come_froms . COME_FROM
_come_froms ::= _come_froms COME_FROM . 
_stmts ::= stmts . 
and_cond ::= and_parts . expr_pjif \e__come_froms
and_cond ::= and_parts . expr_pjif _come_froms
and_cond ::= and_parts expr_pjif . _come_froms
and_cond ::= and_parts expr_pjif \e__come_froms . 
and_cond ::= testfalse . expr_pjif \e__come_froms
and_cond ::= testfalse . expr_pjif _come_froms
and_cond ::= testfalse expr_pjif . _come_froms
and_cond ::= testfalse expr_pjif \e__come_froms . 
and_not ::= expr_pjif . expr_pjit
and_or_cond ::= and_parts . expr POP_JUMP_IF_TRUE come_froms expr_pjif \e__come_froms
and_or_cond ::= and_parts . expr POP_JUMP_IF_TRUE come_froms expr_pjif _come_froms
and_or_cond ::= and_parts expr . POP_JUMP_IF_TRUE come_froms expr_pjif \e__come_froms
and_or_cond ::= and_parts expr . POP_JUMP_IF_TRUE come_froms expr_pjif _come_froms
and_or_expr ::= and_parts . expr jitop_come_from_expr COME_FROM
and_or_expr ::= and_parts expr . jitop_come_from_expr COME_FROM
and_parts ::= and_parts . expr_pjif
and_parts ::= and_parts expr_pjif . 
and_parts ::= expr_pjif . 
assert2 ::= expr . POP_JUMP_IF_TRUE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE . LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL . expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL expr . CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL expr CALL_FUNCTION_1 . RAISE_VARARGS_1
assert2_not ::= expr . POP_JUMP_IF_FALSE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE . LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE LOAD_GLOBAL . expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE LOAD_GLOBAL expr . CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE LOAD_GLOBAL expr CALL_FUNCTION_1 . RAISE_VARARGS_1
assert_invert ::= testtrue . LOAD_GLOBAL RAISE_VARARGS_1
assert_invert ::= testtrue LOAD_GLOBAL . RAISE_VARARGS_1
assign ::= expr . DUP_TOP designList
assign ::= expr . store
assign ::= expr store . 
assign2 ::= expr . expr ROT_TWO store store
assign2 ::= expr expr . ROT_TWO store store
assign3 ::= expr . expr expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr . expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr expr . ROT_THREE ROT_TWO store store store
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
attribute ::= expr . LOAD_ATTR
attribute ::= expr LOAD_ATTR . 
attribute37 ::= expr . LOAD_METHOD
attribute37 ::= expr LOAD_METHOD . 
aug_assign1 ::= expr . expr inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr . expr inplace_op store
aug_assign1 ::= expr expr . inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr expr . inplace_op store
aug_assign2 ::= expr . DUP_TOP LOAD_ATTR expr inplace_op ROT_TWO STORE_ATTR
await_expr ::= expr . GET_AWAITABLE LOAD_CONST YIELD_FROM
bin_op ::= expr . expr binary_operator
bin_op ::= expr expr . binary_operator
bin_op ::= expr expr binary_operator . 
binary_operator ::= BINARY_ADD . 
binary_operator ::= BINARY_MODULO . 
binary_operator ::= BINARY_SUBTRACT . 
bool_op ::= and_cond . 
c_compare_chained37 ::= expr . c_compare_chained_middlea_37
c_compare_chained37_false ::= expr . c_compare_chained_middleb_false_37
c_compare_chained37_false ::= expr . c_compare_chained_right_false_37
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suitec
c_nand ::= and_parts . expr_pjitt come_froms
c_returns ::= c_stmts . return
c_returns ::= c_stmts return . 
c_returns ::= returns . 
c_stmt ::= if_not_stmtc . 
c_stmt ::= ifelsestmtc . 
c_stmt ::= ifstmtc . 
c_stmt ::= stmt . 
c_stmts ::= _stmts . 
c_stmts ::= _stmts . lastc_stmt
c_stmts ::= c_returns . 
c_stmts ::= c_stmt . 
c_stmts ::= c_stmts . c_stmt
c_stmts ::= c_stmts c_stmt . 
c_stmts_opt ::= c_stmts . 
call ::= expr . CALL_FUNCTION_0
call ::= expr . CALL_METHOD_0
call ::= expr . expr CALL_FUNCTION_1
call ::= expr . expr CALL_METHOD_1
call ::= expr . expr expr CALL_METHOD_2
call ::= expr . expr expr expr CALL_FUNCTION_3
call ::= expr . expr expr expr CALL_METHOD_3
call ::= expr CALL_METHOD_0 . 
call ::= expr expr . CALL_FUNCTION_1
call ::= expr expr . CALL_METHOD_1
call ::= expr expr . expr CALL_METHOD_2
call ::= expr expr . expr expr CALL_FUNCTION_3
call ::= expr expr . expr expr CALL_METHOD_3
call ::= expr expr CALL_FUNCTION_1 . 
call ::= expr expr CALL_METHOD_1 . 
call ::= expr expr expr . CALL_METHOD_2
call ::= expr expr expr . expr CALL_FUNCTION_3
call ::= expr expr expr . expr CALL_METHOD_3
call ::= expr expr expr CALL_METHOD_2 . 
call ::= expr expr expr expr . CALL_FUNCTION_3
call ::= expr expr expr expr . CALL_METHOD_3
call_kw36 ::= expr . expr LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr . expr expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr . expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr . LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr expr . expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr . expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr LOAD_CONST . CALL_FUNCTION_KW_1
call_kw36 ::= expr expr expr . LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr LOAD_CONST . CALL_FUNCTION_KW_2
call_kw36 ::= expr expr expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr expr LOAD_CONST . CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5 . 
cf_jump_back ::= COME_FROM . JUMP_LOOP
cf_pt ::= COME_FROM . POP_TOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE_LOOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE_LOOP
classdefdeco1 ::= expr . classdefdeco1 CALL_FUNCTION_1
classdefdeco1 ::= expr . classdefdeco2 CALL_FUNCTION_1
come_any_from ::= COME_FROM . 
come_any_froms ::= come_any_from . 
come_any_froms ::= come_any_froms . come_any_from
come_any_froms ::= come_any_froms come_any_from . 
come_from_opt ::= COME_FROM . 
come_froms ::= COME_FROM . 
come_froms ::= come_froms . COME_FROM
come_froms ::= come_froms COME_FROM . 
compare ::= compare_single . 
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP \e__come_froms
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP _come_froms
compare_chained37 ::= expr . chained_parts
compare_chained37 ::= expr . compare_chained_middlea_37
compare_chained37 ::= expr . compare_chained_middlec_37
compare_chained37_false ::= expr . compare_chained_middle_false_37
compare_chained37_false ::= expr . compare_chained_middleb_false_37
compare_chained37_false ::= expr . compare_chained_right_false_37
compare_chained_and ::= expr . chained_parts compare_chained_righta_false_37 come_froms POP_TOP JUMP_FORWARD COME_FROM negated_testtrue come_froms
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_middle COME_FROM
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_right COME_FROM
compare_single ::= expr . expr COMPARE_OP
compare_single ::= expr expr . COMPARE_OP
compare_single ::= expr expr COMPARE_OP . 
continues ::= _stmts . lastc_stmt continue
dict ::= expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr . expr expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr . expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr . expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr LOAD_CONST . BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= kvlist_0 . 
dict_comp_func ::= BUILD_MAP_0 . LOAD_ARG for_iter store comp_iter JUMP_LOOP \e__come_froms ending_return
dict_comp_func ::= BUILD_MAP_0 . LOAD_ARG for_iter store comp_iter JUMP_LOOP _come_froms ending_return
else_suite ::= returns . 
else_suite ::= suite_stmts . 
else_suite_opt ::= else_suite . 
else_suitec ::= c_returns . 
else_suitec ::= c_stmts . 
else_suitec ::= suite_stmts . 
expr ::= LOAD_CONST . 
expr ::= LOAD_FAST . 
expr ::= LOAD_GLOBAL . 
expr ::= LOAD_STR . 
expr ::= attribute . 
expr ::= attribute37 . 
expr ::= bin_op . 
expr ::= call . 
expr ::= call_kw36 . 
expr ::= compare . 
expr ::= dict . 
expr ::= if_exp . 
expr ::= not . 
expr ::= subscript . 
expr_jifop ::= expr . JUMP_IF_FALSE_OR_POP
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP \e__come_froms
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP _come_froms
expr_jitop ::= expr . JUMP_IF_TRUE_OR_POP
expr_pjif ::= expr . POP_JUMP_IF_FALSE
expr_pjif ::= expr POP_JUMP_IF_FALSE . 
expr_pjit ::= expr . POP_JUMP_IF_TRUE
expr_pjit ::= expr POP_JUMP_IF_TRUE . 
expr_pjitt ::= expr . pjump_ift
expr_stmt ::= expr . POP_TOP
expr_stmt ::= expr POP_TOP . 
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block \e__come_froms
for38 ::= expr . get_for_iter store for_block _come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP _come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite _come_froms
get_iter ::= expr . GET_ITER
if_and_elsestmtc ::= expr_pjif . expr_pjif c_stmts jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif . expr_pjif c_stmts jb_cfs else_suitec opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif . c_stmts jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif . c_stmts jb_cfs else_suitec opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif c_stmts . jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif c_stmts . jb_cfs else_suitec opt_come_from_except
if_and_stmt ::= expr_pjif . expr COME_FROM stmts \e__come_froms
if_and_stmt ::= expr_pjif . expr COME_FROM stmts _come_froms
if_and_stmt ::= expr_pjif expr . COME_FROM stmts \e__come_froms
if_and_stmt ::= expr_pjif expr . COME_FROM stmts _come_froms
if_and_stmt ::= expr_pjif expr COME_FROM . stmts \e__come_froms
if_and_stmt ::= expr_pjif expr COME_FROM . stmts _come_froms
if_exp ::= expr_pjif . expr jf_cf expr COME_FROM
if_exp ::= expr_pjif . expr jump_forward_else expr
if_exp ::= expr_pjif . expr jump_forward_else expr come_froms
if_exp ::= expr_pjif expr . jf_cf expr COME_FROM
if_exp ::= expr_pjif expr . jump_forward_else expr
if_exp ::= expr_pjif expr . jump_forward_else expr come_froms
if_exp ::= expr_pjif expr jf_cf . expr COME_FROM
if_exp ::= expr_pjif expr jf_cf expr . COME_FROM
if_exp ::= expr_pjif expr jf_cf expr COME_FROM . 
if_exp ::= expr_pjif expr jump_forward_else . expr
if_exp ::= expr_pjif expr jump_forward_else . expr come_froms
if_exp ::= expr_pjif expr jump_forward_else expr . 
if_exp ::= expr_pjif expr jump_forward_else expr . come_froms
if_exp ::= expr_pjif expr jump_forward_else expr come_froms . 
if_exp_37b ::= expr_pjif . expr_pjif jump_forward_else expr
if_exp_37b ::= expr_pjif expr_pjif . jump_forward_else expr
if_exp_compare ::= bool_op . expr jf_cfs expr COME_FROM
if_exp_compare ::= bool_op expr . jf_cfs expr COME_FROM
if_exp_compare ::= expr . expr jf_cfs expr COME_FROM
if_exp_compare ::= expr expr . jf_cfs expr COME_FROM
if_exp_compare38 ::= or_in_ifexp . jump_if_false_cf expr jf_cfs expr come_froms
if_exp_compare38 ::= or_in_ifexp jump_if_false_cf . expr jf_cfs expr come_froms
if_exp_compare38 ::= or_in_ifexp jump_if_false_cf expr . jf_cfs expr come_froms
if_exp_loop ::= expr_pjif . expr POP_JUMP_IF_FALSE_LOOP JUMP_FORWARD come_froms expr
if_exp_loop ::= expr_pjif expr . POP_JUMP_IF_FALSE_LOOP JUMP_FORWARD come_froms expr
if_exp_not ::= expr . POP_JUMP_IF_TRUE expr jump_forward_else expr COME_FROM
if_exp_not ::= expr POP_JUMP_IF_TRUE . expr jump_forward_else expr COME_FROM
if_exp_not ::= expr POP_JUMP_IF_TRUE expr . jump_forward_else expr COME_FROM
if_exp_true ::= expr . JUMP_FORWARD expr COME_FROM
if_exp_true ::= expr JUMP_FORWARD . expr COME_FROM
if_not_stmtc ::= testexprc . ifstmts_jumpc \e__come_froms
if_not_stmtc ::= testexprc . ifstmts_jumpc _come_froms
if_not_stmtc ::= testexprc ifstmts_jumpc . _come_froms
if_not_stmtc ::= testexprc ifstmts_jumpc \e__come_froms . 
if_not_stmtc ::= testexprc ifstmts_jumpc _come_froms . 
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE . come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE . come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE . come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE . come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms . stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms . stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts . jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts . jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs . else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs . else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite . opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except . 
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except . 
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_stmt ::= expr . POP_JUMP_IF_TRUE expr pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE . expr pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr . pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump . come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms . stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms stmts . COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms stmts COME_FROM . 
ifelsestmt ::= bool_op . stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op . stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op . stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op . stmts_opt jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs . else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs . else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs \e_else_suite_opt . opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= bool_op stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except . 
ifelsestmt ::= bool_op stmts_opt jf_cfs else_suite_opt . opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= bool_op stmts_opt jf_cfs else_suite_opt opt_come_from_except . 
ifelsestmt ::= testexpr . stmts_opt JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr . stmts_opt JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr . stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr \e_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt JUMP_FORWARD . else_suite \e__come_froms
ifelsestmt ::= testexpr stmts_opt JUMP_FORWARD . else_suite _come_froms
ifelsestmt ::= testexpr stmts_opt jf_cfs . else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs . else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt . opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt . opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt opt_come_from_except . 
ifelsestmtc ::= testexpr . c_stmts cf_pt else_suite
ifelsestmtc ::= testexpr . c_stmts come_froms else_suite
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr . c_stmts_opt cf_jump_back else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt jb_cfs else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr . c_stmts_opt jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr . c_stmts_opt jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr \e_c_stmts_opt . cf_jump_back else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . jb_cfs else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr \e_c_stmts_opt . jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts . cf_pt else_suite
ifelsestmtc ::= testexpr c_stmts . come_froms else_suite
ifelsestmtc ::= testexpr c_stmts come_froms . else_suite
ifelsestmtc ::= testexpr c_stmts come_froms else_suite . 
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr c_stmts_opt . cf_jump_back else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . jb_cfs else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr c_stmts_opt . jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt . jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suite \e__come_froms
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suite _come_froms
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suitec
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else . else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else . else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec . opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec \e_opt_come_from_except . 
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec opt_come_from_except . 
ifelsestmtc ::= testexpr_cf . c_stmts_opt jb_cf else_suitec
ifelsestmtc ::= testexpr_cf \e_c_stmts_opt . jb_cf else_suitec
ifelsestmtc ::= testexpr_cf c_stmts_opt . jb_cf else_suitec
ifelsestmtr ::= testexpr . return_if_stmts returns
iflaststmt ::= testexpr . returns
iflaststmt ::= testexpr . stmts
iflaststmt ::= testexpr . stmts JUMP_FORWARD
iflaststmt ::= testexpr . stmts_opt JUMP_FORWARD
iflaststmt ::= testexpr \e_stmts_opt . JUMP_FORWARD
iflaststmt ::= testexpr returns . 
iflaststmt ::= testexpr stmts . 
iflaststmt ::= testexpr stmts . JUMP_FORWARD
iflaststmt ::= testexpr stmts JUMP_FORWARD . 
iflaststmt ::= testexpr stmts_opt . JUMP_FORWARD
iflaststmt ::= testexpr stmts_opt JUMP_FORWARD . 
iflaststmtc ::= testexpr . c_stmts
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP POP_BLOCK
iflaststmtc ::= testexpr . c_stmts come_froms
iflaststmtc ::= testexpr c_stmts . 
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP POP_BLOCK
iflaststmtc ::= testexpr c_stmts . come_froms
iflaststmtc ::= testexpr c_stmts come_froms . 
iflaststmtc ::= testexprc . c_stmts
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP \e_opt_pop_block
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP opt_pop_block
iflaststmtc ::= testexprc c_stmts . 
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP \e_opt_pop_block
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP opt_pop_block
ifpoplaststmtc ::= testexpr . POP_TOP \e_c_stmts_opt
ifpoplaststmtc ::= testexpr . POP_TOP c_stmts_opt
ifstmt ::= testexpr . ifstmts_jump \e__come_froms
ifstmt ::= testexpr . ifstmts_jump _come_froms
ifstmt ::= testexpr . stmts \e__come_froms
ifstmt ::= testexpr . stmts _come_froms
ifstmt ::= testexpr ifstmts_jump . _come_froms
ifstmt ::= testexpr ifstmts_jump \e__come_froms . 
ifstmt ::= testexpr ifstmts_jump _come_froms . 
ifstmt ::= testexpr stmts . _come_froms
ifstmt ::= testexpr stmts \e__come_froms . 
ifstmt ::= testexpr stmts _come_froms . 
ifstmt_bool ::= not_and_not . stmts come_froms
ifstmt_bool ::= not_and_not stmts . come_froms
ifstmt_bool ::= or_and1 . stmts come_froms
ifstmt_bool ::= or_and1 stmts . come_froms
ifstmtc ::= testexpr . ifstmts_jumpc
ifstmtc ::= testexpr ifstmts_jumpc . 
ifstmtc ::= testexprc . ifstmts_jumpc \e__come_froms
ifstmtc ::= testexprc . ifstmts_jumpc _come_froms
ifstmtc ::= testexprc ifstmts_jumpc . _come_froms
ifstmtc ::= testexprc ifstmts_jumpc \e__come_froms . 
ifstmtc ::= testexprc ifstmts_jumpc _come_froms . 
ifstmts_jump ::= COME_FROM . stmts COME_FROM
ifstmts_jump ::= COME_FROM . stmts come_froms
ifstmts_jump ::= COME_FROM stmts . COME_FROM
ifstmts_jump ::= COME_FROM stmts . come_froms
ifstmts_jump ::= \e_stmts_opt . JUMP_FORWARD JUMP_FORWARD \e__come_froms
ifstmts_jump ::= \e_stmts_opt . JUMP_FORWARD JUMP_FORWARD _come_froms
ifstmts_jump ::= \e_stmts_opt . come_froms
ifstmts_jump ::= \e_stmts_opt come_froms . 
ifstmts_jump ::= stmts . come_froms
ifstmts_jump ::= stmts come_froms . 
ifstmts_jump ::= stmts_opt . JUMP_FORWARD JUMP_FORWARD \e__come_froms
ifstmts_jump ::= stmts_opt . JUMP_FORWARD JUMP_FORWARD _come_froms
ifstmts_jump ::= stmts_opt . come_froms
ifstmts_jump ::= stmts_opt JUMP_FORWARD . JUMP_FORWARD \e__come_froms
ifstmts_jump ::= stmts_opt JUMP_FORWARD . JUMP_FORWARD _come_froms
ifstmts_jump ::= stmts_opt come_froms . 
ifstmts_jumpc ::= COME_FROM . c_stmts JUMP_FORWARD
ifstmts_jumpc ::= COME_FROM . c_stmts JUMP_LOOP
ifstmts_jumpc ::= COME_FROM . c_stmts come_froms
ifstmts_jumpc ::= COME_FROM c_stmts . JUMP_FORWARD
ifstmts_jumpc ::= COME_FROM c_stmts . JUMP_LOOP
ifstmts_jumpc ::= COME_FROM c_stmts . come_froms
ifstmts_jumpc ::= COME_FROM c_stmts JUMP_FORWARD . 
ifstmts_jumpc ::= \e_c_stmts_opt . come_froms
ifstmts_jumpc ::= \e_c_stmts_opt come_froms . 
ifstmts_jumpc ::= c_stmts . 
ifstmts_jumpc ::= c_stmts . JUMP_LOOP
ifstmts_jumpc ::= c_stmts_opt . come_froms
ifstmts_jumpc ::= c_stmts_opt come_froms . 
ifstmts_jumpc ::= ifstmts_jump . 
import ::= LOAD_CONST . LOAD_CONST alias
import_as37 ::= LOAD_CONST . LOAD_CONST importlist37 store POP_TOP
import_from ::= LOAD_CONST . LOAD_CONST IMPORT_NAME importlist POP_TOP
import_from ::= LOAD_CONST . LOAD_CONST importlist POP_TOP
import_from37 ::= LOAD_CONST . LOAD_CONST IMPORT_NAME_ATTR importlist37 POP_TOP
import_from_as37 ::= LOAD_CONST . LOAD_CONST import_from_attr37 store POP_TOP
import_from_star ::= LOAD_CONST . LOAD_CONST IMPORT_NAME IMPORT_STAR
import_from_star ::= LOAD_CONST . LOAD_CONST IMPORT_NAME_ATTR IMPORT_STAR
importmultiple ::= LOAD_CONST . LOAD_CONST alias imports_cont
jb_cfs ::= \e_come_from_opt . JUMP_LOOP come_froms
jb_cfs ::= come_from_opt . JUMP_LOOP come_froms
jf_cf ::= JUMP_FORWARD . COME_FROM
jf_cf ::= JUMP_FORWARD COME_FROM . 
jf_cfs ::= JUMP_FORWARD . _come_froms
jf_cfs ::= JUMP_FORWARD \e__come_froms . 
jf_cfs ::= JUMP_FORWARD _come_froms . 
jump ::= JUMP_FORWARD . 
jump_forward_else ::= JUMP_FORWARD . _come_froms
jump_forward_else ::= JUMP_FORWARD \e__come_froms . 
jump_forward_else ::= JUMP_FORWARD _come_froms . 
jump_forward_else ::= come_froms . jump COME_FROM
jump_forward_else ::= come_froms jump . COME_FROM
jump_forward_else ::= come_froms jump COME_FROM . 
jump_if_false_cf ::= POP_JUMP_IF_FALSE . COME_FROM
jump_if_false_cf ::= POP_JUMP_IF_FALSE COME_FROM . 
kvlist_0 ::= BUILD_MAP_0 . 
last_stmt ::= iflaststmt . 
lastc_stmt ::= ifelsestmtc . 
lc_setup_finally ::= LOAD_CONST . SETUP_FINALLY
mkfuncdeco ::= expr . mkfuncdeco CALL_FUNCTION_1
mkfuncdeco ::= expr . mkfuncdeco0 CALL_FUNCTION_1
named_expr ::= expr . DUP_TOP store
nand ::= and_parts . expr_pjit come_froms
nor_cond ::= or_parts . expr_pjif
nor_cond ::= or_parts expr_pjif . 
not ::= expr_pjit . 
not_and_not ::= not . expr_pjif COME_FROM
not_and_not ::= not expr_pjif . COME_FROM
not_and_not ::= not expr_pjif COME_FROM . 
not_or ::= and_parts . expr_pjif \e__come_froms
not_or ::= and_parts . expr_pjif _come_froms
not_or ::= and_parts expr_pjif . _come_froms
not_or ::= and_parts expr_pjif \e__come_froms . 
opt_come_from_except ::= come_any_froms . 
or ::= expr_pjit . expr COME_FROM
or ::= expr_pjit . expr jump_if_false_cf
or ::= expr_pjit expr . COME_FROM
or ::= expr_pjit expr . jump_if_false_cf
or ::= expr_pjit expr COME_FROM . 
or ::= expr_pjit expr jump_if_false_cf . 
or ::= or_parts . expr
or ::= or_parts expr . 
or_and1 ::= or_parts . and_parts come_froms
or_and1 ::= or_parts and_parts . come_froms
or_and1 ::= or_parts and_parts come_froms . 
or_and_not ::= expr_pjit . and_not COME_FROM
or_cond ::= not_and_not . expr_pjif come_froms
or_cond ::= or_parts . expr_pjif come_froms
or_cond ::= or_parts expr_pjif . come_froms
or_cond ::= or_parts expr_pjif come_froms . 
or_expr ::= expr . JUMP_IF_TRUE expr COME_FROM
or_in_ifexp ::= expr_pjit . expr
or_in_ifexp ::= expr_pjit expr . 
or_in_ifexp ::= or_in_ifexp . POP_JUMP_IF_TRUE expr
or_in_ifexp ::= or_in_ifexp POP_JUMP_IF_TRUE . expr
or_in_ifexp ::= or_in_ifexp POP_JUMP_IF_TRUE expr . 
or_parts ::= expr_pjit . 
or_parts ::= or_parts . expr_pjit
or_parts ::= or_parts expr_pjit . 
pop_ex_return ::= return_expr . ROT_FOUR POP_EXCEPT RETURN_VALUE
pop_jump ::= POP_JUMP_IF_FALSE . 
pop_jump ::= POP_JUMP_IF_TRUE . 
popb_return ::= return_expr . POP_BLOCK RETURN_VALUE
return ::= return_expr . RETURN_END_IF
return ::= return_expr . RETURN_VALUE
return ::= return_expr . discard_tops RETURN_VALUE
return ::= return_expr RETURN_VALUE . 
return_expr ::= expr . 
return_if_stmt ::= return_expr . RETURN_END_IF
return_if_stmt ::= return_expr . RETURN_END_IF POP_BLOCK
return_if_stmts ::= _stmts . return_if_stmt \e__come_froms
return_if_stmts ::= _stmts . return_if_stmt _come_froms
returns ::= _stmts . return
returns ::= _stmts . return_if_stmt
returns ::= _stmts return . 
returns ::= return . 
sstmt ::= return . RETURN_LAST
sstmt ::= return RETURN_LAST . 
sstmt ::= sstmt . RETURN_LAST
sstmt ::= sstmt RETURN_LAST . 
sstmt ::= stmt . 
stmt ::= assign . 
stmt ::= expr_stmt . 
stmt ::= if_or_not_elsestmt . 
stmt ::= if_or_stmt . 
stmt ::= ifelsestmt . 
stmt ::= ifstmt . 
stmt ::= last_stmt . 
stmt ::= return . 
stmts ::= sstmt . 
stmts ::= stmt . 
stmts ::= stmts . last_stmt
stmts ::= stmts . sstmt
stmts ::= stmts . stmt
stmts ::= stmts last_stmt . 
stmts ::= stmts sstmt . 
stmts ::= stmts stmt . 
stmts_opt ::= stmts . 
store ::= STORE_FAST . 
store ::= expr . STORE_ATTR
store ::= expr STORE_ATTR . 
store ::= store_subscript . 
store_subscript ::= expr . expr STORE_SUBSCR
store_subscript ::= expr expr . STORE_SUBSCR
store_subscript ::= expr expr STORE_SUBSCR . 
subscript ::= expr . expr BINARY_SUBSCR
subscript ::= expr expr . BINARY_SUBSCR
subscript ::= expr expr BINARY_SUBSCR . 
subscript2 ::= expr . expr DUP_TOP_TWO BINARY_SUBSCR
subscript2 ::= expr expr . DUP_TOP_TWO BINARY_SUBSCR
suite_stmts ::= _stmts . 
suite_stmts ::= returns . 
testexpr ::= testfalse . 
testexpr ::= testtrue . 
testexpr_cf ::= testexpr . come_froms
testexpr_cf ::= testexpr come_froms . 
testexprc ::= testexpr . 
testfalse ::= expr_pjif . 
testfalse ::= or_cond . 
testfalsec ::= expr . POP_JUMP_IF_TRUE_LOOP
testtrue ::= expr_pjit . 
testtrue ::= nor_cond . 
testtrue ::= or_in_ifexp . POP_JUMP_IF_TRUE
testtrue ::= or_in_ifexp POP_JUMP_IF_TRUE . 
testtruec ::= expr . POP_JUMP_IF_FALSE_LOOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP \e_suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP \e_suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP suite_stmts_opt END_FINALLY POP_TOP
unary_not ::= expr . UNARY_NOT
unary_op ::= expr . unary_operator
while1stmt ::= \e__come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts COME_FROM . JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts . COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts COME_FROM . JUMP_LOOP COME_FROM_LOOP
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= _come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= _come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= \e__come_froms . pass JUMP_LOOP
whileTruestmt38 ::= \e__come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= _come_froms . pass JUMP_LOOP
whileTruestmt38 ::= _come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms bool_op . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms bool_op . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms bool_op c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms bool_op c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr . returns POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts . come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts come_froms . 
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr returns . POP_BLOCK
whilestmt38 ::= \e__come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= _come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr . c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr . c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr . returns POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexpr c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr c_stmts . come_froms
whilestmt38 ::= _come_froms testexpr c_stmts come_froms . 
whilestmt38 ::= _come_froms testexpr c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr returns . POP_BLOCK
whilestmt38 ::= _come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP _come_froms
yield ::= expr . YIELD_VALUE
yield_from ::= expr . GET_YIELD_FROM_ITER LOAD_CONST YIELD_FROM
Instruction context:
   
 L. 200       204  LOAD_GLOBAL              json
                 206  LOAD_METHOD              dumps
                 208  LOAD_FAST                'response'
                 210  CALL_METHOD_1         1  '1 positional argument'
->               212  RETURN_VALUE     

-- Stacks of completed symbols:
START ::= |- stmts . 
_come_froms ::= \e__come_froms . COME_FROM
_come_froms ::= \e__come_froms COME_FROM . 
_come_froms ::= _come_froms . COME_FROM
_come_froms ::= _come_froms COME_FROM . 
_stmts ::= stmts . 
and_cond ::= and_parts . expr_pjif \e__come_froms
and_cond ::= and_parts . expr_pjif _come_froms
and_cond ::= and_parts expr_pjif . _come_froms
and_cond ::= and_parts expr_pjif \e__come_froms . 
and_cond ::= testfalse . expr_pjif \e__come_froms
and_cond ::= testfalse . expr_pjif _come_froms
and_cond ::= testfalse expr_pjif . _come_froms
and_cond ::= testfalse expr_pjif \e__come_froms . 
and_not ::= expr_pjif . expr_pjit
and_or_cond ::= and_parts . expr POP_JUMP_IF_TRUE come_froms expr_pjif \e__come_froms
and_or_cond ::= and_parts . expr POP_JUMP_IF_TRUE come_froms expr_pjif _come_froms
and_or_cond ::= and_parts expr . POP_JUMP_IF_TRUE come_froms expr_pjif \e__come_froms
and_or_cond ::= and_parts expr . POP_JUMP_IF_TRUE come_froms expr_pjif _come_froms
and_or_expr ::= and_parts . expr jitop_come_from_expr COME_FROM
and_or_expr ::= and_parts expr . jitop_come_from_expr COME_FROM
and_parts ::= and_parts . expr_pjif
and_parts ::= and_parts expr_pjif . 
and_parts ::= expr_pjif . 
assert2 ::= expr . POP_JUMP_IF_TRUE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE . LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL . expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL expr . CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL expr CALL_FUNCTION_1 . RAISE_VARARGS_1
assert2_not ::= expr . POP_JUMP_IF_FALSE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE . LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE LOAD_GLOBAL . expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE LOAD_GLOBAL expr . CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE LOAD_GLOBAL expr CALL_FUNCTION_1 . RAISE_VARARGS_1
assert_invert ::= testtrue . LOAD_GLOBAL RAISE_VARARGS_1
assert_invert ::= testtrue LOAD_GLOBAL . RAISE_VARARGS_1
assign ::= expr . DUP_TOP designList
assign ::= expr . store
assign ::= expr store . 
assign2 ::= expr . expr ROT_TWO store store
assign2 ::= expr expr . ROT_TWO store store
assign3 ::= expr . expr expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr . expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr expr . ROT_THREE ROT_TWO store store store
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
attribute ::= expr . LOAD_ATTR
attribute ::= expr LOAD_ATTR . 
attribute37 ::= expr . LOAD_METHOD
attribute37 ::= expr LOAD_METHOD . 
aug_assign1 ::= expr . expr inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr . expr inplace_op store
aug_assign1 ::= expr expr . inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr expr . inplace_op store
aug_assign2 ::= expr . DUP_TOP LOAD_ATTR expr inplace_op ROT_TWO STORE_ATTR
await_expr ::= expr . GET_AWAITABLE LOAD_CONST YIELD_FROM
bin_op ::= expr . expr binary_operator
bin_op ::= expr expr . binary_operator
bin_op ::= expr expr binary_operator . 
binary_operator ::= BINARY_ADD . 
binary_operator ::= BINARY_MODULO . 
binary_operator ::= BINARY_SUBTRACT . 
bool_op ::= and_cond . 
c_compare_chained37 ::= expr . c_compare_chained_middlea_37
c_compare_chained37_false ::= expr . c_compare_chained_middleb_false_37
c_compare_chained37_false ::= expr . c_compare_chained_right_false_37
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suitec
c_nand ::= and_parts . expr_pjitt come_froms
c_returns ::= c_stmts . return
c_returns ::= c_stmts return . 
c_returns ::= returns . 
c_stmt ::= if_not_stmtc . 
c_stmt ::= ifelsestmtc . 
c_stmt ::= ifstmtc . 
c_stmt ::= stmt . 
c_stmts ::= _stmts . 
c_stmts ::= _stmts . lastc_stmt
c_stmts ::= c_returns . 
c_stmts ::= c_stmt . 
c_stmts ::= c_stmts . c_stmt
c_stmts ::= c_stmts c_stmt . 
c_stmts_opt ::= c_stmts . 
call ::= expr . CALL_FUNCTION_0
call ::= expr . CALL_METHOD_0
call ::= expr . expr CALL_FUNCTION_1
call ::= expr . expr CALL_METHOD_1
call ::= expr . expr expr CALL_METHOD_2
call ::= expr . expr expr expr CALL_FUNCTION_3
call ::= expr . expr expr expr CALL_METHOD_3
call ::= expr CALL_METHOD_0 . 
call ::= expr expr . CALL_FUNCTION_1
call ::= expr expr . CALL_METHOD_1
call ::= expr expr . expr CALL_METHOD_2
call ::= expr expr . expr expr CALL_FUNCTION_3
call ::= expr expr . expr expr CALL_METHOD_3
call ::= expr expr CALL_FUNCTION_1 . 
call ::= expr expr CALL_METHOD_1 . 
call ::= expr expr expr . CALL_METHOD_2
call ::= expr expr expr . expr CALL_FUNCTION_3
call ::= expr expr expr . expr CALL_METHOD_3
call ::= expr expr expr CALL_METHOD_2 . 
call ::= expr expr expr expr . CALL_FUNCTION_3
call ::= expr expr expr expr . CALL_METHOD_3
call_kw36 ::= expr . expr LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr . expr expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr . expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr . LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr expr . expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr . expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr LOAD_CONST . CALL_FUNCTION_KW_1
call_kw36 ::= expr expr expr . LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr LOAD_CONST . CALL_FUNCTION_KW_2
call_kw36 ::= expr expr expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr expr LOAD_CONST . CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5 . 
cf_jump_back ::= COME_FROM . JUMP_LOOP
cf_pt ::= COME_FROM . POP_TOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE_LOOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE_LOOP
classdefdeco1 ::= expr . classdefdeco1 CALL_FUNCTION_1
classdefdeco1 ::= expr . classdefdeco2 CALL_FUNCTION_1
come_any_from ::= COME_FROM . 
come_any_froms ::= come_any_from . 
come_any_froms ::= come_any_froms . come_any_from
come_any_froms ::= come_any_froms come_any_from . 
come_from_opt ::= COME_FROM . 
come_froms ::= COME_FROM . 
come_froms ::= come_froms . COME_FROM
come_froms ::= come_froms COME_FROM . 
compare ::= compare_single . 
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP \e__come_froms
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP _come_froms
compare_chained37 ::= expr . chained_parts
compare_chained37 ::= expr . compare_chained_middlea_37
compare_chained37 ::= expr . compare_chained_middlec_37
compare_chained37_false ::= expr . compare_chained_middle_false_37
compare_chained37_false ::= expr . compare_chained_middleb_false_37
compare_chained37_false ::= expr . compare_chained_right_false_37
compare_chained_and ::= expr . chained_parts compare_chained_righta_false_37 come_froms POP_TOP JUMP_FORWARD COME_FROM negated_testtrue come_froms
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_middle COME_FROM
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_right COME_FROM
compare_single ::= expr . expr COMPARE_OP
compare_single ::= expr expr . COMPARE_OP
compare_single ::= expr expr COMPARE_OP . 
continues ::= _stmts . lastc_stmt continue
dict ::= expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr . expr expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr . expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr . expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr LOAD_CONST . BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= kvlist_0 . 
dict_comp_func ::= BUILD_MAP_0 . LOAD_ARG for_iter store comp_iter JUMP_LOOP \e__come_froms ending_return
dict_comp_func ::= BUILD_MAP_0 . LOAD_ARG for_iter store comp_iter JUMP_LOOP _come_froms ending_return
else_suite ::= returns . 
else_suite ::= suite_stmts . 
else_suite_opt ::= else_suite . 
else_suitec ::= c_returns . 
else_suitec ::= c_stmts . 
else_suitec ::= suite_stmts . 
expr ::= LOAD_CONST . 
expr ::= LOAD_FAST . 
expr ::= LOAD_GLOBAL . 
expr ::= LOAD_STR . 
expr ::= attribute . 
expr ::= attribute37 . 
expr ::= bin_op . 
expr ::= call . 
expr ::= call_kw36 . 
expr ::= compare . 
expr ::= dict . 
expr ::= if_exp . 
expr ::= not . 
expr ::= subscript . 
expr_jifop ::= expr . JUMP_IF_FALSE_OR_POP
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP \e__come_froms
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP _come_froms
expr_jitop ::= expr . JUMP_IF_TRUE_OR_POP
expr_pjif ::= expr . POP_JUMP_IF_FALSE
expr_pjif ::= expr POP_JUMP_IF_FALSE . 
expr_pjit ::= expr . POP_JUMP_IF_TRUE
expr_pjit ::= expr POP_JUMP_IF_TRUE . 
expr_pjitt ::= expr . pjump_ift
expr_stmt ::= expr . POP_TOP
expr_stmt ::= expr POP_TOP . 
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block \e__come_froms
for38 ::= expr . get_for_iter store for_block _come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP _come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite _come_froms
get_iter ::= expr . GET_ITER
if_and_elsestmtc ::= expr_pjif . expr_pjif c_stmts jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif . expr_pjif c_stmts jb_cfs else_suitec opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif . c_stmts jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif . c_stmts jb_cfs else_suitec opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif c_stmts . jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif c_stmts . jb_cfs else_suitec opt_come_from_except
if_and_stmt ::= expr_pjif . expr COME_FROM stmts \e__come_froms
if_and_stmt ::= expr_pjif . expr COME_FROM stmts _come_froms
if_and_stmt ::= expr_pjif expr . COME_FROM stmts \e__come_froms
if_and_stmt ::= expr_pjif expr . COME_FROM stmts _come_froms
if_and_stmt ::= expr_pjif expr COME_FROM . stmts \e__come_froms
if_and_stmt ::= expr_pjif expr COME_FROM . stmts _come_froms
if_exp ::= expr_pjif . expr jf_cf expr COME_FROM
if_exp ::= expr_pjif . expr jump_forward_else expr
if_exp ::= expr_pjif . expr jump_forward_else expr come_froms
if_exp ::= expr_pjif expr . jf_cf expr COME_FROM
if_exp ::= expr_pjif expr . jump_forward_else expr
if_exp ::= expr_pjif expr . jump_forward_else expr come_froms
if_exp ::= expr_pjif expr jf_cf . expr COME_FROM
if_exp ::= expr_pjif expr jf_cf expr . COME_FROM
if_exp ::= expr_pjif expr jf_cf expr COME_FROM . 
if_exp ::= expr_pjif expr jump_forward_else . expr
if_exp ::= expr_pjif expr jump_forward_else . expr come_froms
if_exp ::= expr_pjif expr jump_forward_else expr . 
if_exp ::= expr_pjif expr jump_forward_else expr . come_froms
if_exp ::= expr_pjif expr jump_forward_else expr come_froms . 
if_exp_37b ::= expr_pjif . expr_pjif jump_forward_else expr
if_exp_37b ::= expr_pjif expr_pjif . jump_forward_else expr
if_exp_compare ::= bool_op . expr jf_cfs expr COME_FROM
if_exp_compare ::= bool_op expr . jf_cfs expr COME_FROM
if_exp_compare ::= expr . expr jf_cfs expr COME_FROM
if_exp_compare ::= expr expr . jf_cfs expr COME_FROM
if_exp_compare38 ::= or_in_ifexp . jump_if_false_cf expr jf_cfs expr come_froms
if_exp_compare38 ::= or_in_ifexp jump_if_false_cf . expr jf_cfs expr come_froms
if_exp_compare38 ::= or_in_ifexp jump_if_false_cf expr . jf_cfs expr come_froms
if_exp_loop ::= expr_pjif . expr POP_JUMP_IF_FALSE_LOOP JUMP_FORWARD come_froms expr
if_exp_loop ::= expr_pjif expr . POP_JUMP_IF_FALSE_LOOP JUMP_FORWARD come_froms expr
if_exp_not ::= expr . POP_JUMP_IF_TRUE expr jump_forward_else expr COME_FROM
if_exp_not ::= expr POP_JUMP_IF_TRUE . expr jump_forward_else expr COME_FROM
if_exp_not ::= expr POP_JUMP_IF_TRUE expr . jump_forward_else expr COME_FROM
if_exp_true ::= expr . JUMP_FORWARD expr COME_FROM
if_exp_true ::= expr JUMP_FORWARD . expr COME_FROM
if_not_stmtc ::= testexprc . ifstmts_jumpc \e__come_froms
if_not_stmtc ::= testexprc . ifstmts_jumpc _come_froms
if_not_stmtc ::= testexprc ifstmts_jumpc . _come_froms
if_not_stmtc ::= testexprc ifstmts_jumpc \e__come_froms . 
if_not_stmtc ::= testexprc ifstmts_jumpc _come_froms . 
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE . come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE . come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE . come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE . come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms . stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms . stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts . jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts . jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs . else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs . else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite . opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except . 
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except . 
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_stmt ::= expr . POP_JUMP_IF_TRUE expr pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE . expr pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr . pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump . come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms . stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms stmts . COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms stmts COME_FROM . 
ifelsestmt ::= bool_op . stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op . stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op . stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op . stmts_opt jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs . else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs . else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs \e_else_suite_opt . opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= bool_op stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except . 
ifelsestmt ::= bool_op stmts_opt jf_cfs else_suite_opt . opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= bool_op stmts_opt jf_cfs else_suite_opt opt_come_from_except . 
ifelsestmt ::= testexpr . stmts_opt JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr . stmts_opt JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr . stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr \e_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt JUMP_FORWARD . else_suite \e__come_froms
ifelsestmt ::= testexpr stmts_opt JUMP_FORWARD . else_suite _come_froms
ifelsestmt ::= testexpr stmts_opt jf_cfs . else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs . else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt . opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt . opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt opt_come_from_except . 
ifelsestmtc ::= testexpr . c_stmts cf_pt else_suite
ifelsestmtc ::= testexpr . c_stmts come_froms else_suite
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr . c_stmts_opt cf_jump_back else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt jb_cfs else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr . c_stmts_opt jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr . c_stmts_opt jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr \e_c_stmts_opt . cf_jump_back else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . jb_cfs else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr \e_c_stmts_opt . jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts . cf_pt else_suite
ifelsestmtc ::= testexpr c_stmts . come_froms else_suite
ifelsestmtc ::= testexpr c_stmts come_froms . else_suite
ifelsestmtc ::= testexpr c_stmts come_froms else_suite . 
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr c_stmts_opt . cf_jump_back else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . jb_cfs else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr c_stmts_opt . jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt . jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suite \e__come_froms
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suite _come_froms
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suitec
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else . else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else . else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec . opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec \e_opt_come_from_except . 
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec opt_come_from_except . 
ifelsestmtc ::= testexpr_cf . c_stmts_opt jb_cf else_suitec
ifelsestmtc ::= testexpr_cf \e_c_stmts_opt . jb_cf else_suitec
ifelsestmtc ::= testexpr_cf c_stmts_opt . jb_cf else_suitec
ifelsestmtr ::= testexpr . return_if_stmts returns
iflaststmt ::= testexpr . returns
iflaststmt ::= testexpr . stmts
iflaststmt ::= testexpr . stmts JUMP_FORWARD
iflaststmt ::= testexpr . stmts_opt JUMP_FORWARD
iflaststmt ::= testexpr \e_stmts_opt . JUMP_FORWARD
iflaststmt ::= testexpr returns . 
iflaststmt ::= testexpr stmts . 
iflaststmt ::= testexpr stmts . JUMP_FORWARD
iflaststmt ::= testexpr stmts JUMP_FORWARD . 
iflaststmt ::= testexpr stmts_opt . JUMP_FORWARD
iflaststmt ::= testexpr stmts_opt JUMP_FORWARD . 
iflaststmtc ::= testexpr . c_stmts
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP POP_BLOCK
iflaststmtc ::= testexpr . c_stmts come_froms
iflaststmtc ::= testexpr c_stmts . 
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP POP_BLOCK
iflaststmtc ::= testexpr c_stmts . come_froms
iflaststmtc ::= testexpr c_stmts come_froms . 
iflaststmtc ::= testexprc . c_stmts
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP \e_opt_pop_block
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP opt_pop_block
iflaststmtc ::= testexprc c_stmts . 
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP \e_opt_pop_block
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP opt_pop_block
ifpoplaststmtc ::= testexpr . POP_TOP \e_c_stmts_opt
ifpoplaststmtc ::= testexpr . POP_TOP c_stmts_opt
ifstmt ::= testexpr . ifstmts_jump \e__come_froms
ifstmt ::= testexpr . ifstmts_jump _come_froms
ifstmt ::= testexpr . stmts \e__come_froms
ifstmt ::= testexpr . stmts _come_froms
ifstmt ::= testexpr ifstmts_jump . _come_froms
ifstmt ::= testexpr ifstmts_jump \e__come_froms . 
ifstmt ::= testexpr ifstmts_jump _come_froms . 
ifstmt ::= testexpr stmts . _come_froms
ifstmt ::= testexpr stmts \e__come_froms . 
ifstmt ::= testexpr stmts _come_froms . 
ifstmt_bool ::= not_and_not . stmts come_froms
ifstmt_bool ::= not_and_not stmts . come_froms
ifstmt_bool ::= or_and1 . stmts come_froms
ifstmt_bool ::= or_and1 stmts . come_froms
ifstmtc ::= testexpr . ifstmts_jumpc
ifstmtc ::= testexpr ifstmts_jumpc . 
ifstmtc ::= testexprc . ifstmts_jumpc \e__come_froms
ifstmtc ::= testexprc . ifstmts_jumpc _come_froms
ifstmtc ::= testexprc ifstmts_jumpc . _come_froms
ifstmtc ::= testexprc ifstmts_jumpc \e__come_froms . 
ifstmtc ::= testexprc ifstmts_jumpc _come_froms . 
ifstmts_jump ::= COME_FROM . stmts COME_FROM
ifstmts_jump ::= COME_FROM . stmts come_froms
ifstmts_jump ::= COME_FROM stmts . COME_FROM
ifstmts_jump ::= COME_FROM stmts . come_froms
ifstmts_jump ::= \e_stmts_opt . JUMP_FORWARD JUMP_FORWARD \e__come_froms
ifstmts_jump ::= \e_stmts_opt . JUMP_FORWARD JUMP_FORWARD _come_froms
ifstmts_jump ::= \e_stmts_opt . come_froms
ifstmts_jump ::= \e_stmts_opt come_froms . 
ifstmts_jump ::= stmts . come_froms
ifstmts_jump ::= stmts come_froms . 
ifstmts_jump ::= stmts_opt . JUMP_FORWARD JUMP_FORWARD \e__come_froms
ifstmts_jump ::= stmts_opt . JUMP_FORWARD JUMP_FORWARD _come_froms
ifstmts_jump ::= stmts_opt . come_froms
ifstmts_jump ::= stmts_opt JUMP_FORWARD . JUMP_FORWARD \e__come_froms
ifstmts_jump ::= stmts_opt JUMP_FORWARD . JUMP_FORWARD _come_froms
ifstmts_jump ::= stmts_opt come_froms . 
ifstmts_jumpc ::= COME_FROM . c_stmts JUMP_FORWARD
ifstmts_jumpc ::= COME_FROM . c_stmts JUMP_LOOP
ifstmts_jumpc ::= COME_FROM . c_stmts come_froms
ifstmts_jumpc ::= COME_FROM c_stmts . JUMP_FORWARD
ifstmts_jumpc ::= COME_FROM c_stmts . JUMP_LOOP
ifstmts_jumpc ::= COME_FROM c_stmts . come_froms
ifstmts_jumpc ::= COME_FROM c_stmts JUMP_FORWARD . 
ifstmts_jumpc ::= \e_c_stmts_opt . come_froms
ifstmts_jumpc ::= \e_c_stmts_opt come_froms . 
ifstmts_jumpc ::= c_stmts . 
ifstmts_jumpc ::= c_stmts . JUMP_LOOP
ifstmts_jumpc ::= c_stmts_opt . come_froms
ifstmts_jumpc ::= c_stmts_opt come_froms . 
ifstmts_jumpc ::= ifstmts_jump . 
import ::= LOAD_CONST . LOAD_CONST alias
import_as37 ::= LOAD_CONST . LOAD_CONST importlist37 store POP_TOP
import_from ::= LOAD_CONST . LOAD_CONST IMPORT_NAME importlist POP_TOP
import_from ::= LOAD_CONST . LOAD_CONST importlist POP_TOP
import_from37 ::= LOAD_CONST . LOAD_CONST IMPORT_NAME_ATTR importlist37 POP_TOP
import_from_as37 ::= LOAD_CONST . LOAD_CONST import_from_attr37 store POP_TOP
import_from_star ::= LOAD_CONST . LOAD_CONST IMPORT_NAME IMPORT_STAR
import_from_star ::= LOAD_CONST . LOAD_CONST IMPORT_NAME_ATTR IMPORT_STAR
importmultiple ::= LOAD_CONST . LOAD_CONST alias imports_cont
jb_cfs ::= \e_come_from_opt . JUMP_LOOP come_froms
jb_cfs ::= come_from_opt . JUMP_LOOP come_froms
jf_cf ::= JUMP_FORWARD . COME_FROM
jf_cf ::= JUMP_FORWARD COME_FROM . 
jf_cfs ::= JUMP_FORWARD . _come_froms
jf_cfs ::= JUMP_FORWARD \e__come_froms . 
jf_cfs ::= JUMP_FORWARD _come_froms . 
jump ::= JUMP_FORWARD . 
jump_forward_else ::= JUMP_FORWARD . _come_froms
jump_forward_else ::= JUMP_FORWARD \e__come_froms . 
jump_forward_else ::= JUMP_FORWARD _come_froms . 
jump_forward_else ::= come_froms . jump COME_FROM
jump_forward_else ::= come_froms jump . COME_FROM
jump_forward_else ::= come_froms jump COME_FROM . 
jump_if_false_cf ::= POP_JUMP_IF_FALSE . COME_FROM
jump_if_false_cf ::= POP_JUMP_IF_FALSE COME_FROM . 
kvlist_0 ::= BUILD_MAP_0 . 
last_stmt ::= iflaststmt . 
lastc_stmt ::= ifelsestmtc . 
lc_setup_finally ::= LOAD_CONST . SETUP_FINALLY
mkfuncdeco ::= expr . mkfuncdeco CALL_FUNCTION_1
mkfuncdeco ::= expr . mkfuncdeco0 CALL_FUNCTION_1
named_expr ::= expr . DUP_TOP store
nand ::= and_parts . expr_pjit come_froms
nor_cond ::= or_parts . expr_pjif
nor_cond ::= or_parts expr_pjif . 
not ::= expr_pjit . 
not_and_not ::= not . expr_pjif COME_FROM
not_and_not ::= not expr_pjif . COME_FROM
not_and_not ::= not expr_pjif COME_FROM . 
not_or ::= and_parts . expr_pjif \e__come_froms
not_or ::= and_parts . expr_pjif _come_froms
not_or ::= and_parts expr_pjif . _come_froms
not_or ::= and_parts expr_pjif \e__come_froms . 
opt_come_from_except ::= come_any_froms . 
or ::= expr_pjit . expr COME_FROM
or ::= expr_pjit . expr jump_if_false_cf
or ::= expr_pjit expr . COME_FROM
or ::= expr_pjit expr . jump_if_false_cf
or ::= expr_pjit expr COME_FROM . 
or ::= expr_pjit expr jump_if_false_cf . 
or ::= or_parts . expr
or ::= or_parts expr . 
or_and1 ::= or_parts . and_parts come_froms
or_and1 ::= or_parts and_parts . come_froms
or_and1 ::= or_parts and_parts come_froms . 
or_and_not ::= expr_pjit . and_not COME_FROM
or_cond ::= not_and_not . expr_pjif come_froms
or_cond ::= or_parts . expr_pjif come_froms
or_cond ::= or_parts expr_pjif . come_froms
or_cond ::= or_parts expr_pjif come_froms . 
or_expr ::= expr . JUMP_IF_TRUE expr COME_FROM
or_in_ifexp ::= expr_pjit . expr
or_in_ifexp ::= expr_pjit expr . 
or_in_ifexp ::= or_in_ifexp . POP_JUMP_IF_TRUE expr
or_in_ifexp ::= or_in_ifexp POP_JUMP_IF_TRUE . expr
or_in_ifexp ::= or_in_ifexp POP_JUMP_IF_TRUE expr . 
or_parts ::= expr_pjit . 
or_parts ::= or_parts . expr_pjit
or_parts ::= or_parts expr_pjit . 
pop_ex_return ::= return_expr . ROT_FOUR POP_EXCEPT RETURN_VALUE
pop_jump ::= POP_JUMP_IF_FALSE . 
pop_jump ::= POP_JUMP_IF_TRUE . 
popb_return ::= return_expr . POP_BLOCK RETURN_VALUE
return ::= return_expr . RETURN_END_IF
return ::= return_expr . RETURN_VALUE
return ::= return_expr . discard_tops RETURN_VALUE
return ::= return_expr RETURN_VALUE . 
return_expr ::= expr . 
return_if_stmt ::= return_expr . RETURN_END_IF
return_if_stmt ::= return_expr . RETURN_END_IF POP_BLOCK
return_if_stmts ::= _stmts . return_if_stmt \e__come_froms
return_if_stmts ::= _stmts . return_if_stmt _come_froms
returns ::= _stmts . return
returns ::= _stmts . return_if_stmt
returns ::= _stmts return . 
returns ::= return . 
sstmt ::= return . RETURN_LAST
sstmt ::= return RETURN_LAST . 
sstmt ::= sstmt . RETURN_LAST
sstmt ::= sstmt RETURN_LAST . 
sstmt ::= stmt . 
stmt ::= assign . 
stmt ::= expr_stmt . 
stmt ::= if_or_not_elsestmt . 
stmt ::= if_or_stmt . 
stmt ::= ifelsestmt . 
stmt ::= ifstmt . 
stmt ::= last_stmt . 
stmt ::= return . 
stmts ::= sstmt . 
stmts ::= stmt . 
stmts ::= stmts . last_stmt
stmts ::= stmts . sstmt
stmts ::= stmts . stmt
stmts ::= stmts last_stmt . 
stmts ::= stmts sstmt . 
stmts ::= stmts stmt . 
stmts_opt ::= stmts . 
store ::= STORE_FAST . 
store ::= expr . STORE_ATTR
store ::= expr STORE_ATTR . 
store ::= store_subscript . 
store_subscript ::= expr . expr STORE_SUBSCR
store_subscript ::= expr expr . STORE_SUBSCR
store_subscript ::= expr expr STORE_SUBSCR . 
subscript ::= expr . expr BINARY_SUBSCR
subscript ::= expr expr . BINARY_SUBSCR
subscript ::= expr expr BINARY_SUBSCR . 
subscript2 ::= expr . expr DUP_TOP_TWO BINARY_SUBSCR
subscript2 ::= expr expr . DUP_TOP_TWO BINARY_SUBSCR
suite_stmts ::= _stmts . 
suite_stmts ::= returns . 
testexpr ::= testfalse . 
testexpr ::= testtrue . 
testexpr_cf ::= testexpr . come_froms
testexpr_cf ::= testexpr come_froms . 
testexprc ::= testexpr . 
testfalse ::= expr_pjif . 
testfalse ::= or_cond . 
testfalsec ::= expr . POP_JUMP_IF_TRUE_LOOP
testtrue ::= expr_pjit . 
testtrue ::= nor_cond . 
testtrue ::= or_in_ifexp . POP_JUMP_IF_TRUE
testtrue ::= or_in_ifexp POP_JUMP_IF_TRUE . 
testtruec ::= expr . POP_JUMP_IF_FALSE_LOOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP \e_suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP \e_suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP suite_stmts_opt END_FINALLY POP_TOP
unary_not ::= expr . UNARY_NOT
unary_op ::= expr . unary_operator
while1stmt ::= \e__come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts COME_FROM . JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts . COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts COME_FROM . JUMP_LOOP COME_FROM_LOOP
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= _come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= _come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= \e__come_froms . pass JUMP_LOOP
whileTruestmt38 ::= \e__come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= _come_froms . pass JUMP_LOOP
whileTruestmt38 ::= _come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms bool_op . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms bool_op . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms bool_op c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms bool_op c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr . returns POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts . come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts come_froms . 
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr returns . POP_BLOCK
whilestmt38 ::= \e__come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= _come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr . c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr . c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr . returns POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexpr c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr c_stmts . come_froms
whilestmt38 ::= _come_froms testexpr c_stmts come_froms . 
whilestmt38 ::= _come_froms testexpr c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr returns . POP_BLOCK
whilestmt38 ::= _come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP _come_froms
yield ::= expr . YIELD_VALUE
yield_from ::= expr . GET_YIELD_FROM_ITER LOAD_CONST YIELD_FROM
Instruction context:
   
 L. 232       232  LOAD_GLOBAL              json
                 234  LOAD_METHOD              dumps
                 236  LOAD_FAST                'response'
                 238  CALL_METHOD_1         1  '1 positional argument'
->               240  RETURN_VALUE     

-- Stacks of completed symbols:
START ::= |- stmts . 
_come_froms ::= \e__come_froms . COME_FROM
_come_froms ::= \e__come_froms COME_FROM . 
_come_froms ::= _come_froms . COME_FROM
_come_froms ::= _come_froms COME_FROM . 
_stmts ::= stmts . 
and_cond ::= and_parts . expr_pjif \e__come_froms
and_cond ::= and_parts . expr_pjif _come_froms
and_cond ::= and_parts expr_pjif . _come_froms
and_cond ::= and_parts expr_pjif \e__come_froms . 
and_cond ::= testfalse . expr_pjif \e__come_froms
and_cond ::= testfalse . expr_pjif _come_froms
and_cond ::= testfalse expr_pjif . _come_froms
and_cond ::= testfalse expr_pjif \e__come_froms . 
and_not ::= expr_pjif . expr_pjit
and_not ::= expr_pjif expr_pjit . 
and_or_cond ::= and_parts . expr POP_JUMP_IF_TRUE come_froms expr_pjif \e__come_froms
and_or_cond ::= and_parts . expr POP_JUMP_IF_TRUE come_froms expr_pjif _come_froms
and_or_cond ::= and_parts expr . POP_JUMP_IF_TRUE come_froms expr_pjif \e__come_froms
and_or_cond ::= and_parts expr . POP_JUMP_IF_TRUE come_froms expr_pjif _come_froms
and_or_cond ::= and_parts expr POP_JUMP_IF_TRUE . come_froms expr_pjif \e__come_froms
and_or_cond ::= and_parts expr POP_JUMP_IF_TRUE . come_froms expr_pjif _come_froms
and_or_cond ::= and_parts expr POP_JUMP_IF_TRUE come_froms . expr_pjif \e__come_froms
and_or_cond ::= and_parts expr POP_JUMP_IF_TRUE come_froms . expr_pjif _come_froms
and_or_expr ::= and_parts . expr jitop_come_from_expr COME_FROM
and_or_expr ::= and_parts expr . jitop_come_from_expr COME_FROM
and_parts ::= and_parts . expr_pjif
and_parts ::= and_parts expr_pjif . 
and_parts ::= expr_pjif . 
assert2 ::= expr . POP_JUMP_IF_TRUE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE . LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL . expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL expr . CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL expr CALL_FUNCTION_1 . RAISE_VARARGS_1
assert2_not ::= expr . POP_JUMP_IF_FALSE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE . LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE LOAD_GLOBAL . expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE LOAD_GLOBAL expr . CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE LOAD_GLOBAL expr CALL_FUNCTION_1 . RAISE_VARARGS_1
assert_invert ::= testtrue . LOAD_GLOBAL RAISE_VARARGS_1
assert_invert ::= testtrue LOAD_GLOBAL . RAISE_VARARGS_1
assign ::= expr . DUP_TOP designList
assign ::= expr . store
assign ::= expr store . 
assign2 ::= expr . expr ROT_TWO store store
assign2 ::= expr expr . ROT_TWO store store
assign3 ::= expr . expr expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr . expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr expr . ROT_THREE ROT_TWO store store store
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
attribute ::= expr . LOAD_ATTR
attribute ::= expr LOAD_ATTR . 
attribute37 ::= expr . LOAD_METHOD
attribute37 ::= expr LOAD_METHOD . 
aug_assign1 ::= expr . expr inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr . expr inplace_op store
aug_assign1 ::= expr expr . inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr expr . inplace_op store
aug_assign2 ::= expr . DUP_TOP LOAD_ATTR expr inplace_op ROT_TWO STORE_ATTR
await_expr ::= expr . GET_AWAITABLE LOAD_CONST YIELD_FROM
bin_op ::= expr . expr binary_operator
bin_op ::= expr expr . binary_operator
bin_op ::= expr expr binary_operator . 
binary_operator ::= BINARY_MODULO . 
bool_op ::= and_cond . 
break ::= POP_BLOCK . BREAK_LOOP
break ::= POP_BLOCK . POP_TOP BREAK_LOOP
break ::= POP_BLOCK . POP_TOP JUMP_FORWARD
break ::= POP_EXCEPT . BREAK_LOOP
break ::= POP_EXCEPT . JUMP_FORWARD
break ::= POP_EXCEPT JUMP_FORWARD . 
c_compare_chained37 ::= expr . c_compare_chained_middlea_37
c_compare_chained37_false ::= expr . c_compare_chained_middleb_false_37
c_compare_chained37_false ::= expr . c_compare_chained_right_false_37
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suitec
c_nand ::= and_parts . expr_pjitt come_froms
c_nand ::= and_parts expr_pjitt . come_froms
c_nand ::= and_parts expr_pjitt come_froms . 
c_returns ::= c_stmts . return
c_returns ::= c_stmts return . 
c_returns ::= returns . 
c_stmt ::= c_try_except . 
c_stmt ::= if_not_stmtc . 
c_stmt ::= ifelsestmtc . 
c_stmt ::= ifstmtc . 
c_stmt ::= stmt . 
c_stmts ::= _stmts . 
c_stmts ::= _stmts . lastc_stmt
c_stmts ::= c_returns . 
c_stmts ::= c_stmt . 
c_stmts ::= c_stmts . c_stmt
c_stmts ::= c_stmts c_stmt . 
c_stmts_opt ::= c_stmts . 
c_suite_stmts ::= c_stmts . 
c_suite_stmts ::= suite_stmts . 
c_suite_stmts_opt ::= c_suite_stmts . 
c_suite_stmts_opt ::= suite_stmts_opt . 
c_try_except ::= SETUP_FINALLY . c_suite_stmts POP_BLOCK except_handler38
c_try_except ::= SETUP_FINALLY c_suite_stmts . POP_BLOCK except_handler38
c_try_except ::= SETUP_FINALLY c_suite_stmts POP_BLOCK . except_handler38
c_try_except ::= SETUP_FINALLY c_suite_stmts POP_BLOCK except_handler38 . 
c_tryfinallybstmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK BEGIN_FINALLY . COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK BEGIN_FINALLY . COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
call ::= expr . CALL_FUNCTION_0
call ::= expr . CALL_METHOD_0
call ::= expr . expr CALL_FUNCTION_1
call ::= expr . expr CALL_METHOD_1
call ::= expr . expr expr CALL_METHOD_2
call ::= expr . expr expr expr CALL_FUNCTION_3
call ::= expr . expr expr expr CALL_METHOD_3
call ::= expr CALL_METHOD_0 . 
call ::= expr expr . CALL_FUNCTION_1
call ::= expr expr . CALL_METHOD_1
call ::= expr expr . expr CALL_METHOD_2
call ::= expr expr . expr expr CALL_FUNCTION_3
call ::= expr expr . expr expr CALL_METHOD_3
call ::= expr expr CALL_FUNCTION_1 . 
call ::= expr expr CALL_METHOD_1 . 
call ::= expr expr expr . CALL_METHOD_2
call ::= expr expr expr . expr CALL_FUNCTION_3
call ::= expr expr expr . expr CALL_METHOD_3
call ::= expr expr expr CALL_METHOD_2 . 
call ::= expr expr expr expr . CALL_FUNCTION_3
call ::= expr expr expr expr . CALL_METHOD_3
call ::= expr expr expr expr CALL_METHOD_3 . 
call_kw36 ::= expr . expr LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr . expr expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr . expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr . expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr . LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr expr . expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr . expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr LOAD_CONST . CALL_FUNCTION_KW_1
call_kw36 ::= expr expr LOAD_CONST CALL_FUNCTION_KW_1 . 
call_kw36 ::= expr expr expr . LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr LOAD_CONST . CALL_FUNCTION_KW_2
call_kw36 ::= expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr LOAD_CONST . CALL_FUNCTION_KW_3
call_kw36 ::= expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_3 . 
call_kw36 ::= expr expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr LOAD_CONST . CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_4 . 
call_kw36 ::= expr expr expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr expr LOAD_CONST . CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5 . 
cf_jump_back ::= COME_FROM . JUMP_LOOP
cf_pt ::= COME_FROM . POP_TOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE_LOOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE_LOOP
classdefdeco1 ::= expr . classdefdeco1 CALL_FUNCTION_1
classdefdeco1 ::= expr . classdefdeco2 CALL_FUNCTION_1
come_any_from ::= COME_FROM . 
come_any_froms ::= come_any_from . 
come_any_froms ::= come_any_froms . come_any_from
come_any_froms ::= come_any_froms come_any_from . 
come_from_except_clauses ::= \e_come_from_except_clauses . COME_FROM_EXCEPT_CLAUSE
come_from_opt ::= COME_FROM . 
come_froms ::= COME_FROM . 
come_froms ::= come_froms . COME_FROM
come_froms ::= come_froms COME_FROM . 
compare ::= compare_single . 
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP \e__come_froms
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP _come_froms
compare_chained37 ::= expr . chained_parts
compare_chained37 ::= expr . compare_chained_middlea_37
compare_chained37 ::= expr . compare_chained_middlec_37
compare_chained37_false ::= expr . compare_chained_middle_false_37
compare_chained37_false ::= expr . compare_chained_middleb_false_37
compare_chained37_false ::= expr . compare_chained_right_false_37
compare_chained_and ::= expr . chained_parts compare_chained_righta_false_37 come_froms POP_TOP JUMP_FORWARD COME_FROM negated_testtrue come_froms
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_middle COME_FROM
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_right COME_FROM
compare_single ::= expr . expr COMPARE_OP
compare_single ::= expr expr . COMPARE_OP
compare_single ::= expr expr COMPARE_OP . 
cond_except_stmts_opt ::= \e_cond_except_stmts_opt . cond_except_stmt
continue ::= POP_EXCEPT . JUMP_LOOP
continues ::= _stmts . lastc_stmt continue
delete ::= DELETE_FAST . 
dict ::= expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_2
dict ::= expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr . expr expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_2
dict ::= expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr . expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr LOAD_CONST . BUILD_CONST_KEY_MAP_2
dict ::= expr expr LOAD_CONST BUILD_CONST_KEY_MAP_2 . 
dict ::= expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr . expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr LOAD_CONST . BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= kvlist_0 . 
dict_comp_func ::= BUILD_MAP_0 . LOAD_ARG for_iter store comp_iter JUMP_LOOP \e__come_froms ending_return
dict_comp_func ::= BUILD_MAP_0 . LOAD_ARG for_iter store comp_iter JUMP_LOOP _come_froms ending_return
else_suite ::= returns . 
else_suite ::= suite_stmts . 
else_suite_opt ::= else_suite . 
else_suitec ::= c_returns . 
else_suitec ::= c_stmts . 
else_suitec ::= suite_stmts . 
except_cond1 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . POP_TOP POP_TOP POP_EXCEPT
except_cond2 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store . POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store . POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP . come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt . 
except_handler38 ::= jump . COME_FROM_FINALLY except_stmts END_FINALLY \e_opt_come_from_except
except_handler38 ::= jump . COME_FROM_FINALLY except_stmts END_FINALLY opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY . except_stmts END_FINALLY \e_opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY . except_stmts END_FINALLY opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY except_stmts . END_FINALLY \e_opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY except_stmts . END_FINALLY opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY except_stmts END_FINALLY . opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY except_stmts END_FINALLY \e_opt_come_from_except . 
except_handler38 ::= jump COME_FROM_FINALLY except_stmts END_FINALLY opt_come_from_except . 
except_ret38 ::= SETUP_FINALLY . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
except_ret38 ::= SETUP_FINALLY . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
except_ret38 ::= SETUP_FINALLY expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
except_ret38 ::= SETUP_FINALLY expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
except_ret38b ::= SETUP_FINALLY . suite_stmts expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY . suite_stmts expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY suite_stmts . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY suite_stmts . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38c ::= SETUP_FINALLY . suite_stmts expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY expr STORE_FAST DELETE_FAST END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM END_FINALLY come_any_froms
except_ret38c ::= SETUP_FINALLY suite_stmts . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY expr STORE_FAST DELETE_FAST END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM END_FINALLY come_any_froms
except_return_value ::= POP_BLOCK . return
except_return_value2 ::= POP_BLOCK . return
except_stmt ::= except_cond2 . except_ret38b
except_stmt ::= except_cond2 . except_suite \e_come_from_opt
except_stmt ::= except_cond2 . except_suite come_from_opt
except_stmt ::= except_cond2 . except_suite_finalize
except_stmt ::= except_cond2 except_suite . come_from_opt
except_stmt ::= except_cond2 except_suite \e_come_from_opt . 
except_stmt ::= except_cond2 except_suite come_from_opt . 
except_stmts ::= except_stmt . 
except_stmts ::= except_stmts . except_stmt
except_suite ::= \e_c_stmts_opt . COME_FROM POP_EXCEPT jump_except COME_FROM
except_suite ::= \e_c_stmts_opt . POP_EXCEPT POP_TOP JUMP_FORWARD POP_EXCEPT jump_except
except_suite ::= \e_c_stmts_opt . POP_EXCEPT jump_except
except_suite ::= c_stmts_opt . COME_FROM POP_EXCEPT jump_except COME_FROM
except_suite ::= c_stmts_opt . POP_EXCEPT POP_TOP JUMP_FORWARD POP_EXCEPT jump_except
except_suite ::= c_stmts_opt . POP_EXCEPT jump_except
except_suite ::= c_stmts_opt POP_EXCEPT . POP_TOP JUMP_FORWARD POP_EXCEPT jump_except
except_suite ::= c_stmts_opt POP_EXCEPT . jump_except
except_suite ::= c_stmts_opt POP_EXCEPT jump_except . 
except_suite_finalize ::= SETUP_FINALLY . c_stmts_opt except_var_finalize END_FINALLY POP_EXCEPT jump
except_suite_finalize ::= SETUP_FINALLY . c_stmts_opt except_var_finalize END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY . returns COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY . returns COME_FROM_FINALLY suite_stmts_opt END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY \e_c_stmts_opt . except_var_finalize END_FINALLY POP_EXCEPT jump
except_suite_finalize ::= SETUP_FINALLY \e_c_stmts_opt . except_var_finalize END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY c_stmts_opt . except_var_finalize END_FINALLY POP_EXCEPT jump
except_suite_finalize ::= SETUP_FINALLY c_stmts_opt . except_var_finalize END_FINALLY jump
except_var_finalize ::= POP_BLOCK . LOAD_CONST COME_FROM_FINALLY LOAD_CONST store delete
except_var_finalize ::= POP_BLOCK . POP_EXCEPT LOAD_CONST COME_FROM_FINALLY LOAD_CONST store delete
expr ::= LOAD_CONST . 
expr ::= LOAD_FAST . 
expr ::= LOAD_GLOBAL . 
expr ::= LOAD_STR . 
expr ::= attribute . 
expr ::= attribute37 . 
expr ::= bin_op . 
expr ::= call . 
expr ::= call_kw36 . 
expr ::= compare . 
expr ::= dict . 
expr ::= if_exp . 
expr ::= not . 
expr ::= subscript . 
expr ::= tuple . 
expr ::= unary_not . 
expr_jifop ::= expr . JUMP_IF_FALSE_OR_POP
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP \e__come_froms
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP _come_froms
expr_jitop ::= expr . JUMP_IF_TRUE_OR_POP
expr_pjif ::= expr . POP_JUMP_IF_FALSE
expr_pjif ::= expr POP_JUMP_IF_FALSE . 
expr_pjit ::= expr . POP_JUMP_IF_TRUE
expr_pjit ::= expr POP_JUMP_IF_TRUE . 
expr_pjitt ::= expr . pjump_ift
expr_pjitt ::= expr pjump_ift . 
expr_stmt ::= expr . POP_TOP
expr_stmt ::= expr POP_TOP . 
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block \e__come_froms
for38 ::= expr . get_for_iter store for_block _come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP _come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite _come_froms
get_iter ::= expr . GET_ITER
if_and_elsestmtc ::= expr_pjif . expr_pjif c_stmts jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif . expr_pjif c_stmts jb_cfs else_suitec opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif . c_stmts jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif . c_stmts jb_cfs else_suitec opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif c_stmts . jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif c_stmts . jb_cfs else_suitec opt_come_from_except
if_and_stmt ::= expr_pjif . expr COME_FROM stmts \e__come_froms
if_and_stmt ::= expr_pjif . expr COME_FROM stmts _come_froms
if_and_stmt ::= expr_pjif expr . COME_FROM stmts \e__come_froms
if_and_stmt ::= expr_pjif expr . COME_FROM stmts _come_froms
if_and_stmt ::= expr_pjif expr COME_FROM . stmts \e__come_froms
if_and_stmt ::= expr_pjif expr COME_FROM . stmts _come_froms
if_exp ::= expr_pjif . expr jf_cf expr COME_FROM
if_exp ::= expr_pjif . expr jump_forward_else expr
if_exp ::= expr_pjif . expr jump_forward_else expr come_froms
if_exp ::= expr_pjif expr . jf_cf expr COME_FROM
if_exp ::= expr_pjif expr . jump_forward_else expr
if_exp ::= expr_pjif expr . jump_forward_else expr come_froms
if_exp ::= expr_pjif expr jf_cf . expr COME_FROM
if_exp ::= expr_pjif expr jf_cf expr . COME_FROM
if_exp ::= expr_pjif expr jf_cf expr COME_FROM . 
if_exp ::= expr_pjif expr jump_forward_else . expr
if_exp ::= expr_pjif expr jump_forward_else . expr come_froms
if_exp ::= expr_pjif expr jump_forward_else expr . 
if_exp ::= expr_pjif expr jump_forward_else expr . come_froms
if_exp ::= expr_pjif expr jump_forward_else expr come_froms . 
if_exp_37b ::= expr_pjif . expr_pjif jump_forward_else expr
if_exp_37b ::= expr_pjif expr_pjif . jump_forward_else expr
if_exp_compare ::= bool_op . expr jf_cfs expr COME_FROM
if_exp_compare ::= bool_op expr . jf_cfs expr COME_FROM
if_exp_compare ::= expr . expr jf_cfs expr COME_FROM
if_exp_compare ::= expr expr . jf_cfs expr COME_FROM
if_exp_compare38 ::= or_in_ifexp . jump_if_false_cf expr jf_cfs expr come_froms
if_exp_compare38 ::= or_in_ifexp jump_if_false_cf . expr jf_cfs expr come_froms
if_exp_compare38 ::= or_in_ifexp jump_if_false_cf expr . jf_cfs expr come_froms
if_exp_loop ::= expr_pjif . expr POP_JUMP_IF_FALSE_LOOP JUMP_FORWARD come_froms expr
if_exp_loop ::= expr_pjif expr . POP_JUMP_IF_FALSE_LOOP JUMP_FORWARD come_froms expr
if_exp_not ::= expr . POP_JUMP_IF_TRUE expr jump_forward_else expr COME_FROM
if_exp_not ::= expr POP_JUMP_IF_TRUE . expr jump_forward_else expr COME_FROM
if_exp_not ::= expr POP_JUMP_IF_TRUE expr . jump_forward_else expr COME_FROM
if_exp_true ::= expr . JUMP_FORWARD expr COME_FROM
if_exp_true ::= expr JUMP_FORWARD . expr COME_FROM
if_not_stmtc ::= testexprc . ifstmts_jumpc \e__come_froms
if_not_stmtc ::= testexprc . ifstmts_jumpc _come_froms
if_not_stmtc ::= testexprc ifstmts_jumpc . _come_froms
if_not_stmtc ::= testexprc ifstmts_jumpc \e__come_froms . 
if_not_stmtc ::= testexprc ifstmts_jumpc _come_froms . 
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE . come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE . come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE . come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE . come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms . stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms . stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts . jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts . jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_stmt ::= expr . POP_JUMP_IF_TRUE expr pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE . expr pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr . pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump . come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms . stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms stmts . COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms stmts COME_FROM . 
ifelsestmt ::= bool_op . stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op . stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op . stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op . stmts_opt jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs . else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs . else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs \e_else_suite_opt . opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= bool_op stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except . 
ifelsestmt ::= testexpr . stmts_opt JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr . stmts_opt JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr . stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr \e_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt JUMP_FORWARD . else_suite \e__come_froms
ifelsestmt ::= testexpr stmts_opt JUMP_FORWARD . else_suite _come_froms
ifelsestmt ::= testexpr stmts_opt jf_cfs . else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs . else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt . opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt . opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt opt_come_from_except . 
ifelsestmtc ::= testexpr . c_stmts cf_pt else_suite
ifelsestmtc ::= testexpr . c_stmts come_froms else_suite
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr . c_stmts_opt cf_jump_back else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt jb_cfs else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr . c_stmts_opt jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr . c_stmts_opt jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr \e_c_stmts_opt . cf_jump_back else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . jb_cfs else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr \e_c_stmts_opt . jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts . cf_pt else_suite
ifelsestmtc ::= testexpr c_stmts . come_froms else_suite
ifelsestmtc ::= testexpr c_stmts come_froms . else_suite
ifelsestmtc ::= testexpr c_stmts come_froms else_suite . 
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr c_stmts_opt . cf_jump_back else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . jb_cfs else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr c_stmts_opt . jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt . jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suite \e__come_froms
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suite _come_froms
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suitec
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else . else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else . else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec . opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec \e_opt_come_from_except . 
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec opt_come_from_except . 
ifelsestmtc ::= testexpr_cf . c_stmts_opt jb_cf else_suitec
ifelsestmtc ::= testexpr_cf \e_c_stmts_opt . jb_cf else_suitec
ifelsestmtc ::= testexpr_cf c_stmts_opt . jb_cf else_suitec
ifelsestmtr ::= testexpr . return_if_stmts returns
iflaststmt ::= testexpr . returns
iflaststmt ::= testexpr . stmts
iflaststmt ::= testexpr . stmts JUMP_FORWARD
iflaststmt ::= testexpr . stmts_opt JUMP_FORWARD
iflaststmt ::= testexpr \e_stmts_opt . JUMP_FORWARD
iflaststmt ::= testexpr stmts . 
iflaststmt ::= testexpr stmts . JUMP_FORWARD
iflaststmt ::= testexpr stmts JUMP_FORWARD . 
iflaststmt ::= testexpr stmts_opt . JUMP_FORWARD
iflaststmt ::= testexpr stmts_opt JUMP_FORWARD . 
iflaststmtc ::= testexpr . c_stmts
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP POP_BLOCK
iflaststmtc ::= testexpr . c_stmts come_froms
iflaststmtc ::= testexpr c_stmts . 
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP POP_BLOCK
iflaststmtc ::= testexpr c_stmts . come_froms
iflaststmtc ::= testexpr c_stmts come_froms . 
iflaststmtc ::= testexprc . c_stmts
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP \e_opt_pop_block
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP opt_pop_block
iflaststmtc ::= testexprc c_stmts . 
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP \e_opt_pop_block
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP opt_pop_block
ifpoplaststmtc ::= testexpr . POP_TOP \e_c_stmts_opt
ifpoplaststmtc ::= testexpr . POP_TOP c_stmts_opt
ifstmt ::= testexpr . ifstmts_jump \e__come_froms
ifstmt ::= testexpr . ifstmts_jump _come_froms
ifstmt ::= testexpr . stmts \e__come_froms
ifstmt ::= testexpr . stmts _come_froms
ifstmt ::= testexpr ifstmts_jump . _come_froms
ifstmt ::= testexpr ifstmts_jump \e__come_froms . 
ifstmt ::= testexpr ifstmts_jump _come_froms . 
ifstmt ::= testexpr stmts . _come_froms
ifstmt ::= testexpr stmts \e__come_froms . 
ifstmt ::= testexpr stmts _come_froms . 
ifstmt_bool ::= not_and_not . stmts come_froms
ifstmt_bool ::= not_and_not stmts . come_froms
ifstmt_bool ::= or_and1 . stmts come_froms
ifstmt_bool ::= or_and1 stmts . come_froms
ifstmtc ::= testexpr . ifstmts_jumpc
ifstmtc ::= testexpr ifstmts_jumpc . 
ifstmtc ::= testexprc . ifstmts_jumpc \e__come_froms
ifstmtc ::= testexprc . ifstmts_jumpc _come_froms
ifstmtc ::= testexprc ifstmts_jumpc . _come_froms
ifstmtc ::= testexprc ifstmts_jumpc \e__come_froms . 
ifstmtc ::= testexprc ifstmts_jumpc _come_froms . 
ifstmts_jump ::= COME_FROM . stmts COME_FROM
ifstmts_jump ::= COME_FROM . stmts come_froms
ifstmts_jump ::= COME_FROM stmts . COME_FROM
ifstmts_jump ::= COME_FROM stmts . come_froms
ifstmts_jump ::= \e_stmts_opt . JUMP_FORWARD JUMP_FORWARD \e__come_froms
ifstmts_jump ::= \e_stmts_opt . JUMP_FORWARD JUMP_FORWARD _come_froms
ifstmts_jump ::= \e_stmts_opt . come_froms
ifstmts_jump ::= \e_stmts_opt come_froms . 
ifstmts_jump ::= stmts . come_froms
ifstmts_jump ::= stmts come_froms . 
ifstmts_jump ::= stmts_opt . JUMP_FORWARD JUMP_FORWARD \e__come_froms
ifstmts_jump ::= stmts_opt . JUMP_FORWARD JUMP_FORWARD _come_froms
ifstmts_jump ::= stmts_opt . come_froms
ifstmts_jump ::= stmts_opt JUMP_FORWARD . JUMP_FORWARD \e__come_froms
ifstmts_jump ::= stmts_opt JUMP_FORWARD . JUMP_FORWARD _come_froms
ifstmts_jump ::= stmts_opt come_froms . 
ifstmts_jumpc ::= COME_FROM . c_stmts JUMP_FORWARD
ifstmts_jumpc ::= COME_FROM . c_stmts JUMP_LOOP
ifstmts_jumpc ::= COME_FROM . c_stmts come_froms
ifstmts_jumpc ::= COME_FROM c_stmts . JUMP_FORWARD
ifstmts_jumpc ::= COME_FROM c_stmts . JUMP_LOOP
ifstmts_jumpc ::= COME_FROM c_stmts . come_froms
ifstmts_jumpc ::= COME_FROM c_stmts JUMP_FORWARD . 
ifstmts_jumpc ::= \e_c_stmts_opt . come_froms
ifstmts_jumpc ::= \e_c_stmts_opt come_froms . 
ifstmts_jumpc ::= c_stmts . 
ifstmts_jumpc ::= c_stmts . JUMP_LOOP
ifstmts_jumpc ::= c_stmts_opt . come_froms
ifstmts_jumpc ::= c_stmts_opt come_froms . 
ifstmts_jumpc ::= ifstmts_jump . 
import ::= LOAD_CONST . LOAD_CONST alias
import_as37 ::= LOAD_CONST . LOAD_CONST importlist37 store POP_TOP
import_from ::= LOAD_CONST . LOAD_CONST IMPORT_NAME importlist POP_TOP
import_from ::= LOAD_CONST . LOAD_CONST importlist POP_TOP
import_from37 ::= LOAD_CONST . LOAD_CONST IMPORT_NAME_ATTR importlist37 POP_TOP
import_from_as37 ::= LOAD_CONST . LOAD_CONST import_from_attr37 store POP_TOP
import_from_star ::= LOAD_CONST . LOAD_CONST IMPORT_NAME IMPORT_STAR
import_from_star ::= LOAD_CONST . LOAD_CONST IMPORT_NAME_ATTR IMPORT_STAR
importmultiple ::= LOAD_CONST . LOAD_CONST alias imports_cont
jb_cfs ::= \e_come_from_opt . JUMP_LOOP come_froms
jb_cfs ::= come_from_opt . JUMP_LOOP come_froms
jf_cf ::= JUMP_FORWARD . COME_FROM
jf_cf ::= JUMP_FORWARD COME_FROM . 
jf_cfs ::= JUMP_FORWARD . _come_froms
jf_cfs ::= JUMP_FORWARD \e__come_froms . 
jf_cfs ::= JUMP_FORWARD _come_froms . 
jump ::= JUMP_FORWARD . 
jump_except ::= JUMP_FORWARD . 
jump_excepts ::= jump_except . 
jump_excepts ::= jump_excepts . jump_except
jump_forward_else ::= JUMP_FORWARD . _come_froms
jump_forward_else ::= JUMP_FORWARD \e__come_froms . 
jump_forward_else ::= JUMP_FORWARD _come_froms . 
jump_forward_else ::= come_froms . jump COME_FROM
jump_forward_else ::= come_froms jump . COME_FROM
jump_forward_else ::= come_froms jump COME_FROM . 
jump_if_false_cf ::= POP_JUMP_IF_FALSE . COME_FROM
jump_if_false_cf ::= POP_JUMP_IF_FALSE COME_FROM . 
kvlist_0 ::= BUILD_MAP_0 . 
last_stmt ::= iflaststmt . 
lastc_stmt ::= ifelsestmtc . 
lc_setup_finally ::= LOAD_CONST . SETUP_FINALLY
mkfuncdeco ::= expr . mkfuncdeco CALL_FUNCTION_1
mkfuncdeco ::= expr . mkfuncdeco0 CALL_FUNCTION_1
named_expr ::= expr . DUP_TOP store
nand ::= and_parts . expr_pjit come_froms
nand ::= and_parts expr_pjit . come_froms
nand ::= and_parts expr_pjit come_froms . 
nor_cond ::= or_parts . expr_pjif
nor_cond ::= or_parts expr_pjif . 
not ::= expr_pjit . 
not_and_not ::= not . expr_pjif COME_FROM
not_and_not ::= not expr_pjif . COME_FROM
not_and_not ::= not expr_pjif COME_FROM . 
not_or ::= and_parts . expr_pjif \e__come_froms
not_or ::= and_parts . expr_pjif _come_froms
not_or ::= and_parts expr_pjif . _come_froms
not_or ::= and_parts expr_pjif \e__come_froms . 
opt_come_from_except ::= come_any_froms . 
or ::= expr_pjit . expr COME_FROM
or ::= expr_pjit . expr jump_if_false_cf
or ::= expr_pjit expr . COME_FROM
or ::= expr_pjit expr . jump_if_false_cf
or ::= expr_pjit expr COME_FROM . 
or ::= expr_pjit expr jump_if_false_cf . 
or ::= or_parts . expr
or ::= or_parts expr . 
or_and1 ::= or_parts . and_parts come_froms
or_and1 ::= or_parts and_parts . come_froms
or_and1 ::= or_parts and_parts come_froms . 
or_and_not ::= expr_pjit . and_not COME_FROM
or_cond ::= not_and_not . expr_pjif come_froms
or_cond ::= or_parts . expr_pjif come_froms
or_cond ::= or_parts expr_pjif . come_froms
or_cond ::= or_parts expr_pjif come_froms . 
or_expr ::= expr . JUMP_IF_TRUE expr COME_FROM
or_in_ifexp ::= expr_pjit . expr
or_in_ifexp ::= expr_pjit expr . 
or_in_ifexp ::= or_in_ifexp . POP_JUMP_IF_TRUE expr
or_in_ifexp ::= or_in_ifexp POP_JUMP_IF_TRUE . expr
or_in_ifexp ::= or_in_ifexp POP_JUMP_IF_TRUE expr . 
or_parts ::= expr_pjit . 
or_parts ::= or_parts . expr_pjit
or_parts ::= or_parts expr_pjit . 
pjump_ift ::= POP_JUMP_IF_TRUE . 
pop_ex_return ::= return_expr . ROT_FOUR POP_EXCEPT RETURN_VALUE
pop_jump ::= POP_JUMP_IF_FALSE . 
pop_jump ::= POP_JUMP_IF_TRUE . 
popb_return ::= return_expr . POP_BLOCK RETURN_VALUE
return ::= return_expr . RETURN_END_IF
return ::= return_expr . RETURN_VALUE
return ::= return_expr . discard_tops RETURN_VALUE
return ::= return_expr RETURN_VALUE . 
return_except ::= stmts . POP_BLOCK return
return_except ::= stmts POP_BLOCK . return
return_expr ::= expr . 
return_if_stmt ::= return_expr . RETURN_END_IF
return_if_stmt ::= return_expr . RETURN_END_IF POP_BLOCK
return_if_stmts ::= _stmts . return_if_stmt \e__come_froms
return_if_stmts ::= _stmts . return_if_stmt _come_froms
returns ::= _stmts . return
returns ::= _stmts . return_if_stmt
returns ::= _stmts return . 
returns ::= return . 
returns_in_except ::= _stmts . except_return_value
returns_in_except2 ::= _stmts . except_return_value2
sf_pb_call_returns ::= SETUP_FINALLY . POP_BLOCK CALL_FINALLY returns
sf_pb_call_returns ::= SETUP_FINALLY . POP_BLOCK POP_EXCEPT CALL_FINALLY returns
sstmt ::= return . RETURN_LAST
sstmt ::= return RETURN_LAST . 
sstmt ::= sstmt . RETURN_LAST
sstmt ::= sstmt RETURN_LAST . 
sstmt ::= stmt . 
stmt ::= assign . 
stmt ::= delete . 
stmt ::= expr_stmt . 
stmt ::= if_or_stmt . 
stmt ::= ifelsestmt . 
stmt ::= ifstmt . 
stmt ::= last_stmt . 
stmt ::= return . 
stmt ::= try_except . 
stmt ::= tryfinallystmt . 
stmts ::= sstmt . 
stmts ::= stmt . 
stmts ::= stmts . last_stmt
stmts ::= stmts . sstmt
stmts ::= stmts . stmt
stmts ::= stmts last_stmt . 
stmts ::= stmts sstmt . 
stmts ::= stmts stmt . 
stmts_opt ::= stmts . 
store ::= STORE_FAST . 
store ::= expr . STORE_ATTR
store ::= expr STORE_ATTR . 
store ::= store_subscript . 
store_subscript ::= expr . expr STORE_SUBSCR
store_subscript ::= expr expr . STORE_SUBSCR
store_subscript ::= expr expr STORE_SUBSCR . 
subscript ::= expr . expr BINARY_SUBSCR
subscript ::= expr expr . BINARY_SUBSCR
subscript ::= expr expr BINARY_SUBSCR . 
subscript2 ::= expr . expr DUP_TOP_TWO BINARY_SUBSCR
subscript2 ::= expr expr . DUP_TOP_TWO BINARY_SUBSCR
suite_stmts ::= _stmts . 
suite_stmts ::= returns . 
suite_stmts_opt ::= suite_stmts . 
testexpr ::= testfalse . 
testexpr ::= testtrue . 
testexpr_cf ::= testexpr . come_froms
testexpr_cf ::= testexpr come_froms . 
testexprc ::= testexpr . 
testexprc ::= testtruec . 
testfalse ::= expr_pjif . 
testfalse ::= nand . 
testfalse ::= or_cond . 
testfalsec ::= expr . POP_JUMP_IF_TRUE_LOOP
testtrue ::= expr_pjit . 
testtrue ::= nor_cond . 
testtrue ::= or_in_ifexp . POP_JUMP_IF_TRUE
testtrue ::= or_in_ifexp POP_JUMP_IF_TRUE . 
testtruec ::= c_nand . 
testtruec ::= expr . POP_JUMP_IF_FALSE_LOOP
try_elsestmtl38 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 . COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 . COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 COME_FROM . else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 COME_FROM . else_suitec opt_come_from_except
try_except ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38
try_except ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38
try_except ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38
try_except ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 . 
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 . jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 . jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 jump_excepts . come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 jump_excepts \e_come_from_except_clauses . 
try_except38 ::= SETUP_FINALLY . POP_BLOCK POP_TOP \e_suite_stmts_opt except_handler38a
try_except38 ::= SETUP_FINALLY . POP_BLOCK POP_TOP suite_stmts_opt except_handler38a
try_except38 ::= SETUP_FINALLY . POP_BLOCK suite_stmts except_handler38b
try_except38r ::= SETUP_FINALLY . return_except except_handler38b
try_except38r2 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt . POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r4 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond1 return COME_FROM END_FINALLY
try_except38r5 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond1 except_ret38d COME_FROM END_FINALLY
try_except38r5 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond1 except_suite COME_FROM END_FINALLY COME_FROM
try_except38r5 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond2 except_ret38b END_FINALLY COME_FROM
try_except38r6 ::= SETUP_FINALLY . returns_in_except2 COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP except_ret38d END_FINALLY
try_except38r7 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except_as ::= SETUP_FINALLY . POP_BLOCK suite_stmts except_handler_as END_FINALLY COME_FROM
try_except_as ::= SETUP_FINALLY . suite_stmts except_handler_as END_FINALLY COME_FROM
try_except_as ::= SETUP_FINALLY suite_stmts . except_handler_as END_FINALLY COME_FROM
try_except_ret38 ::= SETUP_FINALLY . returns except_ret38a
try_except_ret38a ::= SETUP_FINALLY . returns except_handler38c END_FINALLY \e_come_from_opt
try_except_ret38a ::= SETUP_FINALLY . returns except_handler38c END_FINALLY come_from_opt
tryfinally36 ::= SETUP_FINALLY . returns COME_FROM_FINALLY suite_stmts
tryfinally38_return ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 . except_ret38c
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP \e_suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP \e_suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP suite_stmts_opt END_FINALLY POP_TOP
tryfinally38rstmt3 ::= SETUP_FINALLY . expr POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY ss_end_finally
tryfinally38rstmt3 ::= SETUP_FINALLY expr . POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY ss_end_finally
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY . COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY . COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY . COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY . COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY . POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY . POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally_return_stmt1 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt1 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt1 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt1 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt2 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY
tryfinally_return_stmt2 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY
tryfinally_return_stmt2 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY
tryfinally_return_stmt2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY
tryfinallystmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY . COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY . COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY . suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt . END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt . END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY . 
tryfinallystmt_break ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tuple ::= expr . expr BUILD_TUPLE_2
tuple ::= expr expr . BUILD_TUPLE_2
tuple ::= expr expr BUILD_TUPLE_2 . 
unary_not ::= expr . UNARY_NOT
unary_not ::= expr UNARY_NOT . 
unary_op ::= expr . unary_operator
while1stmt ::= \e__come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts COME_FROM . JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts . COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts COME_FROM . JUMP_LOOP COME_FROM_LOOP
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= _come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= _come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= \e__come_froms . pass JUMP_LOOP
whileTruestmt38 ::= \e__come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= _come_froms . pass JUMP_LOOP
whileTruestmt38 ::= _come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms bool_op . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms bool_op . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms bool_op c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms bool_op c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr . returns POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts . come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts come_froms . 
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= _come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms bool_op . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms bool_op . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms bool_op c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms bool_op c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr . c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr . c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr . returns POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexpr c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr c_stmts . come_froms
whilestmt38 ::= _come_froms testexpr c_stmts come_froms . 
whilestmt38 ::= _come_froms testexpr c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP _come_froms
yield ::= expr . YIELD_VALUE
yield_from ::= expr . GET_YIELD_FROM_ITER LOAD_CONST YIELD_FROM
Instruction context:
   
 L. 401       938  LOAD_GLOBAL              json
                 940  LOAD_METHOD              dumps
                 942  LOAD_FAST                'response'
                 944  CALL_METHOD_1         1  '1 positional argument'
->               946  RETURN_VALUE     

-- Stacks of completed symbols:
START ::= |- stmts . 
_come_froms ::= \e__come_froms . COME_FROM
_come_froms ::= \e__come_froms COME_FROM . 
_come_froms ::= _come_froms . COME_FROM
_come_froms ::= _come_froms COME_FROM . 
_stmts ::= stmts . 
and_cond ::= and_parts . expr_pjif \e__come_froms
and_cond ::= and_parts . expr_pjif _come_froms
and_cond ::= and_parts expr_pjif . _come_froms
and_cond ::= and_parts expr_pjif \e__come_froms . 
and_cond ::= testfalse . expr_pjif \e__come_froms
and_cond ::= testfalse . expr_pjif _come_froms
and_cond ::= testfalse expr_pjif . _come_froms
and_cond ::= testfalse expr_pjif \e__come_froms . 
and_not ::= expr_pjif . expr_pjit
and_or_cond ::= and_parts . expr POP_JUMP_IF_TRUE come_froms expr_pjif \e__come_froms
and_or_cond ::= and_parts . expr POP_JUMP_IF_TRUE come_froms expr_pjif _come_froms
and_or_cond ::= and_parts expr . POP_JUMP_IF_TRUE come_froms expr_pjif \e__come_froms
and_or_cond ::= and_parts expr . POP_JUMP_IF_TRUE come_froms expr_pjif _come_froms
and_or_expr ::= and_parts . expr jitop_come_from_expr COME_FROM
and_or_expr ::= and_parts expr . jitop_come_from_expr COME_FROM
and_parts ::= and_parts . expr_pjif
and_parts ::= and_parts expr_pjif . 
and_parts ::= expr_pjif . 
assert2 ::= expr . POP_JUMP_IF_TRUE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE . LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL . expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL expr . CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL expr CALL_FUNCTION_1 . RAISE_VARARGS_1
assert2_not ::= expr . POP_JUMP_IF_FALSE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE . LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE LOAD_GLOBAL . expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert_invert ::= testtrue . LOAD_GLOBAL RAISE_VARARGS_1
assert_invert ::= testtrue LOAD_GLOBAL . RAISE_VARARGS_1
assign ::= expr . DUP_TOP designList
assign ::= expr . store
assign ::= expr store . 
assign2 ::= expr . expr ROT_TWO store store
assign2 ::= expr expr . ROT_TWO store store
assign3 ::= expr . expr expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr . expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr expr . ROT_THREE ROT_TWO store store store
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
attribute ::= expr . LOAD_ATTR
attribute ::= expr LOAD_ATTR . 
attribute37 ::= expr . LOAD_METHOD
attribute37 ::= expr LOAD_METHOD . 
aug_assign1 ::= expr . expr inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr . expr inplace_op store
aug_assign1 ::= expr expr . inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr expr . inplace_op store
aug_assign2 ::= expr . DUP_TOP LOAD_ATTR expr inplace_op ROT_TWO STORE_ATTR
await_expr ::= expr . GET_AWAITABLE LOAD_CONST YIELD_FROM
bin_op ::= expr . expr binary_operator
bin_op ::= expr expr . binary_operator
c_compare_chained37 ::= expr . c_compare_chained_middlea_37
c_compare_chained37_false ::= expr . c_compare_chained_middleb_false_37
c_compare_chained37_false ::= expr . c_compare_chained_right_false_37
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suitec
c_nand ::= and_parts . expr_pjitt come_froms
c_returns ::= c_stmts . return
c_returns ::= c_stmts return . 
c_returns ::= returns . 
c_stmt ::= if_not_stmtc . 
c_stmt ::= ifelsestmtc . 
c_stmt ::= ifstmtc . 
c_stmt ::= stmt . 
c_stmts ::= _stmts . 
c_stmts ::= _stmts . lastc_stmt
c_stmts ::= c_returns . 
c_stmts ::= c_stmt . 
c_stmts ::= c_stmts . c_stmt
c_stmts ::= c_stmts c_stmt . 
c_stmts_opt ::= c_stmts . 
call ::= expr . CALL_FUNCTION_0
call ::= expr . CALL_METHOD_0
call ::= expr . expr CALL_FUNCTION_1
call ::= expr . expr CALL_METHOD_1
call ::= expr . expr expr CALL_METHOD_2
call ::= expr . expr expr expr CALL_FUNCTION_3
call ::= expr . expr expr expr CALL_METHOD_3
call ::= expr . expr expr expr expr CALL_METHOD_4
call ::= expr expr . CALL_FUNCTION_1
call ::= expr expr . CALL_METHOD_1
call ::= expr expr . expr CALL_METHOD_2
call ::= expr expr . expr expr CALL_FUNCTION_3
call ::= expr expr . expr expr CALL_METHOD_3
call ::= expr expr . expr expr expr CALL_METHOD_4
call ::= expr expr CALL_FUNCTION_1 . 
call ::= expr expr CALL_METHOD_1 . 
call ::= expr expr expr . CALL_METHOD_2
call ::= expr expr expr . expr CALL_FUNCTION_3
call ::= expr expr expr . expr CALL_METHOD_3
call ::= expr expr expr . expr expr CALL_METHOD_4
call ::= expr expr expr CALL_METHOD_2 . 
call ::= expr expr expr expr . CALL_FUNCTION_3
call ::= expr expr expr expr . CALL_METHOD_3
call ::= expr expr expr expr . expr CALL_METHOD_4
call ::= expr expr expr expr CALL_METHOD_3 . 
call ::= expr expr expr expr expr . CALL_METHOD_4
call ::= expr expr expr expr expr CALL_METHOD_4 . 
call_kw36 ::= expr . expr LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr . expr expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr . expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr . expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr . LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr expr . expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr . expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr LOAD_CONST . CALL_FUNCTION_KW_1
call_kw36 ::= expr expr expr . LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_5
cf_jump_back ::= COME_FROM . JUMP_LOOP
cf_pt ::= COME_FROM . POP_TOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE_LOOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE_LOOP
classdefdeco1 ::= expr . classdefdeco1 CALL_FUNCTION_1
classdefdeco1 ::= expr . classdefdeco2 CALL_FUNCTION_1
come_any_from ::= COME_FROM . 
come_any_froms ::= come_any_from . 
come_any_froms ::= come_any_froms . come_any_from
come_any_froms ::= come_any_froms come_any_from . 
come_from_opt ::= COME_FROM . 
come_froms ::= COME_FROM . 
come_froms ::= come_froms . COME_FROM
come_froms ::= come_froms COME_FROM . 
compare ::= compare_single . 
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP \e__come_froms
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP _come_froms
compare_chained37 ::= expr . chained_parts
compare_chained37 ::= expr . compare_chained_middlea_37
compare_chained37 ::= expr . compare_chained_middlec_37
compare_chained37_false ::= expr . compare_chained_middle_false_37
compare_chained37_false ::= expr . compare_chained_middleb_false_37
compare_chained37_false ::= expr . compare_chained_right_false_37
compare_chained_and ::= expr . chained_parts compare_chained_righta_false_37 come_froms POP_TOP JUMP_FORWARD COME_FROM negated_testtrue come_froms
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_middle COME_FROM
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_right COME_FROM
compare_single ::= expr . expr COMPARE_OP
compare_single ::= expr expr . COMPARE_OP
compare_single ::= expr expr COMPARE_OP . 
continues ::= _stmts . lastc_stmt continue
dict ::= expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_2
dict ::= expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr . expr expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_2
dict ::= expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr . expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr LOAD_CONST . BUILD_CONST_KEY_MAP_2
dict ::= expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr . expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= kvlist_0 . 
dict_comp_func ::= BUILD_MAP_0 . LOAD_ARG for_iter store comp_iter JUMP_LOOP \e__come_froms ending_return
dict_comp_func ::= BUILD_MAP_0 . LOAD_ARG for_iter store comp_iter JUMP_LOOP _come_froms ending_return
else_suite ::= returns . 
else_suite ::= suite_stmts . 
else_suite_opt ::= else_suite . 
else_suitec ::= c_returns . 
else_suitec ::= c_stmts . 
else_suitec ::= suite_stmts . 
expr ::= LOAD_CONST . 
expr ::= LOAD_FAST . 
expr ::= LOAD_GLOBAL . 
expr ::= LOAD_STR . 
expr ::= attribute . 
expr ::= attribute37 . 
expr ::= call . 
expr ::= compare . 
expr ::= dict . 
expr ::= if_exp . 
expr ::= not . 
expr ::= subscript . 
expr_jifop ::= expr . JUMP_IF_FALSE_OR_POP
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP \e__come_froms
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP _come_froms
expr_jitop ::= expr . JUMP_IF_TRUE_OR_POP
expr_pjif ::= expr . POP_JUMP_IF_FALSE
expr_pjif ::= expr POP_JUMP_IF_FALSE . 
expr_pjit ::= expr . POP_JUMP_IF_TRUE
expr_pjit ::= expr POP_JUMP_IF_TRUE . 
expr_pjitt ::= expr . pjump_ift
expr_stmt ::= expr . POP_TOP
expr_stmt ::= expr POP_TOP . 
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block \e__come_froms
for38 ::= expr . get_for_iter store for_block _come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP _come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite _come_froms
get_iter ::= expr . GET_ITER
if_and_elsestmtc ::= expr_pjif . expr_pjif c_stmts jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif . expr_pjif c_stmts jb_cfs else_suitec opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif . c_stmts jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif . c_stmts jb_cfs else_suitec opt_come_from_except
if_and_stmt ::= expr_pjif . expr COME_FROM stmts \e__come_froms
if_and_stmt ::= expr_pjif . expr COME_FROM stmts _come_froms
if_and_stmt ::= expr_pjif expr . COME_FROM stmts \e__come_froms
if_and_stmt ::= expr_pjif expr . COME_FROM stmts _come_froms
if_and_stmt ::= expr_pjif expr COME_FROM . stmts \e__come_froms
if_and_stmt ::= expr_pjif expr COME_FROM . stmts _come_froms
if_exp ::= expr_pjif . expr jf_cf expr COME_FROM
if_exp ::= expr_pjif . expr jump_forward_else expr
if_exp ::= expr_pjif . expr jump_forward_else expr come_froms
if_exp ::= expr_pjif expr . jf_cf expr COME_FROM
if_exp ::= expr_pjif expr . jump_forward_else expr
if_exp ::= expr_pjif expr . jump_forward_else expr come_froms
if_exp ::= expr_pjif expr jf_cf . expr COME_FROM
if_exp ::= expr_pjif expr jf_cf expr . COME_FROM
if_exp ::= expr_pjif expr jf_cf expr COME_FROM . 
if_exp ::= expr_pjif expr jump_forward_else . expr
if_exp ::= expr_pjif expr jump_forward_else . expr come_froms
if_exp ::= expr_pjif expr jump_forward_else expr . 
if_exp ::= expr_pjif expr jump_forward_else expr . come_froms
if_exp ::= expr_pjif expr jump_forward_else expr come_froms . 
if_exp_37b ::= expr_pjif . expr_pjif jump_forward_else expr
if_exp_37b ::= expr_pjif expr_pjif . jump_forward_else expr
if_exp_compare ::= expr . expr jf_cfs expr COME_FROM
if_exp_compare ::= expr expr . jf_cfs expr COME_FROM
if_exp_compare38 ::= or_in_ifexp . jump_if_false_cf expr jf_cfs expr come_froms
if_exp_compare38 ::= or_in_ifexp jump_if_false_cf . expr jf_cfs expr come_froms
if_exp_compare38 ::= or_in_ifexp jump_if_false_cf expr . jf_cfs expr come_froms
if_exp_loop ::= expr_pjif . expr POP_JUMP_IF_FALSE_LOOP JUMP_FORWARD come_froms expr
if_exp_loop ::= expr_pjif expr . POP_JUMP_IF_FALSE_LOOP JUMP_FORWARD come_froms expr
if_exp_not ::= expr . POP_JUMP_IF_TRUE expr jump_forward_else expr COME_FROM
if_exp_not ::= expr POP_JUMP_IF_TRUE . expr jump_forward_else expr COME_FROM
if_exp_not ::= expr POP_JUMP_IF_TRUE expr . jump_forward_else expr COME_FROM
if_exp_true ::= expr . JUMP_FORWARD expr COME_FROM
if_exp_true ::= expr JUMP_FORWARD . expr COME_FROM
if_not_stmtc ::= testexprc . ifstmts_jumpc \e__come_froms
if_not_stmtc ::= testexprc . ifstmts_jumpc _come_froms
if_not_stmtc ::= testexprc ifstmts_jumpc . _come_froms
if_not_stmtc ::= testexprc ifstmts_jumpc \e__come_froms . 
if_not_stmtc ::= testexprc ifstmts_jumpc _come_froms . 
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE . come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE . come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE . come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE . come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms . stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms . stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts . jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts . jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs . else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs . else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite . opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except . 
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except . 
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_stmt ::= expr . POP_JUMP_IF_TRUE expr pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE . expr pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr . pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump . come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms . stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms stmts . COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms stmts COME_FROM . 
ifelsestmt ::= testexpr . stmts_opt JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr . stmts_opt JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr . stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr \e_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt JUMP_FORWARD . else_suite \e__come_froms
ifelsestmt ::= testexpr stmts_opt JUMP_FORWARD . else_suite _come_froms
ifelsestmt ::= testexpr stmts_opt jf_cfs . else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs . else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt . opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt . opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt opt_come_from_except . 
ifelsestmtc ::= testexpr . c_stmts cf_pt else_suite
ifelsestmtc ::= testexpr . c_stmts come_froms else_suite
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr . c_stmts_opt cf_jump_back else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt jb_cfs else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr . c_stmts_opt jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr . c_stmts_opt jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr \e_c_stmts_opt . cf_jump_back else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . jb_cfs else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr \e_c_stmts_opt . jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts . cf_pt else_suite
ifelsestmtc ::= testexpr c_stmts . come_froms else_suite
ifelsestmtc ::= testexpr c_stmts come_froms . else_suite
ifelsestmtc ::= testexpr c_stmts come_froms else_suite . 
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr c_stmts_opt . cf_jump_back else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . jb_cfs else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr c_stmts_opt . jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt . jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suite \e__come_froms
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suite _come_froms
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suitec
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else . else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else . else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec . opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec \e_opt_come_from_except . 
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec opt_come_from_except . 
ifelsestmtc ::= testexpr_cf . c_stmts_opt jb_cf else_suitec
ifelsestmtc ::= testexpr_cf \e_c_stmts_opt . jb_cf else_suitec
ifelsestmtc ::= testexpr_cf c_stmts_opt . jb_cf else_suitec
ifelsestmtr ::= testexpr . return_if_stmts returns
iflaststmt ::= testexpr . returns
iflaststmt ::= testexpr . stmts
iflaststmt ::= testexpr . stmts JUMP_FORWARD
iflaststmt ::= testexpr . stmts_opt JUMP_FORWARD
iflaststmt ::= testexpr \e_stmts_opt . JUMP_FORWARD
iflaststmt ::= testexpr returns . 
iflaststmt ::= testexpr stmts . 
iflaststmt ::= testexpr stmts . JUMP_FORWARD
iflaststmt ::= testexpr stmts JUMP_FORWARD . 
iflaststmt ::= testexpr stmts_opt . JUMP_FORWARD
iflaststmt ::= testexpr stmts_opt JUMP_FORWARD . 
iflaststmtc ::= testexpr . c_stmts
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP POP_BLOCK
iflaststmtc ::= testexpr . c_stmts come_froms
iflaststmtc ::= testexpr c_stmts . 
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP POP_BLOCK
iflaststmtc ::= testexpr c_stmts . come_froms
iflaststmtc ::= testexpr c_stmts come_froms . 
iflaststmtc ::= testexprc . c_stmts
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP \e_opt_pop_block
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP opt_pop_block
iflaststmtc ::= testexprc c_stmts . 
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP \e_opt_pop_block
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP opt_pop_block
ifpoplaststmtc ::= testexpr . POP_TOP \e_c_stmts_opt
ifpoplaststmtc ::= testexpr . POP_TOP c_stmts_opt
ifstmt ::= testexpr . ifstmts_jump \e__come_froms
ifstmt ::= testexpr . ifstmts_jump _come_froms
ifstmt ::= testexpr . stmts \e__come_froms
ifstmt ::= testexpr . stmts _come_froms
ifstmt ::= testexpr ifstmts_jump . _come_froms
ifstmt ::= testexpr ifstmts_jump \e__come_froms . 
ifstmt ::= testexpr ifstmts_jump _come_froms . 
ifstmt ::= testexpr stmts . _come_froms
ifstmt ::= testexpr stmts \e__come_froms . 
ifstmt ::= testexpr stmts _come_froms . 
ifstmt_bool ::= not_and_not . stmts come_froms
ifstmt_bool ::= not_and_not stmts . come_froms
ifstmt_bool ::= not_and_not stmts come_froms . 
ifstmt_bool ::= or_and1 . stmts come_froms
ifstmt_bool ::= or_and1 stmts . come_froms
ifstmt_bool ::= or_and1 stmts come_froms . 
ifstmtc ::= testexpr . ifstmts_jumpc
ifstmtc ::= testexpr ifstmts_jumpc . 
ifstmtc ::= testexprc . ifstmts_jumpc \e__come_froms
ifstmtc ::= testexprc . ifstmts_jumpc _come_froms
ifstmtc ::= testexprc ifstmts_jumpc . _come_froms
ifstmtc ::= testexprc ifstmts_jumpc \e__come_froms . 
ifstmtc ::= testexprc ifstmts_jumpc _come_froms . 
ifstmts_jump ::= COME_FROM . stmts COME_FROM
ifstmts_jump ::= COME_FROM . stmts come_froms
ifstmts_jump ::= COME_FROM stmts . COME_FROM
ifstmts_jump ::= COME_FROM stmts . come_froms
ifstmts_jump ::= COME_FROM stmts COME_FROM . 
ifstmts_jump ::= COME_FROM stmts come_froms . 
ifstmts_jump ::= \e_stmts_opt . JUMP_FORWARD JUMP_FORWARD \e__come_froms
ifstmts_jump ::= \e_stmts_opt . JUMP_FORWARD JUMP_FORWARD _come_froms
ifstmts_jump ::= \e_stmts_opt . come_froms
ifstmts_jump ::= \e_stmts_opt come_froms . 
ifstmts_jump ::= stmts . come_froms
ifstmts_jump ::= stmts come_froms . 
ifstmts_jump ::= stmts_opt . JUMP_FORWARD JUMP_FORWARD \e__come_froms
ifstmts_jump ::= stmts_opt . JUMP_FORWARD JUMP_FORWARD _come_froms
ifstmts_jump ::= stmts_opt . come_froms
ifstmts_jump ::= stmts_opt JUMP_FORWARD . JUMP_FORWARD \e__come_froms
ifstmts_jump ::= stmts_opt JUMP_FORWARD . JUMP_FORWARD _come_froms
ifstmts_jump ::= stmts_opt come_froms . 
ifstmts_jumpc ::= COME_FROM . c_stmts JUMP_FORWARD
ifstmts_jumpc ::= COME_FROM . c_stmts JUMP_LOOP
ifstmts_jumpc ::= COME_FROM . c_stmts come_froms
ifstmts_jumpc ::= COME_FROM c_stmts . JUMP_FORWARD
ifstmts_jumpc ::= COME_FROM c_stmts . JUMP_LOOP
ifstmts_jumpc ::= COME_FROM c_stmts . come_froms
ifstmts_jumpc ::= COME_FROM c_stmts JUMP_FORWARD . 
ifstmts_jumpc ::= COME_FROM c_stmts come_froms . 
ifstmts_jumpc ::= \e_c_stmts_opt . come_froms
ifstmts_jumpc ::= \e_c_stmts_opt come_froms . 
ifstmts_jumpc ::= c_stmts . 
ifstmts_jumpc ::= c_stmts . JUMP_LOOP
ifstmts_jumpc ::= c_stmts_opt . come_froms
ifstmts_jumpc ::= c_stmts_opt come_froms . 
ifstmts_jumpc ::= ifstmts_jump . 
jb_cfs ::= \e_come_from_opt . JUMP_LOOP come_froms
jb_cfs ::= come_from_opt . JUMP_LOOP come_froms
jf_cf ::= JUMP_FORWARD . COME_FROM
jf_cf ::= JUMP_FORWARD COME_FROM . 
jf_cfs ::= JUMP_FORWARD . _come_froms
jf_cfs ::= JUMP_FORWARD \e__come_froms . 
jf_cfs ::= JUMP_FORWARD _come_froms . 
jump_forward_else ::= JUMP_FORWARD . _come_froms
jump_forward_else ::= JUMP_FORWARD \e__come_froms . 
jump_forward_else ::= JUMP_FORWARD _come_froms . 
jump_forward_else ::= come_froms . jump COME_FROM
jump_if_false_cf ::= POP_JUMP_IF_FALSE . COME_FROM
jump_if_false_cf ::= POP_JUMP_IF_FALSE COME_FROM . 
kvlist_0 ::= BUILD_MAP_0 . 
last_stmt ::= iflaststmt . 
lastc_stmt ::= ifelsestmtc . 
mkfuncdeco ::= expr . mkfuncdeco CALL_FUNCTION_1
mkfuncdeco ::= expr . mkfuncdeco0 CALL_FUNCTION_1
named_expr ::= expr . DUP_TOP store
nand ::= and_parts . expr_pjit come_froms
nor_cond ::= or_parts . expr_pjif
nor_cond ::= or_parts expr_pjif . 
not ::= expr_pjit . 
not_and_not ::= not . expr_pjif COME_FROM
not_and_not ::= not expr_pjif . COME_FROM
not_and_not ::= not expr_pjif COME_FROM . 
not_or ::= and_parts . expr_pjif \e__come_froms
not_or ::= and_parts . expr_pjif _come_froms
not_or ::= and_parts expr_pjif . _come_froms
not_or ::= and_parts expr_pjif \e__come_froms . 
opt_come_from_except ::= come_any_froms . 
or ::= expr_pjit . expr COME_FROM
or ::= expr_pjit . expr jump_if_false_cf
or ::= expr_pjit expr . COME_FROM
or ::= expr_pjit expr . jump_if_false_cf
or ::= expr_pjit expr COME_FROM . 
or ::= expr_pjit expr jump_if_false_cf . 
or ::= or_parts . expr
or ::= or_parts expr . 
or_and1 ::= or_parts . and_parts come_froms
or_and1 ::= or_parts and_parts . come_froms
or_and1 ::= or_parts and_parts come_froms . 
or_and_not ::= expr_pjit . and_not COME_FROM
or_cond ::= not_and_not . expr_pjif come_froms
or_cond ::= or_parts . expr_pjif come_froms
or_cond ::= or_parts expr_pjif . come_froms
or_cond ::= or_parts expr_pjif come_froms . 
or_expr ::= expr . JUMP_IF_TRUE expr COME_FROM
or_in_ifexp ::= expr_pjit . expr
or_in_ifexp ::= expr_pjit expr . 
or_in_ifexp ::= or_in_ifexp . POP_JUMP_IF_TRUE expr
or_in_ifexp ::= or_in_ifexp POP_JUMP_IF_TRUE . expr
or_in_ifexp ::= or_in_ifexp POP_JUMP_IF_TRUE expr . 
or_parts ::= expr_pjit . 
or_parts ::= or_parts . expr_pjit
or_parts ::= or_parts expr_pjit . 
pop_ex_return ::= return_expr . ROT_FOUR POP_EXCEPT RETURN_VALUE
pop_jump ::= POP_JUMP_IF_FALSE . 
pop_jump ::= POP_JUMP_IF_TRUE . 
popb_return ::= return_expr . POP_BLOCK RETURN_VALUE
return ::= return_expr . RETURN_END_IF
return ::= return_expr . RETURN_VALUE
return ::= return_expr . discard_tops RETURN_VALUE
return ::= return_expr RETURN_VALUE . 
return_expr ::= expr . 
return_if_stmt ::= return_expr . RETURN_END_IF
return_if_stmt ::= return_expr . RETURN_END_IF POP_BLOCK
return_if_stmts ::= _stmts . return_if_stmt \e__come_froms
return_if_stmts ::= _stmts . return_if_stmt _come_froms
returns ::= _stmts . return
returns ::= _stmts . return_if_stmt
returns ::= _stmts return . 
returns ::= return . 
sstmt ::= return . RETURN_LAST
sstmt ::= return RETURN_LAST . 
sstmt ::= sstmt . RETURN_LAST
sstmt ::= sstmt RETURN_LAST . 
sstmt ::= stmt . 
stmt ::= assign . 
stmt ::= expr_stmt . 
stmt ::= if_or_not_elsestmt . 
stmt ::= if_or_stmt . 
stmt ::= ifelsestmt . 
stmt ::= ifstmt . 
stmt ::= ifstmt_bool . 
stmt ::= last_stmt . 
stmt ::= return . 
stmts ::= sstmt . 
stmts ::= stmt . 
stmts ::= stmts . last_stmt
stmts ::= stmts . sstmt
stmts ::= stmts . stmt
stmts ::= stmts sstmt . 
stmts ::= stmts stmt . 
stmts_opt ::= stmts . 
store ::= STORE_FAST . 
store ::= expr . STORE_ATTR
store ::= store_subscript . 
store_subscript ::= expr . expr STORE_SUBSCR
store_subscript ::= expr expr . STORE_SUBSCR
store_subscript ::= expr expr STORE_SUBSCR . 
subscript ::= expr . expr BINARY_SUBSCR
subscript ::= expr expr . BINARY_SUBSCR
subscript ::= expr expr BINARY_SUBSCR . 
subscript2 ::= expr . expr DUP_TOP_TWO BINARY_SUBSCR
subscript2 ::= expr expr . DUP_TOP_TWO BINARY_SUBSCR
suite_stmts ::= _stmts . 
suite_stmts ::= returns . 
testexpr ::= testfalse . 
testexpr ::= testtrue . 
testexpr_cf ::= testexpr . come_froms
testexpr_cf ::= testexpr come_froms . 
testexprc ::= testexpr . 
testfalse ::= expr_pjif . 
testfalse ::= or_cond . 
testfalsec ::= expr . POP_JUMP_IF_TRUE_LOOP
testtrue ::= expr_pjit . 
testtrue ::= nor_cond . 
testtrue ::= or_in_ifexp . POP_JUMP_IF_TRUE
testtrue ::= or_in_ifexp POP_JUMP_IF_TRUE . 
testtruec ::= expr . POP_JUMP_IF_FALSE_LOOP
tuple ::= expr . expr BUILD_TUPLE_2
tuple ::= expr expr . BUILD_TUPLE_2
unary_not ::= expr . UNARY_NOT
unary_op ::= expr . unary_operator
while1stmt ::= \e__come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts COME_FROM . JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts . COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts COME_FROM . JUMP_LOOP COME_FROM_LOOP
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= _come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= _come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= \e__come_froms . pass JUMP_LOOP
whileTruestmt38 ::= \e__come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= _come_froms . pass JUMP_LOOP
whileTruestmt38 ::= _come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr . returns POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts . come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts come_froms . 
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr returns . POP_BLOCK
whilestmt38 ::= \e__come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= _come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr . c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr . c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr . returns POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexpr c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr c_stmts . come_froms
whilestmt38 ::= _come_froms testexpr c_stmts come_froms . 
whilestmt38 ::= _come_froms testexpr c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr returns . POP_BLOCK
whilestmt38 ::= _come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP _come_froms
yield ::= expr . YIELD_VALUE
yield_from ::= expr . GET_YIELD_FROM_ITER LOAD_CONST YIELD_FROM
Instruction context:
   
 L. 447       300  LOAD_GLOBAL              json
                 302  LOAD_METHOD              dumps
                 304  LOAD_FAST                'response'
                 306  CALL_METHOD_1         1  '1 positional argument'
->               308  RETURN_VALUE     

-- Stacks of completed symbols:
START ::= |- stmts . 
_come_froms ::= \e__come_froms . COME_FROM
_come_froms ::= \e__come_froms COME_FROM . 
_come_froms ::= _come_froms . COME_FROM
_come_froms ::= _come_froms COME_FROM . 
_stmts ::= stmts . 
and_cond ::= and_parts . expr_pjif \e__come_froms
and_cond ::= and_parts . expr_pjif _come_froms
and_cond ::= and_parts expr_pjif . _come_froms
and_cond ::= and_parts expr_pjif \e__come_froms . 
and_cond ::= testfalse . expr_pjif \e__come_froms
and_cond ::= testfalse . expr_pjif _come_froms
and_cond ::= testfalse expr_pjif . _come_froms
and_cond ::= testfalse expr_pjif \e__come_froms . 
and_not ::= expr_pjif . expr_pjit
and_or_cond ::= and_parts . expr POP_JUMP_IF_TRUE come_froms expr_pjif \e__come_froms
and_or_cond ::= and_parts . expr POP_JUMP_IF_TRUE come_froms expr_pjif _come_froms
and_or_cond ::= and_parts expr . POP_JUMP_IF_TRUE come_froms expr_pjif \e__come_froms
and_or_cond ::= and_parts expr . POP_JUMP_IF_TRUE come_froms expr_pjif _come_froms
and_or_expr ::= and_parts . expr jitop_come_from_expr COME_FROM
and_or_expr ::= and_parts expr . jitop_come_from_expr COME_FROM
and_parts ::= and_parts . expr_pjif
and_parts ::= and_parts expr_pjif . 
and_parts ::= expr_pjif . 
assert2 ::= expr . POP_JUMP_IF_TRUE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE . LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL . expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL expr . CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE LOAD_GLOBAL expr CALL_FUNCTION_1 . RAISE_VARARGS_1
assert2_not ::= expr . POP_JUMP_IF_FALSE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE . LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE LOAD_GLOBAL . expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert_invert ::= testtrue . LOAD_GLOBAL RAISE_VARARGS_1
assert_invert ::= testtrue LOAD_GLOBAL . RAISE_VARARGS_1
assign ::= expr . DUP_TOP designList
assign ::= expr . store
assign ::= expr store . 
assign2 ::= expr . expr ROT_TWO store store
assign2 ::= expr expr . ROT_TWO store store
assign3 ::= expr . expr expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr . expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr expr . ROT_THREE ROT_TWO store store store
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
attribute ::= expr . LOAD_ATTR
attribute ::= expr LOAD_ATTR . 
attribute37 ::= expr . LOAD_METHOD
attribute37 ::= expr LOAD_METHOD . 
aug_assign1 ::= expr . expr inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr . expr inplace_op store
aug_assign1 ::= expr expr . inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr expr . inplace_op store
aug_assign2 ::= expr . DUP_TOP LOAD_ATTR expr inplace_op ROT_TWO STORE_ATTR
await_expr ::= expr . GET_AWAITABLE LOAD_CONST YIELD_FROM
bin_op ::= expr . expr binary_operator
bin_op ::= expr expr . binary_operator
bin_op ::= expr expr binary_operator . 
binary_operator ::= BINARY_MODULO . 
bool_op ::= and_cond . 
break ::= POP_BLOCK . BREAK_LOOP
break ::= POP_BLOCK . POP_TOP BREAK_LOOP
break ::= POP_BLOCK . POP_TOP JUMP_FORWARD
break ::= POP_EXCEPT . BREAK_LOOP
break ::= POP_EXCEPT . JUMP_FORWARD
break ::= POP_EXCEPT JUMP_FORWARD . 
c_compare_chained37 ::= expr . c_compare_chained_middlea_37
c_compare_chained37_false ::= expr . c_compare_chained_middleb_false_37
c_compare_chained37_false ::= expr . c_compare_chained_right_false_37
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suitec
c_nand ::= and_parts . expr_pjitt come_froms
c_returns ::= c_stmts . return
c_returns ::= c_stmts return . 
c_returns ::= returns . 
c_stmt ::= c_try_except . 
c_stmt ::= if_not_stmtc . 
c_stmt ::= ifelsestmtc . 
c_stmt ::= ifstmtc . 
c_stmt ::= stmt . 
c_stmts ::= _stmts . 
c_stmts ::= _stmts . lastc_stmt
c_stmts ::= _stmts lastc_stmt . 
c_stmts ::= c_returns . 
c_stmts ::= c_stmt . 
c_stmts ::= c_stmts . c_stmt
c_stmts ::= c_stmts c_stmt . 
c_stmts ::= lastc_stmt . 
c_stmts_opt ::= c_stmts . 
c_suite_stmts ::= c_stmts . 
c_suite_stmts ::= suite_stmts . 
c_suite_stmts_opt ::= c_suite_stmts . 
c_suite_stmts_opt ::= suite_stmts_opt . 
c_try_except ::= SETUP_FINALLY . c_suite_stmts POP_BLOCK except_handler38
c_try_except ::= SETUP_FINALLY c_suite_stmts . POP_BLOCK except_handler38
c_try_except ::= SETUP_FINALLY c_suite_stmts POP_BLOCK . except_handler38
c_try_except ::= SETUP_FINALLY c_suite_stmts POP_BLOCK except_handler38 . 
c_tryfinallybstmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK BEGIN_FINALLY . COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK BEGIN_FINALLY . COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
call ::= expr . CALL_FUNCTION_0
call ::= expr . CALL_METHOD_0
call ::= expr . expr CALL_FUNCTION_1
call ::= expr . expr CALL_METHOD_1
call ::= expr . expr expr CALL_METHOD_2
call ::= expr . expr expr expr CALL_FUNCTION_3
call ::= expr . expr expr expr CALL_METHOD_3
call ::= expr . expr expr expr expr CALL_METHOD_4
call ::= expr CALL_METHOD_0 . 
call ::= expr expr . CALL_FUNCTION_1
call ::= expr expr . CALL_METHOD_1
call ::= expr expr . expr CALL_METHOD_2
call ::= expr expr . expr expr CALL_FUNCTION_3
call ::= expr expr . expr expr CALL_METHOD_3
call ::= expr expr . expr expr expr CALL_METHOD_4
call ::= expr expr CALL_FUNCTION_1 . 
call ::= expr expr CALL_METHOD_1 . 
call ::= expr expr expr . CALL_METHOD_2
call ::= expr expr expr . expr CALL_FUNCTION_3
call ::= expr expr expr . expr CALL_METHOD_3
call ::= expr expr expr . expr expr CALL_METHOD_4
call ::= expr expr expr CALL_METHOD_2 . 
call ::= expr expr expr expr . CALL_FUNCTION_3
call ::= expr expr expr expr . CALL_METHOD_3
call ::= expr expr expr expr . expr CALL_METHOD_4
call ::= expr expr expr expr CALL_METHOD_3 . 
call ::= expr expr expr expr expr . CALL_METHOD_4
call_kw36 ::= expr . expr LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr . expr expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr . expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr . expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr . LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr expr . expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr . expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr LOAD_CONST . CALL_FUNCTION_KW_1
call_kw36 ::= expr expr LOAD_CONST CALL_FUNCTION_KW_1 . 
call_kw36 ::= expr expr expr . LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr LOAD_CONST . CALL_FUNCTION_KW_2
call_kw36 ::= expr expr expr LOAD_CONST CALL_FUNCTION_KW_2 . 
call_kw36 ::= expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr LOAD_CONST . CALL_FUNCTION_KW_3
call_kw36 ::= expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_3 . 
call_kw36 ::= expr expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr LOAD_CONST . CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_4 . 
call_kw36 ::= expr expr expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr expr LOAD_CONST . CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5 . 
cf_jump_back ::= COME_FROM . JUMP_LOOP
cf_pt ::= COME_FROM . POP_TOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE_LOOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE_LOOP
classdefdeco1 ::= expr . classdefdeco1 CALL_FUNCTION_1
classdefdeco1 ::= expr . classdefdeco2 CALL_FUNCTION_1
come_any_from ::= COME_FROM . 
come_any_froms ::= come_any_from . 
come_any_froms ::= come_any_froms . come_any_from
come_any_froms ::= come_any_froms come_any_from . 
come_from_except_clauses ::= \e_come_from_except_clauses . COME_FROM_EXCEPT_CLAUSE
come_from_opt ::= COME_FROM . 
come_froms ::= COME_FROM . 
come_froms ::= come_froms . COME_FROM
come_froms ::= come_froms COME_FROM . 
compare ::= compare_single . 
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP \e__come_froms
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP _come_froms
compare_chained37 ::= expr . chained_parts
compare_chained37 ::= expr . compare_chained_middlea_37
compare_chained37 ::= expr . compare_chained_middlec_37
compare_chained37_false ::= expr . compare_chained_middle_false_37
compare_chained37_false ::= expr . compare_chained_middleb_false_37
compare_chained37_false ::= expr . compare_chained_right_false_37
compare_chained_and ::= expr . chained_parts compare_chained_righta_false_37 come_froms POP_TOP JUMP_FORWARD COME_FROM negated_testtrue come_froms
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_middle COME_FROM
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_right COME_FROM
compare_single ::= expr . expr COMPARE_OP
compare_single ::= expr expr . COMPARE_OP
compare_single ::= expr expr COMPARE_OP . 
cond_except_stmts_opt ::= \e_cond_except_stmts_opt . cond_except_stmt
continue ::= POP_EXCEPT . JUMP_LOOP
continues ::= _stmts . lastc_stmt continue
continues ::= _stmts lastc_stmt . continue
continues ::= lastc_stmt . continue
delete ::= DELETE_FAST . 
dict ::= expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_2
dict ::= expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr . expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr . expr expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_2
dict ::= expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr expr . expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr LOAD_CONST . BUILD_CONST_KEY_MAP_2
dict ::= expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr expr expr . expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr expr expr expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr LOAD_CONST . BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr expr expr expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr LOAD_CONST . BUILD_CONST_KEY_MAP_5
dict ::= expr expr expr expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= kvlist_0 . 
dict ::= kvlist_1 . 
dict_comp_func ::= BUILD_MAP_0 . LOAD_ARG for_iter store comp_iter JUMP_LOOP \e__come_froms ending_return
dict_comp_func ::= BUILD_MAP_0 . LOAD_ARG for_iter store comp_iter JUMP_LOOP _come_froms ending_return
else_suite ::= returns . 
else_suite ::= suite_stmts . 
else_suite_opt ::= else_suite . 
else_suitec ::= c_returns . 
else_suitec ::= c_stmts . 
else_suitec ::= suite_stmts . 
except_cond1 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . POP_TOP POP_TOP POP_EXCEPT
except_cond2 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store . POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store . POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP . come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt . 
except_handler38 ::= jump . COME_FROM_FINALLY except_stmts END_FINALLY \e_opt_come_from_except
except_handler38 ::= jump . COME_FROM_FINALLY except_stmts END_FINALLY opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY . except_stmts END_FINALLY \e_opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY . except_stmts END_FINALLY opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY except_stmts . END_FINALLY \e_opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY except_stmts . END_FINALLY opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY except_stmts END_FINALLY . opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY except_stmts END_FINALLY \e_opt_come_from_except . 
except_handler38 ::= jump COME_FROM_FINALLY except_stmts END_FINALLY opt_come_from_except . 
except_ret38 ::= SETUP_FINALLY . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
except_ret38 ::= SETUP_FINALLY . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
except_ret38 ::= SETUP_FINALLY expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
except_ret38 ::= SETUP_FINALLY expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
except_ret38b ::= SETUP_FINALLY . suite_stmts expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY . suite_stmts expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY suite_stmts . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY suite_stmts . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY suite_stmts expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY suite_stmts expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38c ::= SETUP_FINALLY . suite_stmts expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY expr STORE_FAST DELETE_FAST END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM END_FINALLY come_any_froms
except_ret38c ::= SETUP_FINALLY suite_stmts . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY expr STORE_FAST DELETE_FAST END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM END_FINALLY come_any_froms
except_ret38c ::= SETUP_FINALLY suite_stmts expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY expr STORE_FAST DELETE_FAST END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM END_FINALLY come_any_froms
except_return_value ::= POP_BLOCK . return
except_return_value ::= expr . POP_BLOCK RETURN_VALUE
except_return_value2 ::= POP_BLOCK . return
except_stmt ::= except_cond2 . except_ret38b
except_stmt ::= except_cond2 . except_suite \e_come_from_opt
except_stmt ::= except_cond2 . except_suite come_from_opt
except_stmt ::= except_cond2 . except_suite_finalize
except_stmt ::= except_cond2 except_suite . come_from_opt
except_stmt ::= except_cond2 except_suite \e_come_from_opt . 
except_stmt ::= except_cond2 except_suite come_from_opt . 
except_stmts ::= except_stmt . 
except_stmts ::= except_stmts . except_stmt
except_stmts ::= except_stmts except_stmt . 
except_suite ::= \e_c_stmts_opt . COME_FROM POP_EXCEPT jump_except COME_FROM
except_suite ::= \e_c_stmts_opt . POP_EXCEPT POP_TOP JUMP_FORWARD POP_EXCEPT jump_except
except_suite ::= \e_c_stmts_opt . POP_EXCEPT jump_except
except_suite ::= c_stmts_opt . COME_FROM POP_EXCEPT jump_except COME_FROM
except_suite ::= c_stmts_opt . POP_EXCEPT POP_TOP JUMP_FORWARD POP_EXCEPT jump_except
except_suite ::= c_stmts_opt . POP_EXCEPT jump_except
except_suite ::= c_stmts_opt POP_EXCEPT . POP_TOP JUMP_FORWARD POP_EXCEPT jump_except
except_suite ::= c_stmts_opt POP_EXCEPT . jump_except
except_suite ::= c_stmts_opt POP_EXCEPT jump_except . 
except_suite_finalize ::= SETUP_FINALLY . c_stmts_opt except_var_finalize END_FINALLY POP_EXCEPT jump
except_suite_finalize ::= SETUP_FINALLY . c_stmts_opt except_var_finalize END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY . returns COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY . returns COME_FROM_FINALLY suite_stmts_opt END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY \e_c_stmts_opt . except_var_finalize END_FINALLY POP_EXCEPT jump
except_suite_finalize ::= SETUP_FINALLY \e_c_stmts_opt . except_var_finalize END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY c_stmts_opt . except_var_finalize END_FINALLY POP_EXCEPT jump
except_suite_finalize ::= SETUP_FINALLY c_stmts_opt . except_var_finalize END_FINALLY jump
except_var_finalize ::= POP_BLOCK . LOAD_CONST COME_FROM_FINALLY LOAD_CONST store delete
except_var_finalize ::= POP_BLOCK . POP_EXCEPT LOAD_CONST COME_FROM_FINALLY LOAD_CONST store delete
expr ::= LOAD_CONST . 
expr ::= LOAD_FAST . 
expr ::= LOAD_GLOBAL . 
expr ::= LOAD_STR . 
expr ::= attribute . 
expr ::= attribute37 . 
expr ::= bin_op . 
expr ::= call . 
expr ::= call_kw36 . 
expr ::= compare . 
expr ::= dict . 
expr ::= list . 
expr ::= not . 
expr ::= subscript . 
expr_jifop ::= expr . JUMP_IF_FALSE_OR_POP
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP \e__come_froms
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP _come_froms
expr_jitop ::= expr . JUMP_IF_TRUE_OR_POP
expr_pjif ::= expr . POP_JUMP_IF_FALSE
expr_pjif ::= expr POP_JUMP_IF_FALSE . 
expr_pjit ::= expr . POP_JUMP_IF_TRUE
expr_pjit ::= expr POP_JUMP_IF_TRUE . 
expr_pjitt ::= expr . pjump_ift
expr_stmt ::= expr . POP_TOP
expr_stmt ::= expr POP_TOP . 
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block \e__come_froms
for38 ::= expr . get_for_iter store for_block _come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP _come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite _come_froms
get_iter ::= expr . GET_ITER
if_and_elsestmtc ::= expr_pjif . expr_pjif c_stmts jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif . expr_pjif c_stmts jb_cfs else_suitec opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif . c_stmts jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif . c_stmts jb_cfs else_suitec opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif c_stmts . jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif c_stmts . jb_cfs else_suitec opt_come_from_except
if_and_stmt ::= expr_pjif . expr COME_FROM stmts \e__come_froms
if_and_stmt ::= expr_pjif . expr COME_FROM stmts _come_froms
if_and_stmt ::= expr_pjif expr . COME_FROM stmts \e__come_froms
if_and_stmt ::= expr_pjif expr . COME_FROM stmts _come_froms
if_exp ::= expr_pjif . expr jf_cf expr COME_FROM
if_exp ::= expr_pjif . expr jump_forward_else expr
if_exp ::= expr_pjif . expr jump_forward_else expr come_froms
if_exp ::= expr_pjif expr . jf_cf expr COME_FROM
if_exp ::= expr_pjif expr . jump_forward_else expr
if_exp ::= expr_pjif expr . jump_forward_else expr come_froms
if_exp_37b ::= expr_pjif . expr_pjif jump_forward_else expr
if_exp_37b ::= expr_pjif expr_pjif . jump_forward_else expr
if_exp_compare ::= bool_op . expr jf_cfs expr COME_FROM
if_exp_compare ::= bool_op expr . jf_cfs expr COME_FROM
if_exp_compare ::= expr . expr jf_cfs expr COME_FROM
if_exp_compare ::= expr expr . jf_cfs expr COME_FROM
if_exp_compare38 ::= or_in_ifexp . jump_if_false_cf expr jf_cfs expr come_froms
if_exp_compare38 ::= or_in_ifexp jump_if_false_cf . expr jf_cfs expr come_froms
if_exp_compare38 ::= or_in_ifexp jump_if_false_cf expr . jf_cfs expr come_froms
if_exp_loop ::= expr_pjif . expr POP_JUMP_IF_FALSE_LOOP JUMP_FORWARD come_froms expr
if_exp_loop ::= expr_pjif expr . POP_JUMP_IF_FALSE_LOOP JUMP_FORWARD come_froms expr
if_exp_not ::= expr . POP_JUMP_IF_TRUE expr jump_forward_else expr COME_FROM
if_exp_not ::= expr POP_JUMP_IF_TRUE . expr jump_forward_else expr COME_FROM
if_exp_not ::= expr POP_JUMP_IF_TRUE expr . jump_forward_else expr COME_FROM
if_exp_true ::= expr . JUMP_FORWARD expr COME_FROM
if_not_stmtc ::= testexprc . ifstmts_jumpc \e__come_froms
if_not_stmtc ::= testexprc . ifstmts_jumpc _come_froms
if_not_stmtc ::= testexprc ifstmts_jumpc . _come_froms
if_not_stmtc ::= testexprc ifstmts_jumpc \e__come_froms . 
if_not_stmtc ::= testexprc ifstmts_jumpc _come_froms . 
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE . come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE . come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE . come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE . come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms . stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms . stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts . jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts . jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_stmt ::= expr . POP_JUMP_IF_TRUE expr pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE . expr pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr . pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump . come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms . stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms stmts . COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms stmts COME_FROM . 
ifelsestmt ::= bool_op . stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op . stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op . stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op . stmts_opt jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs . else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs . else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs \e_else_suite_opt . opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= bool_op stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except . 
ifelsestmt ::= bool_op stmts_opt jf_cfs else_suite_opt . opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= bool_op stmts_opt jf_cfs else_suite_opt opt_come_from_except . 
ifelsestmt ::= testexpr . stmts_opt JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr . stmts_opt JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr . stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr \e_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt JUMP_FORWARD . else_suite \e__come_froms
ifelsestmt ::= testexpr stmts_opt JUMP_FORWARD . else_suite _come_froms
ifelsestmt ::= testexpr stmts_opt jf_cfs . else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs . else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt . opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt . opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt opt_come_from_except . 
ifelsestmtc ::= testexpr . c_stmts cf_pt else_suite
ifelsestmtc ::= testexpr . c_stmts come_froms else_suite
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr . c_stmts_opt cf_jump_back else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt jb_cfs else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr . c_stmts_opt jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr . c_stmts_opt jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr \e_c_stmts_opt . cf_jump_back else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . jb_cfs else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr \e_c_stmts_opt . jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts . cf_pt else_suite
ifelsestmtc ::= testexpr c_stmts . come_froms else_suite
ifelsestmtc ::= testexpr c_stmts come_froms . else_suite
ifelsestmtc ::= testexpr c_stmts come_froms else_suite . 
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr c_stmts_opt . cf_jump_back else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . jb_cfs else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr c_stmts_opt . jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt . jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suite \e__come_froms
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suite _come_froms
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suitec
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else . else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else . else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec . opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec \e_opt_come_from_except . 
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec opt_come_from_except . 
ifelsestmtc ::= testexpr_cf . c_stmts_opt jb_cf else_suitec
ifelsestmtc ::= testexpr_cf \e_c_stmts_opt . jb_cf else_suitec
ifelsestmtc ::= testexpr_cf c_stmts_opt . jb_cf else_suitec
ifelsestmtr ::= testexpr . return_if_stmts returns
iflaststmt ::= testexpr . returns
iflaststmt ::= testexpr . stmts
iflaststmt ::= testexpr . stmts JUMP_FORWARD
iflaststmt ::= testexpr . stmts_opt JUMP_FORWARD
iflaststmt ::= testexpr \e_stmts_opt . JUMP_FORWARD
iflaststmt ::= testexpr returns . 
iflaststmt ::= testexpr stmts . 
iflaststmt ::= testexpr stmts . JUMP_FORWARD
iflaststmt ::= testexpr stmts JUMP_FORWARD . 
iflaststmt ::= testexpr stmts_opt . JUMP_FORWARD
iflaststmt ::= testexpr stmts_opt JUMP_FORWARD . 
iflaststmtc ::= testexpr . c_stmts
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP POP_BLOCK
iflaststmtc ::= testexpr . c_stmts come_froms
iflaststmtc ::= testexpr c_stmts . 
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP POP_BLOCK
iflaststmtc ::= testexpr c_stmts . come_froms
iflaststmtc ::= testexpr c_stmts come_froms . 
iflaststmtc ::= testexprc . c_stmts
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP \e_opt_pop_block
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP opt_pop_block
iflaststmtc ::= testexprc c_stmts . 
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP \e_opt_pop_block
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP opt_pop_block
ifpoplaststmtc ::= testexpr . POP_TOP \e_c_stmts_opt
ifpoplaststmtc ::= testexpr . POP_TOP c_stmts_opt
ifstmt ::= testexpr . ifstmts_jump \e__come_froms
ifstmt ::= testexpr . ifstmts_jump _come_froms
ifstmt ::= testexpr . stmts \e__come_froms
ifstmt ::= testexpr . stmts _come_froms
ifstmt ::= testexpr ifstmts_jump . _come_froms
ifstmt ::= testexpr ifstmts_jump \e__come_froms . 
ifstmt ::= testexpr ifstmts_jump _come_froms . 
ifstmt ::= testexpr stmts . _come_froms
ifstmt ::= testexpr stmts \e__come_froms . 
ifstmt ::= testexpr stmts _come_froms . 
ifstmt_bool ::= not_and_not . stmts come_froms
ifstmt_bool ::= not_and_not stmts . come_froms
ifstmt_bool ::= not_and_not stmts come_froms . 
ifstmt_bool ::= or_and1 . stmts come_froms
ifstmt_bool ::= or_and1 stmts . come_froms
ifstmt_bool ::= or_and1 stmts come_froms . 
ifstmtc ::= testexpr . ifstmts_jumpc
ifstmtc ::= testexpr ifstmts_jumpc . 
ifstmtc ::= testexprc . ifstmts_jumpc \e__come_froms
ifstmtc ::= testexprc . ifstmts_jumpc _come_froms
ifstmtc ::= testexprc ifstmts_jumpc . _come_froms
ifstmtc ::= testexprc ifstmts_jumpc \e__come_froms . 
ifstmtc ::= testexprc ifstmts_jumpc _come_froms . 
ifstmts_jump ::= COME_FROM . stmts COME_FROM
ifstmts_jump ::= COME_FROM . stmts come_froms
ifstmts_jump ::= COME_FROM stmts . COME_FROM
ifstmts_jump ::= COME_FROM stmts . come_froms
ifstmts_jump ::= COME_FROM stmts COME_FROM . 
ifstmts_jump ::= COME_FROM stmts come_froms . 
ifstmts_jump ::= \e_stmts_opt . JUMP_FORWARD JUMP_FORWARD \e__come_froms
ifstmts_jump ::= \e_stmts_opt . JUMP_FORWARD JUMP_FORWARD _come_froms
ifstmts_jump ::= \e_stmts_opt . come_froms
ifstmts_jump ::= \e_stmts_opt come_froms . 
ifstmts_jump ::= stmts . come_froms
ifstmts_jump ::= stmts come_froms . 
ifstmts_jump ::= stmts_opt . JUMP_FORWARD JUMP_FORWARD \e__come_froms
ifstmts_jump ::= stmts_opt . JUMP_FORWARD JUMP_FORWARD _come_froms
ifstmts_jump ::= stmts_opt . come_froms
ifstmts_jump ::= stmts_opt JUMP_FORWARD . JUMP_FORWARD \e__come_froms
ifstmts_jump ::= stmts_opt JUMP_FORWARD . JUMP_FORWARD _come_froms
ifstmts_jump ::= stmts_opt come_froms . 
ifstmts_jumpc ::= COME_FROM . c_stmts JUMP_FORWARD
ifstmts_jumpc ::= COME_FROM . c_stmts JUMP_LOOP
ifstmts_jumpc ::= COME_FROM . c_stmts come_froms
ifstmts_jumpc ::= COME_FROM c_stmts . JUMP_FORWARD
ifstmts_jumpc ::= COME_FROM c_stmts . JUMP_LOOP
ifstmts_jumpc ::= COME_FROM c_stmts . come_froms
ifstmts_jumpc ::= COME_FROM c_stmts come_froms . 
ifstmts_jumpc ::= \e_c_stmts_opt . come_froms
ifstmts_jumpc ::= \e_c_stmts_opt come_froms . 
ifstmts_jumpc ::= c_stmts . 
ifstmts_jumpc ::= c_stmts . JUMP_LOOP
ifstmts_jumpc ::= c_stmts_opt . come_froms
ifstmts_jumpc ::= c_stmts_opt come_froms . 
ifstmts_jumpc ::= ifstmts_jump . 
import ::= LOAD_CONST . LOAD_CONST alias
import_as37 ::= LOAD_CONST . LOAD_CONST importlist37 store POP_TOP
import_from ::= LOAD_CONST . LOAD_CONST IMPORT_NAME importlist POP_TOP
import_from ::= LOAD_CONST . LOAD_CONST importlist POP_TOP
import_from37 ::= LOAD_CONST . LOAD_CONST IMPORT_NAME_ATTR importlist37 POP_TOP
import_from_as37 ::= LOAD_CONST . LOAD_CONST import_from_attr37 store POP_TOP
import_from_star ::= LOAD_CONST . LOAD_CONST IMPORT_NAME IMPORT_STAR
import_from_star ::= LOAD_CONST . LOAD_CONST IMPORT_NAME_ATTR IMPORT_STAR
importmultiple ::= LOAD_CONST . LOAD_CONST alias imports_cont
jb_cfs ::= \e_come_from_opt . JUMP_LOOP come_froms
jb_cfs ::= come_from_opt . JUMP_LOOP come_froms
jf_cfs ::= JUMP_FORWARD . _come_froms
jf_cfs ::= JUMP_FORWARD \e__come_froms . 
jf_cfs ::= JUMP_FORWARD _come_froms . 
jump ::= JUMP_FORWARD . 
jump_except ::= JUMP_FORWARD . 
jump_excepts ::= jump_except . 
jump_excepts ::= jump_excepts . jump_except
jump_forward_else ::= JUMP_FORWARD . _come_froms
jump_forward_else ::= JUMP_FORWARD \e__come_froms . 
jump_forward_else ::= JUMP_FORWARD _come_froms . 
jump_forward_else ::= come_froms . jump COME_FROM
jump_forward_else ::= come_froms jump . COME_FROM
jump_forward_else ::= come_froms jump COME_FROM . 
jump_if_false_cf ::= POP_JUMP_IF_FALSE . COME_FROM
jump_if_false_cf ::= POP_JUMP_IF_FALSE COME_FROM . 
kvlist_0 ::= BUILD_MAP_0 . 
kvlist_1 ::= expr . expr BUILD_MAP_1
kvlist_1 ::= expr expr . BUILD_MAP_1
kvlist_1 ::= expr expr BUILD_MAP_1 . 
last_stmt ::= iflaststmt . 
lastc_stmt ::= ifelsestmtc . 
lc_setup_finally ::= LOAD_CONST . SETUP_FINALLY
list ::= expr . BUILD_LIST_1
list ::= expr BUILD_LIST_1 . 
mkfuncdeco ::= expr . mkfuncdeco CALL_FUNCTION_1
mkfuncdeco ::= expr . mkfuncdeco0 CALL_FUNCTION_1
named_expr ::= expr . DUP_TOP store
nand ::= and_parts . expr_pjit come_froms
nor_cond ::= or_parts . expr_pjif
nor_cond ::= or_parts expr_pjif . 
not ::= expr_pjit . 
not_and_not ::= not . expr_pjif COME_FROM
not_and_not ::= not expr_pjif . COME_FROM
not_and_not ::= not expr_pjif COME_FROM . 
not_or ::= and_parts . expr_pjif \e__come_froms
not_or ::= and_parts . expr_pjif _come_froms
not_or ::= and_parts expr_pjif . _come_froms
not_or ::= and_parts expr_pjif \e__come_froms . 
opt_come_from_except ::= come_any_froms . 
or ::= expr_pjit . expr COME_FROM
or ::= expr_pjit . expr jump_if_false_cf
or ::= expr_pjit expr . COME_FROM
or ::= expr_pjit expr . jump_if_false_cf
or ::= expr_pjit expr COME_FROM . 
or ::= expr_pjit expr jump_if_false_cf . 
or ::= or_parts . expr
or ::= or_parts expr . 
or_and1 ::= or_parts . and_parts come_froms
or_and1 ::= or_parts and_parts . come_froms
or_and1 ::= or_parts and_parts come_froms . 
or_and_not ::= expr_pjit . and_not COME_FROM
or_cond ::= not_and_not . expr_pjif come_froms
or_cond ::= or_parts . expr_pjif come_froms
or_cond ::= or_parts expr_pjif . come_froms
or_cond ::= or_parts expr_pjif come_froms . 
or_expr ::= expr . JUMP_IF_TRUE expr COME_FROM
or_in_ifexp ::= expr_pjit . expr
or_in_ifexp ::= expr_pjit expr . 
or_in_ifexp ::= or_in_ifexp . POP_JUMP_IF_TRUE expr
or_in_ifexp ::= or_in_ifexp POP_JUMP_IF_TRUE . expr
or_in_ifexp ::= or_in_ifexp POP_JUMP_IF_TRUE expr . 
or_parts ::= expr_pjit . 
or_parts ::= or_parts . expr_pjit
or_parts ::= or_parts expr_pjit . 
pop_ex_return ::= return_expr . ROT_FOUR POP_EXCEPT RETURN_VALUE
pop_jump ::= POP_JUMP_IF_FALSE . 
pop_jump ::= POP_JUMP_IF_TRUE . 
popb_return ::= return_expr . POP_BLOCK RETURN_VALUE
return ::= return_expr . RETURN_END_IF
return ::= return_expr . RETURN_VALUE
return ::= return_expr . discard_tops RETURN_VALUE
return ::= return_expr RETURN_VALUE . 
return_except ::= stmts . POP_BLOCK return
return_except ::= stmts POP_BLOCK . return
return_expr ::= expr . 
return_if_stmt ::= return_expr . RETURN_END_IF
return_if_stmt ::= return_expr . RETURN_END_IF POP_BLOCK
return_if_stmts ::= _stmts . return_if_stmt \e__come_froms
return_if_stmts ::= _stmts . return_if_stmt _come_froms
returns ::= _stmts . return
returns ::= _stmts . return_if_stmt
returns ::= _stmts return . 
returns ::= return . 
returns_in_except ::= _stmts . except_return_value
returns_in_except2 ::= _stmts . except_return_value2
sf_pb_call_returns ::= SETUP_FINALLY . POP_BLOCK CALL_FINALLY returns
sf_pb_call_returns ::= SETUP_FINALLY . POP_BLOCK POP_EXCEPT CALL_FINALLY returns
sstmt ::= return . RETURN_LAST
sstmt ::= return RETURN_LAST . 
sstmt ::= sstmt . RETURN_LAST
sstmt ::= sstmt RETURN_LAST . 
sstmt ::= stmt . 
stmt ::= assign . 
stmt ::= delete . 
stmt ::= expr_stmt . 
stmt ::= if_or_stmt . 
stmt ::= ifelsestmt . 
stmt ::= ifstmt . 
stmt ::= ifstmt_bool . 
stmt ::= last_stmt . 
stmt ::= return . 
stmt ::= try_except . 
stmt ::= tryfinallystmt . 
stmts ::= sstmt . 
stmts ::= stmt . 
stmts ::= stmts . last_stmt
stmts ::= stmts . sstmt
stmts ::= stmts . stmt
stmts ::= stmts last_stmt . 
stmts ::= stmts sstmt . 
stmts ::= stmts stmt . 
stmts_opt ::= stmts . 
store ::= STORE_FAST . 
store ::= expr . STORE_ATTR
store ::= expr STORE_ATTR . 
store ::= store_subscript . 
store_subscript ::= expr . expr STORE_SUBSCR
store_subscript ::= expr expr . STORE_SUBSCR
store_subscript ::= expr expr STORE_SUBSCR . 
subscript ::= expr . expr BINARY_SUBSCR
subscript ::= expr expr . BINARY_SUBSCR
subscript ::= expr expr BINARY_SUBSCR . 
subscript2 ::= expr . expr DUP_TOP_TWO BINARY_SUBSCR
subscript2 ::= expr expr . DUP_TOP_TWO BINARY_SUBSCR
suite_stmts ::= _stmts . 
suite_stmts ::= returns . 
suite_stmts_opt ::= suite_stmts . 
testexpr ::= testfalse . 
testexpr ::= testtrue . 
testexpr_cf ::= testexpr . come_froms
testexpr_cf ::= testexpr come_froms . 
testexprc ::= testexpr . 
testfalse ::= expr_pjif . 
testfalse ::= or_cond . 
testfalsec ::= expr . POP_JUMP_IF_TRUE_LOOP
testtrue ::= expr_pjit . 
testtrue ::= nor_cond . 
testtrue ::= or_in_ifexp . POP_JUMP_IF_TRUE
testtrue ::= or_in_ifexp POP_JUMP_IF_TRUE . 
testtruec ::= expr . POP_JUMP_IF_FALSE_LOOP
try_elsestmtl38 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 . COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 . COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 COME_FROM . else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 COME_FROM . else_suitec opt_come_from_except
try_except ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38
try_except ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38
try_except ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38
try_except ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 . 
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 . jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 . jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 jump_excepts . come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 jump_excepts \e_come_from_except_clauses . 
try_except38 ::= SETUP_FINALLY . POP_BLOCK POP_TOP \e_suite_stmts_opt except_handler38a
try_except38 ::= SETUP_FINALLY . POP_BLOCK POP_TOP suite_stmts_opt except_handler38a
try_except38 ::= SETUP_FINALLY . POP_BLOCK suite_stmts except_handler38b
try_except38r ::= SETUP_FINALLY . return_except except_handler38b
try_except38r2 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt . POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r4 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond1 return COME_FROM END_FINALLY
try_except38r5 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond1 except_ret38d COME_FROM END_FINALLY
try_except38r5 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond1 except_suite COME_FROM END_FINALLY COME_FROM
try_except38r5 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond2 except_ret38b END_FINALLY COME_FROM
try_except38r6 ::= SETUP_FINALLY . returns_in_except2 COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP except_ret38d END_FINALLY
try_except38r7 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except_as ::= SETUP_FINALLY . POP_BLOCK suite_stmts except_handler_as END_FINALLY COME_FROM
try_except_as ::= SETUP_FINALLY . suite_stmts except_handler_as END_FINALLY COME_FROM
try_except_as ::= SETUP_FINALLY suite_stmts . except_handler_as END_FINALLY COME_FROM
try_except_ret38 ::= SETUP_FINALLY . returns except_ret38a
try_except_ret38a ::= SETUP_FINALLY . returns except_handler38c END_FINALLY \e_come_from_opt
try_except_ret38a ::= SETUP_FINALLY . returns except_handler38c END_FINALLY come_from_opt
tryfinally36 ::= SETUP_FINALLY . returns COME_FROM_FINALLY suite_stmts
tryfinally38_return ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 . except_ret38c
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP \e_suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP \e_suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP suite_stmts_opt END_FINALLY POP_TOP
tryfinally38rstmt3 ::= SETUP_FINALLY . expr POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY ss_end_finally
tryfinally38rstmt3 ::= SETUP_FINALLY expr . POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY ss_end_finally
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY . COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY . COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY . COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY . COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY . POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY . POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally_return_stmt1 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt1 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt1 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt1 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt2 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY
tryfinally_return_stmt2 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY
tryfinally_return_stmt2 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY
tryfinally_return_stmt2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY
tryfinallystmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY . COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY . COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY . suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt . END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt . END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY . 
tryfinallystmt_break ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tuple ::= expr . expr BUILD_TUPLE_2
tuple ::= expr expr . BUILD_TUPLE_2
unary_not ::= expr . UNARY_NOT
unary_op ::= expr . unary_operator
while1stmt ::= \e__come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts COME_FROM . JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts . COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts COME_FROM . JUMP_LOOP COME_FROM_LOOP
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= _come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= _come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= \e__come_froms . pass JUMP_LOOP
whileTruestmt38 ::= \e__come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= _come_froms . pass JUMP_LOOP
whileTruestmt38 ::= _come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms bool_op . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms bool_op . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms bool_op c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms bool_op c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr . returns POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts . come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts come_froms . 
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr returns . POP_BLOCK
whilestmt38 ::= \e__come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= _come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr . c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr . c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr . returns POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexpr c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr c_stmts . come_froms
whilestmt38 ::= _come_froms testexpr c_stmts come_froms . 
whilestmt38 ::= _come_froms testexpr c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr returns . POP_BLOCK
whilestmt38 ::= _come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP _come_froms
yield ::= expr . YIELD_VALUE
yield_from ::= expr . GET_YIELD_FROM_ITER LOAD_CONST YIELD_FROM
Instruction context:
   
 L. 814       446  LOAD_FAST                'response'
->               448  RETURN_VALUE     

-- Stacks of completed symbols:
START ::= |- stmts . 
_come_froms ::= \e__come_froms . COME_FROM
_come_froms ::= \e__come_froms COME_FROM . 
_come_froms ::= _come_froms . COME_FROM
_come_froms ::= _come_froms COME_FROM . 
_stmts ::= stmts . 
and_cond ::= and_parts . expr_pjif \e__come_froms
and_cond ::= and_parts . expr_pjif _come_froms
and_cond ::= testfalse . expr_pjif \e__come_froms
and_cond ::= testfalse . expr_pjif _come_froms
and_not ::= expr_pjif . expr_pjit
and_or_cond ::= and_parts . expr POP_JUMP_IF_TRUE come_froms expr_pjif \e__come_froms
and_or_cond ::= and_parts . expr POP_JUMP_IF_TRUE come_froms expr_pjif _come_froms
and_or_expr ::= and_parts . expr jitop_come_from_expr COME_FROM
and_parts ::= and_parts . expr_pjif
and_parts ::= expr_pjif . 
assert2 ::= expr . POP_JUMP_IF_TRUE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE . LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr . POP_JUMP_IF_FALSE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE . LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert_invert ::= testtrue . LOAD_GLOBAL RAISE_VARARGS_1
assign ::= expr . DUP_TOP designList
assign ::= expr . store
assign ::= expr store . 
assign2 ::= expr . expr ROT_TWO store store
assign2 ::= expr expr . ROT_TWO store store
assign3 ::= expr . expr expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr . expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr expr . ROT_THREE ROT_TWO store store store
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
attribute ::= expr . LOAD_ATTR
attribute ::= expr LOAD_ATTR . 
attribute37 ::= expr . LOAD_METHOD
attribute37 ::= expr LOAD_METHOD . 
aug_assign1 ::= expr . expr inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr . expr inplace_op store
aug_assign1 ::= expr expr . inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr expr . inplace_op store
aug_assign2 ::= expr . DUP_TOP LOAD_ATTR expr inplace_op ROT_TWO STORE_ATTR
await_expr ::= expr . GET_AWAITABLE LOAD_CONST YIELD_FROM
bin_op ::= expr . expr binary_operator
bin_op ::= expr expr . binary_operator
bin_op ::= expr expr binary_operator . 
binary_operator ::= BINARY_ADD . 
binary_operator ::= BINARY_MODULO . 
break ::= POP_BLOCK . BREAK_LOOP
break ::= POP_BLOCK . POP_TOP BREAK_LOOP
break ::= POP_BLOCK . POP_TOP JUMP_FORWARD
c_compare_chained37 ::= expr . c_compare_chained_middlea_37
c_compare_chained37_false ::= expr . c_compare_chained_middleb_false_37
c_compare_chained37_false ::= expr . c_compare_chained_right_false_37
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suitec
c_forelsestmt38 ::= expr get_for_iter . store for_block JUMP_LOOP \e__come_froms else_suitec
c_forelsestmt38 ::= expr get_for_iter . store for_block JUMP_LOOP _come_froms else_suitec
c_forelsestmt38 ::= expr get_for_iter . store for_block POP_BLOCK else_suitec
c_forelsestmt38 ::= expr get_for_iter store . for_block JUMP_LOOP \e__come_froms else_suitec
c_forelsestmt38 ::= expr get_for_iter store . for_block JUMP_LOOP _come_froms else_suitec
c_forelsestmt38 ::= expr get_for_iter store . for_block POP_BLOCK else_suitec
c_forelsestmt38 ::= expr get_for_iter store for_block . JUMP_LOOP \e__come_froms else_suitec
c_forelsestmt38 ::= expr get_for_iter store for_block . JUMP_LOOP _come_froms else_suitec
c_forelsestmt38 ::= expr get_for_iter store for_block . POP_BLOCK else_suitec
c_forelsestmt38 ::= expr get_for_iter store for_block JUMP_LOOP . _come_froms else_suitec
c_forelsestmt38 ::= expr get_for_iter store for_block JUMP_LOOP \e__come_froms . else_suitec
c_forelsestmt38 ::= expr get_for_iter store for_block JUMP_LOOP _come_froms . else_suitec
c_forelsestmt38 ::= expr get_for_iter store for_block JUMP_LOOP _come_froms else_suitec . 
c_nand ::= and_parts . expr_pjitt come_froms
c_returns ::= c_stmts . return
c_returns ::= c_stmts return . 
c_returns ::= returns . 
c_stmt ::= c_try_except . 
c_stmt ::= if_not_stmtc . 
c_stmt ::= ifelsestmtc . 
c_stmt ::= ifstmtc . 
c_stmt ::= stmt . 
c_stmts ::= _stmts . 
c_stmts ::= _stmts . lastc_stmt
c_stmts ::= _stmts lastc_stmt . 
c_stmts ::= c_returns . 
c_stmts ::= c_stmt . 
c_stmts ::= c_stmts . c_stmt
c_stmts ::= c_stmts c_stmt . 
c_stmts ::= lastc_stmt . 
c_stmts_opt ::= c_stmts . 
c_suite_stmts ::= c_stmts . 
c_suite_stmts ::= suite_stmts . 
c_suite_stmts_opt ::= c_suite_stmts . 
c_suite_stmts_opt ::= suite_stmts_opt . 
c_try_except ::= SETUP_FINALLY . c_suite_stmts POP_BLOCK except_handler38
c_try_except ::= SETUP_FINALLY c_suite_stmts . POP_BLOCK except_handler38
c_try_except ::= SETUP_FINALLY c_suite_stmts POP_BLOCK . except_handler38
c_try_except ::= SETUP_FINALLY c_suite_stmts POP_BLOCK except_handler38 . 
c_tryfinallybstmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
call ::= expr . CALL_FUNCTION_0
call ::= expr . CALL_METHOD_0
call ::= expr . expr CALL_FUNCTION_1
call ::= expr . expr CALL_METHOD_1
call ::= expr . expr expr CALL_METHOD_2
call ::= expr . expr expr expr CALL_FUNCTION_3
call ::= expr . expr expr expr CALL_METHOD_3
call ::= expr . expr expr expr expr CALL_METHOD_4
call ::= expr CALL_METHOD_0 . 
call ::= expr expr . CALL_FUNCTION_1
call ::= expr expr . CALL_METHOD_1
call ::= expr expr . expr CALL_METHOD_2
call ::= expr expr . expr expr CALL_FUNCTION_3
call ::= expr expr . expr expr CALL_METHOD_3
call ::= expr expr . expr expr expr CALL_METHOD_4
call ::= expr expr CALL_METHOD_1 . 
call ::= expr expr expr . CALL_METHOD_2
call ::= expr expr expr . expr CALL_FUNCTION_3
call ::= expr expr expr . expr CALL_METHOD_3
call ::= expr expr expr . expr expr CALL_METHOD_4
call ::= expr expr expr CALL_METHOD_2 . 
call ::= expr expr expr expr . CALL_FUNCTION_3
call ::= expr expr expr expr . CALL_METHOD_3
call ::= expr expr expr expr . expr CALL_METHOD_4
call ::= expr expr expr expr CALL_METHOD_3 . 
call ::= expr expr expr expr expr . CALL_METHOD_4
call_kw36 ::= expr . expr LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr . expr expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr . expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr . expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr . expr expr expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_7
call_kw36 ::= expr expr . LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr expr . expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr . expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr . expr expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_7
call_kw36 ::= expr expr LOAD_CONST . CALL_FUNCTION_KW_1
call_kw36 ::= expr expr expr . LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr . expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_7
call_kw36 ::= expr expr expr LOAD_CONST . CALL_FUNCTION_KW_2
call_kw36 ::= expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr . expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_7
call_kw36 ::= expr expr expr expr LOAD_CONST . CALL_FUNCTION_KW_3
call_kw36 ::= expr expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_7
call_kw36 ::= expr expr expr expr expr LOAD_CONST . CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_7
call_kw36 ::= expr expr expr expr expr expr LOAD_CONST . CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_7
call_kw36 ::= expr expr expr expr expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_7
call_kw36 ::= expr expr expr expr expr expr expr expr LOAD_CONST . CALL_FUNCTION_KW_7
call_kw36 ::= expr expr expr expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_7 . 
cf_jump_back ::= COME_FROM . JUMP_LOOP
cf_pt ::= COME_FROM . POP_TOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE_LOOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE_LOOP
classdefdeco1 ::= expr . classdefdeco1 CALL_FUNCTION_1
classdefdeco1 ::= expr . classdefdeco2 CALL_FUNCTION_1
come_any_from ::= COME_FROM . 
come_any_froms ::= come_any_from . 
come_any_froms ::= come_any_froms . come_any_from
come_from_loops ::= \e_come_from_loops . COME_FROM_LOOP
come_from_opt ::= COME_FROM . 
come_froms ::= COME_FROM . 
come_froms ::= come_froms . COME_FROM
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP \e__come_froms
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP _come_froms
compare_chained37 ::= expr . chained_parts
compare_chained37 ::= expr . compare_chained_middlea_37
compare_chained37 ::= expr . compare_chained_middlec_37
compare_chained37_false ::= expr . compare_chained_middle_false_37
compare_chained37_false ::= expr . compare_chained_middleb_false_37
compare_chained37_false ::= expr . compare_chained_right_false_37
compare_chained_and ::= expr . chained_parts compare_chained_righta_false_37 come_froms POP_TOP JUMP_FORWARD COME_FROM negated_testtrue come_froms
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_middle COME_FROM
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_right COME_FROM
compare_single ::= expr . expr COMPARE_OP
compare_single ::= expr expr . COMPARE_OP
cond_except_stmt ::= except_cond1 . except_stmts
cond_except_stmt ::= except_cond1 except_stmts . 
cond_except_stmts_opt ::= \e_cond_except_stmts_opt . cond_except_stmt
cond_except_stmts_opt ::= \e_cond_except_stmts_opt cond_except_stmt . 
cond_except_stmts_opt ::= cond_except_stmts_opt . cond_except_stmt
continues ::= _stmts . lastc_stmt continue
continues ::= _stmts lastc_stmt . continue
continues ::= lastc_stmt . continue
dict ::= expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_2
dict ::= expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr . expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr . expr expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_2
dict ::= expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr expr . expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr LOAD_CONST . BUILD_CONST_KEY_MAP_2
dict ::= expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr expr expr . expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr expr expr expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr LOAD_CONST . BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr expr expr expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr LOAD_CONST . BUILD_CONST_KEY_MAP_5
dict ::= expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_5 . 
dict ::= expr expr expr expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr expr expr LOAD_CONST . BUILD_CONST_KEY_MAP_7
dict ::= kvlist_0 . 
dict ::= kvlist_1 . 
dict_comp_func ::= BUILD_MAP_0 . LOAD_ARG for_iter store comp_iter JUMP_LOOP \e__come_froms ending_return
dict_comp_func ::= BUILD_MAP_0 . LOAD_ARG for_iter store comp_iter JUMP_LOOP _come_froms ending_return
else_suite ::= returns . 
else_suite ::= suite_stmts . 
else_suite_opt ::= else_suite . 
else_suitec ::= c_returns . 
else_suitec ::= c_stmts . 
else_suitec ::= suite_stmts . 
except_cond1 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP . POP_TOP
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP . POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP . 
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP . POP_EXCEPT
except_cond2 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store . POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store . POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP . come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt . 
except_cond_pop3_rot4_except_return38 ::= except_cond1 . except_stmts_opt return_expr ROT_FOUR POP_EXCEPT POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM
except_cond_pop3_rot4_except_return38 ::= except_cond1 \e_except_stmts_opt . return_expr ROT_FOUR POP_EXCEPT POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM
except_cond_pop3_rot4_except_return38 ::= except_cond1 \e_except_stmts_opt return_expr . ROT_FOUR POP_EXCEPT POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM
except_cond_pop3_rot4_except_return38 ::= except_cond1 except_stmts_opt . return_expr ROT_FOUR POP_EXCEPT POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM
except_cond_pop3_rot4_except_return38 ::= except_cond1 except_stmts_opt return_expr . ROT_FOUR POP_EXCEPT POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM
except_cond_pop3_rot4_except_return38 ::= except_cond1 except_stmts_opt return_expr ROT_FOUR . POP_EXCEPT POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM
except_cond_pop3_rot4_except_return38 ::= except_cond1 except_stmts_opt return_expr ROT_FOUR POP_EXCEPT . POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM
except_handler38 ::= jump . COME_FROM_FINALLY except_stmts END_FINALLY \e_opt_come_from_except
except_handler38 ::= jump . COME_FROM_FINALLY except_stmts END_FINALLY opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY . except_stmts END_FINALLY \e_opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY . except_stmts END_FINALLY opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY except_stmts . END_FINALLY \e_opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY except_stmts . END_FINALLY opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY except_stmts END_FINALLY . opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY except_stmts END_FINALLY \e_opt_come_from_except . 
except_handler38 ::= jump COME_FROM_FINALLY except_stmts END_FINALLY opt_come_from_except . 
except_ret38 ::= SETUP_FINALLY . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
except_ret38 ::= SETUP_FINALLY . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
except_ret38 ::= SETUP_FINALLY expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
except_ret38 ::= SETUP_FINALLY expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
except_ret38b ::= SETUP_FINALLY . suite_stmts expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY . suite_stmts expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY suite_stmts . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY suite_stmts . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY suite_stmts expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY suite_stmts expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38c ::= SETUP_FINALLY . suite_stmts expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY expr STORE_FAST DELETE_FAST END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM END_FINALLY come_any_froms
except_ret38c ::= SETUP_FINALLY suite_stmts . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY expr STORE_FAST DELETE_FAST END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM END_FINALLY come_any_froms
except_ret38c ::= SETUP_FINALLY suite_stmts expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY expr STORE_FAST DELETE_FAST END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM END_FINALLY come_any_froms
except_return_value ::= POP_BLOCK . return
except_return_value ::= expr . POP_BLOCK RETURN_VALUE
except_return_value2 ::= POP_BLOCK . return
except_stmt ::= except_cond1 . except_suite \e_come_from_opt
except_stmt ::= except_cond1 . except_suite come_from_opt
except_stmt ::= except_cond1 except_suite . come_from_opt
except_stmt ::= except_cond1 except_suite \e_come_from_opt . 
except_stmt ::= except_cond1 except_suite come_from_opt . 
except_stmt ::= except_cond2 . except_ret38b
except_stmt ::= except_cond2 . except_suite \e_come_from_opt
except_stmt ::= except_cond2 . except_suite come_from_opt
except_stmt ::= except_cond2 . except_suite_finalize
except_stmt ::= pop_ex_return . 
except_stmt ::= stmt . 
except_stmts ::= except_stmt . 
except_stmts ::= except_stmts . except_stmt
except_stmts ::= except_stmts except_stmt . 
except_stmts_opt ::= \e_except_stmts_opt . except_stmt
except_stmts_opt ::= \e_except_stmts_opt except_stmt . 
except_stmts_opt ::= except_stmts_opt . except_stmt
except_stmts_opt ::= except_stmts_opt except_stmt . 
except_suite ::= \e_c_stmts_opt . COME_FROM POP_EXCEPT jump_except COME_FROM
except_suite ::= \e_c_stmts_opt . POP_EXCEPT POP_TOP JUMP_FORWARD POP_EXCEPT jump_except
except_suite ::= \e_c_stmts_opt . POP_EXCEPT jump_except
except_suite ::= c_stmts_opt . COME_FROM POP_EXCEPT jump_except COME_FROM
except_suite ::= c_stmts_opt . POP_EXCEPT POP_TOP JUMP_FORWARD POP_EXCEPT jump_except
except_suite ::= c_stmts_opt . POP_EXCEPT jump_except
except_suite ::= c_stmts_opt COME_FROM . POP_EXCEPT jump_except COME_FROM
except_suite ::= returns . 
except_suite_finalize ::= SETUP_FINALLY . c_stmts_opt except_var_finalize END_FINALLY POP_EXCEPT jump
except_suite_finalize ::= SETUP_FINALLY . c_stmts_opt except_var_finalize END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY . returns COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY . returns COME_FROM_FINALLY suite_stmts_opt END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY \e_c_stmts_opt . except_var_finalize END_FINALLY POP_EXCEPT jump
except_suite_finalize ::= SETUP_FINALLY \e_c_stmts_opt . except_var_finalize END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY c_stmts_opt . except_var_finalize END_FINALLY POP_EXCEPT jump
except_suite_finalize ::= SETUP_FINALLY c_stmts_opt . except_var_finalize END_FINALLY jump
except_var_finalize ::= POP_BLOCK . LOAD_CONST COME_FROM_FINALLY LOAD_CONST store delete
except_var_finalize ::= POP_BLOCK . POP_EXCEPT LOAD_CONST COME_FROM_FINALLY LOAD_CONST store delete
except_var_finalize ::= POP_BLOCK POP_EXCEPT . LOAD_CONST COME_FROM_FINALLY LOAD_CONST store delete
expr ::= LOAD_CONST . 
expr ::= LOAD_FAST . 
expr ::= LOAD_GLOBAL . 
expr ::= LOAD_STR . 
expr ::= attribute . 
expr ::= attribute37 . 
expr ::= bin_op . 
expr ::= call . 
expr ::= call_kw36 . 
expr ::= dict . 
expr ::= get_iter . 
expr ::= list . 
expr ::= not . 
expr ::= subscript . 
expr_jifop ::= expr . JUMP_IF_FALSE_OR_POP
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP \e__come_froms
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP _come_froms
expr_jitop ::= expr . JUMP_IF_TRUE_OR_POP
expr_pjif ::= expr . POP_JUMP_IF_FALSE
expr_pjif ::= expr POP_JUMP_IF_FALSE . 
expr_pjit ::= expr . POP_JUMP_IF_TRUE
expr_pjit ::= expr POP_JUMP_IF_TRUE . 
expr_stmt ::= expr . POP_TOP
expr_stmt ::= expr POP_TOP . 
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block \e__come_froms
for38 ::= expr . get_for_iter store for_block _come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP _come_froms
for38 ::= expr get_for_iter . store for_block JUMP_LOOP \e__come_froms
for38 ::= expr get_for_iter . store for_block JUMP_LOOP \e__come_froms POP_BLOCK
for38 ::= expr get_for_iter . store for_block JUMP_LOOP _come_froms
for38 ::= expr get_for_iter . store for_block JUMP_LOOP _come_froms POP_BLOCK
for38 ::= expr get_for_iter . store for_block \e__come_froms
for38 ::= expr get_for_iter . store for_block _come_froms
for38 ::= expr get_for_iter store . for_block JUMP_LOOP \e__come_froms
for38 ::= expr get_for_iter store . for_block JUMP_LOOP \e__come_froms POP_BLOCK
for38 ::= expr get_for_iter store . for_block JUMP_LOOP _come_froms
for38 ::= expr get_for_iter store . for_block JUMP_LOOP _come_froms POP_BLOCK
for38 ::= expr get_for_iter store . for_block \e__come_froms
for38 ::= expr get_for_iter store . for_block _come_froms
for38 ::= expr get_for_iter store for_block . JUMP_LOOP \e__come_froms
for38 ::= expr get_for_iter store for_block . JUMP_LOOP \e__come_froms POP_BLOCK
for38 ::= expr get_for_iter store for_block . JUMP_LOOP _come_froms
for38 ::= expr get_for_iter store for_block . JUMP_LOOP _come_froms POP_BLOCK
for38 ::= expr get_for_iter store for_block . _come_froms
for38 ::= expr get_for_iter store for_block JUMP_LOOP . _come_froms
for38 ::= expr get_for_iter store for_block JUMP_LOOP . _come_froms POP_BLOCK
for38 ::= expr get_for_iter store for_block JUMP_LOOP \e__come_froms . 
for38 ::= expr get_for_iter store for_block JUMP_LOOP \e__come_froms . POP_BLOCK
for38 ::= expr get_for_iter store for_block JUMP_LOOP _come_froms . 
for38 ::= expr get_for_iter store for_block JUMP_LOOP _come_froms . POP_BLOCK
for38 ::= expr get_for_iter store for_block \e__come_froms . 
for38 ::= expr get_for_iter store for_block _come_froms . 
for_block ::= \e__come_froms . c_stmts_opt \e_come_from_loops JUMP_LOOP
for_block ::= \e__come_froms . c_stmts_opt come_from_loops JUMP_LOOP
for_block ::= \e__come_froms \e_c_stmts_opt . come_from_loops JUMP_LOOP
for_block ::= \e__come_froms \e_c_stmts_opt \e_come_from_loops . JUMP_LOOP
for_block ::= \e__come_froms c_stmts_opt . come_from_loops JUMP_LOOP
for_block ::= \e__come_froms c_stmts_opt \e_come_from_loops . JUMP_LOOP
for_block ::= \e__come_froms c_stmts_opt \e_come_from_loops JUMP_LOOP . 
for_block ::= \e_c_stmts_opt . _come_froms JUMP_LOOP
for_block ::= \e_c_stmts_opt . come_from_loops JUMP_LOOP
for_block ::= \e_c_stmts_opt \e__come_froms . JUMP_LOOP
for_block ::= \e_c_stmts_opt \e_come_from_loops . JUMP_LOOP
for_block ::= c_stmts . 
for_block ::= c_stmts . JUMP_LOOP
for_block ::= c_stmts JUMP_LOOP . 
for_block ::= c_stmts_opt . _come_froms JUMP_LOOP
for_block ::= c_stmts_opt . come_from_loops JUMP_LOOP
for_block ::= c_stmts_opt \e__come_froms . JUMP_LOOP
for_block ::= c_stmts_opt \e__come_froms JUMP_LOOP . 
for_block ::= c_stmts_opt \e_come_from_loops . JUMP_LOOP
for_block ::= c_stmts_opt \e_come_from_loops JUMP_LOOP . 
for_block ::= c_stmts_opt _come_froms . JUMP_LOOP
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelselaststmt38 ::= expr get_for_iter . store for_block else_suitec \e__come_froms
forelselaststmt38 ::= expr get_for_iter . store for_block else_suitec _come_froms
forelselaststmt38 ::= expr get_for_iter store . for_block else_suitec \e__come_froms
forelselaststmt38 ::= expr get_for_iter store . for_block else_suitec _come_froms
forelselaststmt38 ::= expr get_for_iter store for_block . else_suitec \e__come_froms
forelselaststmt38 ::= expr get_for_iter store for_block . else_suitec _come_froms
forelselaststmt38 ::= expr get_for_iter store for_block else_suitec . _come_froms
forelselaststmt38 ::= expr get_for_iter store for_block else_suitec \e__come_froms . 
forelselaststmt38 ::= expr get_for_iter store for_block else_suitec _come_froms . 
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelselaststmtc38 ::= expr get_for_iter . store for_block else_suitec \e__come_froms
forelselaststmtc38 ::= expr get_for_iter . store for_block else_suitec _come_froms
forelselaststmtc38 ::= expr get_for_iter store . for_block else_suitec \e__come_froms
forelselaststmtc38 ::= expr get_for_iter store . for_block else_suitec _come_froms
forelselaststmtc38 ::= expr get_for_iter store for_block . else_suitec \e__come_froms
forelselaststmtc38 ::= expr get_for_iter store for_block . else_suitec _come_froms
forelselaststmtc38 ::= expr get_for_iter store for_block else_suitec . _come_froms
forelselaststmtc38 ::= expr get_for_iter store for_block else_suitec \e__come_froms . 
forelselaststmtc38 ::= expr get_for_iter store for_block else_suitec _come_froms . 
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite _come_froms
forelsestmt38 ::= expr get_for_iter . store for_block JUMP_LOOP \e__come_froms else_suite \e__come_froms
forelsestmt38 ::= expr get_for_iter . store for_block JUMP_LOOP \e__come_froms else_suite _come_froms
forelsestmt38 ::= expr get_for_iter . store for_block JUMP_LOOP _come_froms else_suite \e__come_froms
forelsestmt38 ::= expr get_for_iter . store for_block JUMP_LOOP _come_froms else_suite _come_froms
forelsestmt38 ::= expr get_for_iter . store for_block POP_BLOCK else_suite \e__come_froms
forelsestmt38 ::= expr get_for_iter . store for_block POP_BLOCK else_suite _come_froms
forelsestmt38 ::= expr get_for_iter store . for_block JUMP_LOOP \e__come_froms else_suite \e__come_froms
forelsestmt38 ::= expr get_for_iter store . for_block JUMP_LOOP \e__come_froms else_suite _come_froms
forelsestmt38 ::= expr get_for_iter store . for_block JUMP_LOOP _come_froms else_suite \e__come_froms
forelsestmt38 ::= expr get_for_iter store . for_block JUMP_LOOP _come_froms else_suite _come_froms
forelsestmt38 ::= expr get_for_iter store . for_block POP_BLOCK else_suite \e__come_froms
forelsestmt38 ::= expr get_for_iter store . for_block POP_BLOCK else_suite _come_froms
forelsestmt38 ::= expr get_for_iter store for_block . JUMP_LOOP \e__come_froms else_suite \e__come_froms
forelsestmt38 ::= expr get_for_iter store for_block . JUMP_LOOP \e__come_froms else_suite _come_froms
forelsestmt38 ::= expr get_for_iter store for_block . JUMP_LOOP _come_froms else_suite \e__come_froms
forelsestmt38 ::= expr get_for_iter store for_block . JUMP_LOOP _come_froms else_suite _come_froms
forelsestmt38 ::= expr get_for_iter store for_block . POP_BLOCK else_suite \e__come_froms
forelsestmt38 ::= expr get_for_iter store for_block . POP_BLOCK else_suite _come_froms
forelsestmt38 ::= expr get_for_iter store for_block JUMP_LOOP . _come_froms else_suite \e__come_froms
forelsestmt38 ::= expr get_for_iter store for_block JUMP_LOOP . _come_froms else_suite _come_froms
forelsestmt38 ::= expr get_for_iter store for_block JUMP_LOOP \e__come_froms . else_suite \e__come_froms
forelsestmt38 ::= expr get_for_iter store for_block JUMP_LOOP \e__come_froms . else_suite _come_froms
forelsestmt38 ::= expr get_for_iter store for_block JUMP_LOOP _come_froms . else_suite \e__come_froms
forelsestmt38 ::= expr get_for_iter store for_block JUMP_LOOP _come_froms . else_suite _come_froms
forelsestmt38 ::= expr get_for_iter store for_block JUMP_LOOP _come_froms else_suite . _come_froms
forelsestmt38 ::= expr get_for_iter store for_block JUMP_LOOP _come_froms else_suite \e__come_froms . 
forelsestmt38 ::= expr get_for_iter store for_block JUMP_LOOP _come_froms else_suite _come_froms . 
get_for_iter ::= GET_ITER . _come_froms FOR_ITER
get_for_iter ::= GET_ITER \e__come_froms . FOR_ITER
get_for_iter ::= GET_ITER _come_froms . FOR_ITER
get_for_iter ::= GET_ITER _come_froms FOR_ITER . 
get_iter ::= expr . GET_ITER
get_iter ::= expr GET_ITER . 
if_and_elsestmtc ::= expr_pjif . expr_pjif c_stmts jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif . expr_pjif c_stmts jb_cfs else_suitec opt_come_from_except
if_and_stmt ::= expr_pjif . expr COME_FROM stmts \e__come_froms
if_and_stmt ::= expr_pjif . expr COME_FROM stmts _come_froms
if_exp ::= expr_pjif . expr jf_cf expr COME_FROM
if_exp ::= expr_pjif . expr jump_forward_else expr
if_exp ::= expr_pjif . expr jump_forward_else expr come_froms
if_exp_37b ::= expr_pjif . expr_pjif jump_forward_else expr
if_exp_compare ::= expr . expr jf_cfs expr COME_FROM
if_exp_compare ::= expr expr . jf_cfs expr COME_FROM
if_exp_compare38 ::= or_in_ifexp . jump_if_false_cf expr jf_cfs expr come_froms
if_exp_loop ::= expr_pjif . expr POP_JUMP_IF_FALSE_LOOP JUMP_FORWARD come_froms expr
if_exp_not ::= expr . POP_JUMP_IF_TRUE expr jump_forward_else expr COME_FROM
if_exp_not ::= expr POP_JUMP_IF_TRUE . expr jump_forward_else expr COME_FROM
if_exp_not ::= expr POP_JUMP_IF_TRUE expr . jump_forward_else expr COME_FROM
if_exp_true ::= expr . JUMP_FORWARD expr COME_FROM
if_not_stmtc ::= testexprc . ifstmts_jumpc \e__come_froms
if_not_stmtc ::= testexprc . ifstmts_jumpc _come_froms
if_not_stmtc ::= testexprc ifstmts_jumpc . _come_froms
if_not_stmtc ::= testexprc ifstmts_jumpc \e__come_froms . 
if_not_stmtc ::= testexprc ifstmts_jumpc _come_froms . 
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE . come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE . come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE . come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE . come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms . stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms . stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts . jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts . jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs . else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs . else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite . opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except . 
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except . 
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_stmt ::= expr . POP_JUMP_IF_TRUE expr pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE . expr pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr . pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump . come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms . stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms stmts . COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms stmts COME_FROM . 
ifelsestmt ::= testexpr . stmts_opt JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr . stmts_opt JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr . stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr \e_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt JUMP_FORWARD . else_suite \e__come_froms
ifelsestmt ::= testexpr stmts_opt JUMP_FORWARD . else_suite _come_froms
ifelsestmt ::= testexpr stmts_opt jf_cfs . else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs . else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt . opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt . opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt opt_come_from_except . 
ifelsestmtc ::= testexpr . c_stmts cf_pt else_suite
ifelsestmtc ::= testexpr . c_stmts come_froms else_suite
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr . c_stmts_opt cf_jump_back else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt jb_cfs else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr . c_stmts_opt jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr . c_stmts_opt jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr \e_c_stmts_opt . cf_jump_back else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . jb_cfs else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr \e_c_stmts_opt . jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts . cf_pt else_suite
ifelsestmtc ::= testexpr c_stmts . come_froms else_suite
ifelsestmtc ::= testexpr c_stmts come_froms . else_suite
ifelsestmtc ::= testexpr c_stmts come_froms else_suite . 
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr c_stmts_opt . cf_jump_back else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . jb_cfs else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr c_stmts_opt . jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt . jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suite \e__come_froms
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suite _come_froms
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suitec
ifelsestmtc ::= testexpr c_stmts_opt JUMP_LOOP . else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr c_stmts_opt jb_cfs . else_suitec
ifelsestmtc ::= testexpr c_stmts_opt jb_cfs . else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr c_stmts_opt jb_cfs else_suitec . 
ifelsestmtc ::= testexpr c_stmts_opt jb_cfs else_suitec . JUMP_LOOP come_froms
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else . else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else . else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec . opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec \e_opt_come_from_except . 
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec opt_come_from_except . 
ifelsestmtc ::= testexpr_cf . c_stmts_opt jb_cf else_suitec
ifelsestmtc ::= testexpr_cf \e_c_stmts_opt . jb_cf else_suitec
ifelsestmtc ::= testexpr_cf c_stmts_opt . jb_cf else_suitec
ifelsestmtc ::= testexpr_cf c_stmts_opt jb_cf . else_suitec
ifelsestmtc ::= testexpr_cf c_stmts_opt jb_cf else_suitec . 
ifelsestmtr ::= testexpr . return_if_stmts returns
iflaststmt ::= testexpr . returns
iflaststmt ::= testexpr . stmts
iflaststmt ::= testexpr . stmts JUMP_FORWARD
iflaststmt ::= testexpr . stmts_opt JUMP_FORWARD
iflaststmt ::= testexpr \e_stmts_opt . JUMP_FORWARD
iflaststmt ::= testexpr returns . 
iflaststmt ::= testexpr stmts . 
iflaststmt ::= testexpr stmts . JUMP_FORWARD
iflaststmt ::= testexpr stmts JUMP_FORWARD . 
iflaststmt ::= testexpr stmts_opt . JUMP_FORWARD
iflaststmt ::= testexpr stmts_opt JUMP_FORWARD . 
iflaststmtc ::= testexpr . c_stmts
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP POP_BLOCK
iflaststmtc ::= testexpr . c_stmts come_froms
iflaststmtc ::= testexpr c_stmts . 
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP POP_BLOCK
iflaststmtc ::= testexpr c_stmts . come_froms
iflaststmtc ::= testexpr c_stmts JUMP_LOOP . 
iflaststmtc ::= testexpr c_stmts JUMP_LOOP . COME_FROM_LOOP
iflaststmtc ::= testexpr c_stmts JUMP_LOOP . POP_BLOCK
iflaststmtc ::= testexpr c_stmts come_froms . 
iflaststmtc ::= testexprc . c_stmts
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP \e_opt_pop_block
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP opt_pop_block
iflaststmtc ::= testexprc c_stmts . 
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP \e_opt_pop_block
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP opt_pop_block
iflaststmtc ::= testexprc c_stmts JUMP_LOOP . COME_FROM_LOOP
iflaststmtc ::= testexprc c_stmts JUMP_LOOP . opt_pop_block
iflaststmtc ::= testexprc c_stmts JUMP_LOOP \e_opt_pop_block . 
ifpoplaststmtc ::= testexpr . POP_TOP \e_c_stmts_opt
ifpoplaststmtc ::= testexpr . POP_TOP c_stmts_opt
ifstmt ::= testexpr . ifstmts_jump \e__come_froms
ifstmt ::= testexpr . ifstmts_jump _come_froms
ifstmt ::= testexpr . stmts \e__come_froms
ifstmt ::= testexpr . stmts _come_froms
ifstmt ::= testexpr ifstmts_jump . _come_froms
ifstmt ::= testexpr ifstmts_jump \e__come_froms . 
ifstmt ::= testexpr stmts . _come_froms
ifstmt ::= testexpr stmts \e__come_froms . 
ifstmt ::= testexpr stmts _come_froms . 
ifstmtc ::= testexpr . ifstmts_jumpc
ifstmtc ::= testexpr ifstmts_jumpc . 
ifstmtc ::= testexprc . ifstmts_jumpc \e__come_froms
ifstmtc ::= testexprc . ifstmts_jumpc _come_froms
ifstmtc ::= testexprc ifstmts_jumpc . _come_froms
ifstmtc ::= testexprc ifstmts_jumpc \e__come_froms . 
ifstmtc ::= testexprc ifstmts_jumpc _come_froms . 
ifstmts_jump ::= COME_FROM . stmts COME_FROM
ifstmts_jump ::= COME_FROM . stmts come_froms
ifstmts_jump ::= COME_FROM stmts . COME_FROM
ifstmts_jump ::= COME_FROM stmts . come_froms
ifstmts_jump ::= COME_FROM stmts COME_FROM . 
ifstmts_jump ::= COME_FROM stmts come_froms . 
ifstmts_jump ::= \e_stmts_opt . JUMP_FORWARD JUMP_FORWARD \e__come_froms
ifstmts_jump ::= \e_stmts_opt . JUMP_FORWARD JUMP_FORWARD _come_froms
ifstmts_jump ::= \e_stmts_opt . come_froms
ifstmts_jump ::= \e_stmts_opt come_froms . 
ifstmts_jump ::= stmts . come_froms
ifstmts_jump ::= stmts come_froms . 
ifstmts_jump ::= stmts_opt . JUMP_FORWARD JUMP_FORWARD \e__come_froms
ifstmts_jump ::= stmts_opt . JUMP_FORWARD JUMP_FORWARD _come_froms
ifstmts_jump ::= stmts_opt . come_froms
ifstmts_jump ::= stmts_opt JUMP_FORWARD . JUMP_FORWARD \e__come_froms
ifstmts_jump ::= stmts_opt JUMP_FORWARD . JUMP_FORWARD _come_froms
ifstmts_jump ::= stmts_opt come_froms . 
ifstmts_jumpc ::= COME_FROM . c_stmts JUMP_FORWARD
ifstmts_jumpc ::= COME_FROM . c_stmts JUMP_LOOP
ifstmts_jumpc ::= COME_FROM . c_stmts come_froms
ifstmts_jumpc ::= COME_FROM c_stmts . JUMP_FORWARD
ifstmts_jumpc ::= COME_FROM c_stmts . JUMP_LOOP
ifstmts_jumpc ::= COME_FROM c_stmts . come_froms
ifstmts_jumpc ::= COME_FROM c_stmts JUMP_FORWARD . 
ifstmts_jumpc ::= COME_FROM c_stmts JUMP_LOOP . 
ifstmts_jumpc ::= COME_FROM c_stmts come_froms . 
ifstmts_jumpc ::= \e_c_stmts_opt . come_froms
ifstmts_jumpc ::= \e_c_stmts_opt come_froms . 
ifstmts_jumpc ::= c_stmts . 
ifstmts_jumpc ::= c_stmts . JUMP_LOOP
ifstmts_jumpc ::= c_stmts JUMP_LOOP . 
ifstmts_jumpc ::= c_stmts_opt . come_froms
ifstmts_jumpc ::= c_stmts_opt come_froms . 
ifstmts_jumpc ::= ifstmts_jump . 
import ::= LOAD_CONST . LOAD_CONST alias
import_as37 ::= LOAD_CONST . LOAD_CONST importlist37 store POP_TOP
import_from ::= LOAD_CONST . LOAD_CONST IMPORT_NAME importlist POP_TOP
import_from ::= LOAD_CONST . LOAD_CONST importlist POP_TOP
import_from37 ::= LOAD_CONST . LOAD_CONST IMPORT_NAME_ATTR importlist37 POP_TOP
import_from_as37 ::= LOAD_CONST . LOAD_CONST import_from_attr37 store POP_TOP
import_from_star ::= LOAD_CONST . LOAD_CONST IMPORT_NAME IMPORT_STAR
import_from_star ::= LOAD_CONST . LOAD_CONST IMPORT_NAME_ATTR IMPORT_STAR
importmultiple ::= LOAD_CONST . LOAD_CONST alias imports_cont
jb_cf ::= JUMP_LOOP . COME_FROM
jb_cf ::= JUMP_LOOP COME_FROM . 
jb_cfs ::= \e_come_from_opt . JUMP_LOOP come_froms
jb_cfs ::= \e_come_from_opt JUMP_LOOP . come_froms
jb_cfs ::= \e_come_from_opt JUMP_LOOP come_froms . 
jb_cfs ::= come_from_opt . JUMP_LOOP come_froms
jf_cfs ::= JUMP_FORWARD . _come_froms
jf_cfs ::= JUMP_FORWARD \e__come_froms . 
jf_cfs ::= JUMP_FORWARD _come_froms . 
jump ::= JUMP_FORWARD . 
jump_forward_else ::= JUMP_FORWARD . _come_froms
jump_forward_else ::= JUMP_FORWARD \e__come_froms . 
jump_forward_else ::= JUMP_FORWARD _come_froms . 
jump_forward_else ::= come_froms . jump COME_FROM
kvlist_0 ::= BUILD_MAP_0 . 
kvlist_1 ::= expr . expr BUILD_MAP_1
kvlist_1 ::= expr expr . BUILD_MAP_1
kvlist_1 ::= expr expr BUILD_MAP_1 . 
last_stmt ::= iflaststmt . 
lastc_stmt ::= ifelsestmtc . 
lc_setup_finally ::= LOAD_CONST . SETUP_FINALLY
list ::= BUILD_LIST_0 . 
list ::= expr . BUILD_LIST_1
list ::= expr BUILD_LIST_1 . 
list_comp ::= BUILD_LIST_0 . list_iter
list_unpack ::= BUILD_LIST_0 . expr LIST_EXTEND
mkfuncdeco ::= expr . mkfuncdeco CALL_FUNCTION_1
mkfuncdeco ::= expr . mkfuncdeco0 CALL_FUNCTION_1
named_expr ::= expr . DUP_TOP store
nand ::= and_parts . expr_pjit come_froms
nor_cond ::= or_parts . expr_pjif
not ::= expr_pjit . 
not_and_not ::= not . expr_pjif COME_FROM
not_or ::= and_parts . expr_pjif \e__come_froms
not_or ::= and_parts . expr_pjif _come_froms
opt_come_from_except ::= come_any_froms . 
or ::= expr_pjit . expr COME_FROM
or ::= expr_pjit . expr jump_if_false_cf
or ::= expr_pjit expr . COME_FROM
or ::= expr_pjit expr . jump_if_false_cf
or ::= expr_pjit expr COME_FROM . 
or ::= or_parts . expr
or ::= or_parts expr . 
or_and1 ::= or_parts . and_parts come_froms
or_and_not ::= expr_pjit . and_not COME_FROM
or_cond ::= or_parts . expr_pjif come_froms
or_expr ::= expr . JUMP_IF_TRUE expr COME_FROM
or_in_ifexp ::= expr_pjit . expr
or_in_ifexp ::= expr_pjit expr . 
or_in_ifexp ::= or_in_ifexp . POP_JUMP_IF_TRUE expr
or_in_ifexp ::= or_in_ifexp POP_JUMP_IF_TRUE . expr
or_parts ::= expr_pjit . 
or_parts ::= or_parts . expr_pjit
or_parts ::= or_parts expr_pjit . 
pop_ex_return ::= return_expr . ROT_FOUR POP_EXCEPT RETURN_VALUE
pop_ex_return ::= return_expr ROT_FOUR . POP_EXCEPT RETURN_VALUE
pop_ex_return ::= return_expr ROT_FOUR POP_EXCEPT . RETURN_VALUE
pop_ex_return ::= return_expr ROT_FOUR POP_EXCEPT RETURN_VALUE . 
pop_jump ::= POP_JUMP_IF_TRUE . 
popb_return ::= return_expr . POP_BLOCK RETURN_VALUE
return ::= pop_ex_return . 
return ::= return_expr . RETURN_END_IF
return ::= return_expr . RETURN_VALUE
return ::= return_expr . discard_tops RETURN_VALUE
return ::= return_expr RETURN_VALUE . 
return_except ::= stmts . POP_BLOCK return
return_except ::= stmts POP_BLOCK . return
return_expr ::= expr . 
return_if_stmt ::= return_expr . RETURN_END_IF
return_if_stmt ::= return_expr . RETURN_END_IF POP_BLOCK
return_if_stmts ::= _stmts . return_if_stmt \e__come_froms
return_if_stmts ::= _stmts . return_if_stmt _come_froms
returns ::= _stmts . return
returns ::= _stmts . return_if_stmt
returns ::= _stmts return . 
returns ::= return . 
returns_in_except ::= _stmts . except_return_value
returns_in_except2 ::= _stmts . except_return_value2
sf_pb_call_returns ::= SETUP_FINALLY . POP_BLOCK CALL_FINALLY returns
sf_pb_call_returns ::= SETUP_FINALLY . POP_BLOCK POP_EXCEPT CALL_FINALLY returns
sstmt ::= return . RETURN_LAST
sstmt ::= return RETURN_LAST . 
sstmt ::= sstmt . RETURN_LAST
sstmt ::= sstmt RETURN_LAST . 
sstmt ::= stmt . 
stmt ::= assign . 
stmt ::= expr_stmt . 
stmt ::= for38 . 
stmt ::= if_or_not_elsestmt . 
stmt ::= if_or_stmt . 
stmt ::= ifstmt . 
stmt ::= last_stmt . 
stmt ::= return . 
stmt ::= try_elsestmtl38 . 
stmt ::= try_except . 
stmts ::= sstmt . 
stmts ::= stmt . 
stmts ::= stmts . last_stmt
stmts ::= stmts . sstmt
stmts ::= stmts . stmt
stmts ::= stmts last_stmt . 
stmts ::= stmts sstmt . 
stmts ::= stmts stmt . 
stmts_opt ::= stmts . 
store ::= STORE_FAST . 
store ::= expr . STORE_ATTR
store ::= expr STORE_ATTR . 
store ::= store_subscript . 
store_subscript ::= expr . expr STORE_SUBSCR
store_subscript ::= expr expr . STORE_SUBSCR
store_subscript ::= expr expr STORE_SUBSCR . 
subscript ::= expr . expr BINARY_SUBSCR
subscript ::= expr expr . BINARY_SUBSCR
subscript ::= expr expr BINARY_SUBSCR . 
subscript2 ::= expr . expr DUP_TOP_TWO BINARY_SUBSCR
subscript2 ::= expr expr . DUP_TOP_TWO BINARY_SUBSCR
suite_stmts ::= _stmts . 
suite_stmts ::= returns . 
suite_stmts_opt ::= suite_stmts . 
testexpr ::= testfalse . 
testexpr ::= testtrue . 
testexpr_cf ::= testexpr . come_froms
testexpr_cf ::= testexpr come_froms . 
testexprc ::= testexpr . 
testexprc ::= testtruec . 
testfalse ::= expr_pjif . 
testfalsec ::= expr . POP_JUMP_IF_TRUE_LOOP
testtrue ::= expr_pjit . 
testtrue ::= or_in_ifexp . POP_JUMP_IF_TRUE
testtrue ::= or_in_ifexp POP_JUMP_IF_TRUE . 
testtruec ::= expr . POP_JUMP_IF_FALSE_LOOP
testtruec ::= expr POP_JUMP_IF_FALSE_LOOP . 
try_elsestmtl38 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 . COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 . COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 COME_FROM . else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 COME_FROM . else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 COME_FROM else_suitec . opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 COME_FROM else_suitec \e_opt_come_from_except . 
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 COME_FROM else_suitec opt_come_from_except . 
try_except ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38
try_except ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38
try_except ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38
try_except ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 . 
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 . jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK except_handler38 . jump_excepts come_from_except_clauses
try_except38 ::= SETUP_FINALLY . POP_BLOCK POP_TOP \e_suite_stmts_opt except_handler38a
try_except38 ::= SETUP_FINALLY . POP_BLOCK POP_TOP suite_stmts_opt except_handler38a
try_except38 ::= SETUP_FINALLY . POP_BLOCK suite_stmts except_handler38b
try_except38r ::= SETUP_FINALLY . return_except except_handler38b
try_except38r2 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt . POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt . POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r4 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond1 return COME_FROM END_FINALLY
try_except38r5 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond1 except_ret38d COME_FROM END_FINALLY
try_except38r5 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond1 except_suite COME_FROM END_FINALLY COME_FROM
try_except38r5 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond2 except_ret38b END_FINALLY COME_FROM
try_except38r6 ::= SETUP_FINALLY . returns_in_except2 COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP except_ret38d END_FINALLY
try_except38r7 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except_as ::= SETUP_FINALLY . POP_BLOCK suite_stmts except_handler_as END_FINALLY COME_FROM
try_except_as ::= SETUP_FINALLY . suite_stmts except_handler_as END_FINALLY COME_FROM
try_except_as ::= SETUP_FINALLY suite_stmts . except_handler_as END_FINALLY COME_FROM
try_except_ret38 ::= SETUP_FINALLY . returns except_ret38a
try_except_ret38a ::= SETUP_FINALLY . returns except_handler38c END_FINALLY \e_come_from_opt
try_except_ret38a ::= SETUP_FINALLY . returns except_handler38c END_FINALLY come_from_opt
tryfinally36 ::= SETUP_FINALLY . returns COME_FROM_FINALLY suite_stmts
tryfinally38_return ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 . except_ret38c
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP \e_suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP \e_suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP suite_stmts_opt END_FINALLY POP_TOP
tryfinally38rstmt3 ::= SETUP_FINALLY . expr POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY ss_end_finally
tryfinally38rstmt3 ::= SETUP_FINALLY expr . POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY ss_end_finally
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally_return_stmt1 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt1 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt1 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt1 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt2 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY
tryfinally_return_stmt2 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY
tryfinally_return_stmt2 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY
tryfinally_return_stmt2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY
tryfinallystmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK POP_EXCEPT . CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK POP_EXCEPT . CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK POP_EXCEPT CALL_FINALLY . JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK POP_EXCEPT CALL_FINALLY . JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tuple ::= expr . expr BUILD_TUPLE_2
tuple ::= expr expr . BUILD_TUPLE_2
unary_not ::= expr . UNARY_NOT
unary_op ::= expr . unary_operator
while1stmt ::= \e__come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts COME_FROM . JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts . COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts COME_FROM . JUMP_LOOP COME_FROM_LOOP
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts JUMP_LOOP . _come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts JUMP_LOOP \e__come_froms . POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts JUMP_LOOP _come_froms . POP_BLOCK
whileTruestmt ::= _come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= _come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts JUMP_LOOP . _come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts JUMP_LOOP \e__come_froms . POP_BLOCK
whileTruestmt ::= _come_froms c_stmts JUMP_LOOP _come_froms . POP_BLOCK
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= \e__come_froms . pass JUMP_LOOP
whileTruestmt38 ::= \e__come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= \e__come_froms \e_pass JUMP_LOOP . 
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms
whileTruestmt38 ::= \e__come_froms c_stmts JUMP_LOOP . COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms c_stmts JUMP_LOOP . _come_froms
whileTruestmt38 ::= \e__come_froms c_stmts JUMP_LOOP \e__come_froms . 
whileTruestmt38 ::= \e__come_froms c_stmts JUMP_LOOP _come_froms . 
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= _come_froms . pass JUMP_LOOP
whileTruestmt38 ::= _come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP _come_froms
whileTruestmt38 ::= _come_froms c_stmts JUMP_LOOP . COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms c_stmts JUMP_LOOP . _come_froms
whileTruestmt38 ::= _come_froms c_stmts JUMP_LOOP \e__come_froms . 
whileTruestmt38 ::= _come_froms c_stmts JUMP_LOOP _come_froms . 
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr . returns POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts . come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts JUMP_LOOP . _come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts JUMP_LOOP \e__come_froms . 
whilestmt38 ::= \e__come_froms testexpr c_stmts JUMP_LOOP _come_froms . 
whilestmt38 ::= \e__come_froms testexpr c_stmts come_froms . 
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt JUMP_LOOP . POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt JUMP_LOOP . come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt JUMP_LOOP come_froms . 
whilestmt38 ::= \e__come_froms testexpr returns . POP_BLOCK
whilestmt38 ::= \e__come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= _come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
yield ::= expr . YIELD_VALUE
yield_from ::= expr . GET_YIELD_FROM_ITER LOAD_CONST YIELD_FROM
Instruction context:
   
 L. 924       140  POP_BLOCK        
                 142  POP_EXCEPT       
                 144  CALL_FINALLY        150  'to 150'
->               146  LOAD_CONST               None
                 148  RETURN_VALUE     
               150_0  COME_FROM           144  '144'
               150_1  COME_FROM_FINALLY   116  '116'
                 150  LOAD_CONST               None
                 152  STORE_FAST               'e'
                 154  DELETE_FAST              'e'
                 156  END_FINALLY      
                 158  POP_EXCEPT       
                 160  JUMP_FORWARD        228  'to 228'
               162_0  COME_FROM           108  '108'

-- Stacks of completed symbols:
START ::= |- stmts . 
_come_froms ::= \e__come_froms . COME_FROM
_stmts ::= stmts . 
assert2 ::= expr . POP_JUMP_IF_TRUE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr . POP_JUMP_IF_FALSE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assign ::= expr . DUP_TOP designList
assign ::= expr . store
assign ::= expr store . 
assign2 ::= expr . expr ROT_TWO store store
assign2 ::= expr expr . ROT_TWO store store
assign3 ::= expr . expr expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr . expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr expr . ROT_THREE ROT_TWO store store store
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
attribute ::= expr . LOAD_ATTR
attribute ::= expr LOAD_ATTR . 
attribute37 ::= expr . LOAD_METHOD
attribute37 ::= expr LOAD_METHOD . 
aug_assign1 ::= expr . expr inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr . expr inplace_op store
aug_assign1 ::= expr expr . inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr expr . inplace_op store
aug_assign2 ::= expr . DUP_TOP LOAD_ATTR expr inplace_op ROT_TWO STORE_ATTR
await_expr ::= expr . GET_AWAITABLE LOAD_CONST YIELD_FROM
bin_op ::= expr . expr binary_operator
bin_op ::= expr expr . binary_operator
bin_op ::= expr expr binary_operator . 
binary_operator ::= BINARY_MODULO . 
break ::= POP_BLOCK . BREAK_LOOP
break ::= POP_BLOCK . POP_TOP BREAK_LOOP
break ::= POP_BLOCK . POP_TOP JUMP_FORWARD
c_compare_chained37 ::= expr . c_compare_chained_middlea_37
c_compare_chained37_false ::= expr . c_compare_chained_middleb_false_37
c_compare_chained37_false ::= expr . c_compare_chained_right_false_37
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suitec
c_returns ::= c_stmts . return
c_stmt ::= stmt . 
c_stmts ::= _stmts . 
c_stmts ::= _stmts . lastc_stmt
c_stmts ::= c_stmt . 
c_stmts ::= c_stmts . c_stmt
c_stmts ::= c_stmts c_stmt . 
c_stmts_opt ::= c_stmts . 
c_suite_stmts ::= c_stmts . 
c_suite_stmts ::= suite_stmts . 
c_suite_stmts_opt ::= c_suite_stmts . 
c_suite_stmts_opt ::= suite_stmts_opt . 
c_try_except ::= SETUP_FINALLY . c_suite_stmts POP_BLOCK except_handler38
c_try_except ::= SETUP_FINALLY c_suite_stmts . POP_BLOCK except_handler38
c_try_except ::= SETUP_FINALLY c_suite_stmts POP_BLOCK . except_handler38
c_tryfinallybstmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
call ::= expr . CALL_FUNCTION_0
call ::= expr . CALL_METHOD_0
call ::= expr . expr CALL_FUNCTION_1
call ::= expr . expr CALL_METHOD_1
call ::= expr . expr expr CALL_METHOD_2
call ::= expr . expr expr expr CALL_FUNCTION_3
call ::= expr . expr expr expr CALL_METHOD_3
call ::= expr . expr expr expr expr CALL_METHOD_4
call ::= expr . expr expr expr expr expr expr expr CALL_METHOD_7
call ::= expr CALL_METHOD_0 . 
call ::= expr expr . CALL_FUNCTION_1
call ::= expr expr . CALL_METHOD_1
call ::= expr expr . expr CALL_METHOD_2
call ::= expr expr . expr expr CALL_FUNCTION_3
call ::= expr expr . expr expr CALL_METHOD_3
call ::= expr expr . expr expr expr CALL_METHOD_4
call ::= expr expr . expr expr expr expr expr expr CALL_METHOD_7
call ::= expr expr CALL_METHOD_1 . 
call ::= expr expr expr . CALL_METHOD_2
call ::= expr expr expr . expr CALL_FUNCTION_3
call ::= expr expr expr . expr CALL_METHOD_3
call ::= expr expr expr . expr expr CALL_METHOD_4
call ::= expr expr expr . expr expr expr expr expr CALL_METHOD_7
call ::= expr expr expr CALL_METHOD_2 . 
call ::= expr expr expr expr . CALL_FUNCTION_3
call ::= expr expr expr expr . CALL_METHOD_3
call ::= expr expr expr expr . expr CALL_METHOD_4
call ::= expr expr expr expr . expr expr expr expr CALL_METHOD_7
call ::= expr expr expr expr CALL_METHOD_3 . 
call_kw36 ::= expr . expr LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr . expr expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr . expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr . expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr . expr expr expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_7
call_kw36 ::= expr expr . LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr expr . expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr . expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr . expr expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_7
call_kw36 ::= expr expr expr . LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr . expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_7
call_kw36 ::= expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr . expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_7
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE_LOOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE_LOOP
classdefdeco1 ::= expr . classdefdeco1 CALL_FUNCTION_1
classdefdeco1 ::= expr . classdefdeco2 CALL_FUNCTION_1
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP \e__come_froms
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP _come_froms
compare_chained37 ::= expr . chained_parts
compare_chained37 ::= expr . compare_chained_middlea_37
compare_chained37 ::= expr . compare_chained_middlec_37
compare_chained37_false ::= expr . compare_chained_middle_false_37
compare_chained37_false ::= expr . compare_chained_middleb_false_37
compare_chained37_false ::= expr . compare_chained_right_false_37
compare_chained_and ::= expr . chained_parts compare_chained_righta_false_37 come_froms POP_TOP JUMP_FORWARD COME_FROM negated_testtrue come_froms
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_middle COME_FROM
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_right COME_FROM
compare_single ::= expr . expr COMPARE_OP
compare_single ::= expr expr . COMPARE_OP
cond_except_stmts_opt ::= \e_cond_except_stmts_opt . cond_except_stmt
continues ::= _stmts . lastc_stmt continue
dict ::= expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_2
dict ::= expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr . expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr . expr expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_2
dict ::= expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr expr . expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr expr expr . expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr expr expr expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
except_cond1 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . POP_TOP POP_TOP POP_EXCEPT
except_cond2 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store . POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store . POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP . come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt . 
except_handler38 ::= jump . COME_FROM_FINALLY except_stmts END_FINALLY \e_opt_come_from_except
except_handler38 ::= jump . COME_FROM_FINALLY except_stmts END_FINALLY opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY . except_stmts END_FINALLY \e_opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY . except_stmts END_FINALLY opt_come_from_except
except_ret38 ::= SETUP_FINALLY . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
except_ret38 ::= SETUP_FINALLY . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
except_ret38 ::= SETUP_FINALLY expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
except_ret38 ::= SETUP_FINALLY expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
except_ret38b ::= SETUP_FINALLY . suite_stmts expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY . suite_stmts expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY suite_stmts . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY suite_stmts . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY suite_stmts expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY suite_stmts expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38c ::= SETUP_FINALLY . suite_stmts expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY expr STORE_FAST DELETE_FAST END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM END_FINALLY come_any_froms
except_ret38c ::= SETUP_FINALLY suite_stmts . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY expr STORE_FAST DELETE_FAST END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM END_FINALLY come_any_froms
except_ret38c ::= SETUP_FINALLY suite_stmts expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY expr STORE_FAST DELETE_FAST END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM END_FINALLY come_any_froms
except_return_value ::= POP_BLOCK . return
except_return_value ::= expr . POP_BLOCK RETURN_VALUE
except_return_value2 ::= POP_BLOCK . return
except_stmt ::= except_cond2 . except_ret38b
except_stmt ::= except_cond2 . except_suite \e_come_from_opt
except_stmt ::= except_cond2 . except_suite come_from_opt
except_stmt ::= except_cond2 . except_suite_finalize
except_suite ::= \e_c_stmts_opt . COME_FROM POP_EXCEPT jump_except COME_FROM
except_suite ::= \e_c_stmts_opt . POP_EXCEPT POP_TOP JUMP_FORWARD POP_EXCEPT jump_except
except_suite ::= \e_c_stmts_opt . POP_EXCEPT jump_except
except_suite_finalize ::= SETUP_FINALLY . c_stmts_opt except_var_finalize END_FINALLY POP_EXCEPT jump
except_suite_finalize ::= SETUP_FINALLY . c_stmts_opt except_var_finalize END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY . returns COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY . returns COME_FROM_FINALLY suite_stmts_opt END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY \e_c_stmts_opt . except_var_finalize END_FINALLY POP_EXCEPT jump
except_suite_finalize ::= SETUP_FINALLY \e_c_stmts_opt . except_var_finalize END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY c_stmts_opt . except_var_finalize END_FINALLY POP_EXCEPT jump
except_suite_finalize ::= SETUP_FINALLY c_stmts_opt . except_var_finalize END_FINALLY jump
except_var_finalize ::= POP_BLOCK . LOAD_CONST COME_FROM_FINALLY LOAD_CONST store delete
except_var_finalize ::= POP_BLOCK . POP_EXCEPT LOAD_CONST COME_FROM_FINALLY LOAD_CONST store delete
except_var_finalize ::= POP_BLOCK POP_EXCEPT . LOAD_CONST COME_FROM_FINALLY LOAD_CONST store delete
expr ::= LOAD_CONST . 
expr ::= LOAD_FAST . 
expr ::= LOAD_GLOBAL . 
expr ::= LOAD_STR . 
expr ::= attribute . 
expr ::= attribute37 . 
expr ::= bin_op . 
expr ::= call . 
expr ::= subscript . 
expr_jifop ::= expr . JUMP_IF_FALSE_OR_POP
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP \e__come_froms
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP _come_froms
expr_jitop ::= expr . JUMP_IF_TRUE_OR_POP
expr_pjif ::= expr . POP_JUMP_IF_FALSE
expr_pjit ::= expr . POP_JUMP_IF_TRUE
expr_stmt ::= expr . POP_TOP
expr_stmt ::= expr POP_TOP . 
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block \e__come_froms
for38 ::= expr . get_for_iter store for_block _come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP _come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite _come_froms
get_iter ::= expr . GET_ITER
if_exp_compare ::= expr . expr jf_cfs expr COME_FROM
if_exp_compare ::= expr expr . jf_cfs expr COME_FROM
if_exp_not ::= expr . POP_JUMP_IF_TRUE expr jump_forward_else expr COME_FROM
if_exp_true ::= expr . JUMP_FORWARD expr COME_FROM
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_stmt ::= expr . POP_JUMP_IF_TRUE expr pop_jump come_froms stmts COME_FROM
import ::= LOAD_CONST . LOAD_CONST alias
import_as37 ::= LOAD_CONST . LOAD_CONST importlist37 store POP_TOP
import_from ::= LOAD_CONST . LOAD_CONST IMPORT_NAME importlist POP_TOP
import_from ::= LOAD_CONST . LOAD_CONST importlist POP_TOP
import_from37 ::= LOAD_CONST . LOAD_CONST IMPORT_NAME_ATTR importlist37 POP_TOP
import_from_as37 ::= LOAD_CONST . LOAD_CONST import_from_attr37 store POP_TOP
import_from_star ::= LOAD_CONST . LOAD_CONST IMPORT_NAME IMPORT_STAR
import_from_star ::= LOAD_CONST . LOAD_CONST IMPORT_NAME_ATTR IMPORT_STAR
importmultiple ::= LOAD_CONST . LOAD_CONST alias imports_cont
jump ::= JUMP_FORWARD . 
kvlist_1 ::= expr . expr BUILD_MAP_1
kvlist_1 ::= expr expr . BUILD_MAP_1
lc_setup_finally ::= LOAD_CONST . SETUP_FINALLY
list ::= expr . BUILD_LIST_1
mkfuncdeco ::= expr . mkfuncdeco CALL_FUNCTION_1
mkfuncdeco ::= expr . mkfuncdeco0 CALL_FUNCTION_1
named_expr ::= expr . DUP_TOP store
or_expr ::= expr . JUMP_IF_TRUE expr COME_FROM
pop_ex_return ::= return_expr . ROT_FOUR POP_EXCEPT RETURN_VALUE
popb_return ::= return_expr . POP_BLOCK RETURN_VALUE
return ::= return_expr . RETURN_END_IF
return ::= return_expr . RETURN_VALUE
return ::= return_expr . discard_tops RETURN_VALUE
return_except ::= stmts . POP_BLOCK return
return_except ::= stmts POP_BLOCK . return
return_expr ::= expr . 
return_if_stmt ::= return_expr . RETURN_END_IF
return_if_stmt ::= return_expr . RETURN_END_IF POP_BLOCK
returns ::= _stmts . return
returns ::= _stmts . return_if_stmt
returns_in_except ::= _stmts . except_return_value
returns_in_except2 ::= _stmts . except_return_value2
sf_pb_call_returns ::= SETUP_FINALLY . POP_BLOCK CALL_FINALLY returns
sf_pb_call_returns ::= SETUP_FINALLY . POP_BLOCK POP_EXCEPT CALL_FINALLY returns
sstmt ::= sstmt . RETURN_LAST
sstmt ::= stmt . 
stmt ::= assign . 
stmt ::= expr_stmt . 
stmts ::= sstmt . 
stmts ::= stmt . 
stmts ::= stmts . last_stmt
stmts ::= stmts . sstmt
stmts ::= stmts . stmt
stmts ::= stmts sstmt . 
stmts ::= stmts stmt . 
store ::= STORE_FAST . 
store ::= expr . STORE_ATTR
store ::= expr STORE_ATTR . 
store_subscript ::= expr . expr STORE_SUBSCR
store_subscript ::= expr expr . STORE_SUBSCR
subscript ::= expr . expr BINARY_SUBSCR
subscript ::= expr expr . BINARY_SUBSCR
subscript ::= expr expr BINARY_SUBSCR . 
subscript2 ::= expr . expr DUP_TOP_TWO BINARY_SUBSCR
subscript2 ::= expr expr . DUP_TOP_TWO BINARY_SUBSCR
suite_stmts ::= _stmts . 
suite_stmts_opt ::= suite_stmts . 
testfalsec ::= expr . POP_JUMP_IF_TRUE_LOOP
testtruec ::= expr . POP_JUMP_IF_FALSE_LOOP
try_elsestmtl38 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 COME_FROM else_suitec opt_come_from_except
try_except ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38
try_except ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38
try_except ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38
try_except ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 jump_excepts come_from_except_clauses
try_except38 ::= SETUP_FINALLY . POP_BLOCK POP_TOP \e_suite_stmts_opt except_handler38a
try_except38 ::= SETUP_FINALLY . POP_BLOCK POP_TOP suite_stmts_opt except_handler38a
try_except38 ::= SETUP_FINALLY . POP_BLOCK suite_stmts except_handler38b
try_except38r ::= SETUP_FINALLY . return_except except_handler38b
try_except38r2 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt . POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r4 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond1 return COME_FROM END_FINALLY
try_except38r5 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond1 except_ret38d COME_FROM END_FINALLY
try_except38r5 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond1 except_suite COME_FROM END_FINALLY COME_FROM
try_except38r5 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond2 except_ret38b END_FINALLY COME_FROM
try_except38r6 ::= SETUP_FINALLY . returns_in_except2 COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP except_ret38d END_FINALLY
try_except38r7 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except_as ::= SETUP_FINALLY . POP_BLOCK suite_stmts except_handler_as END_FINALLY COME_FROM
try_except_as ::= SETUP_FINALLY . suite_stmts except_handler_as END_FINALLY COME_FROM
try_except_as ::= SETUP_FINALLY suite_stmts . except_handler_as END_FINALLY COME_FROM
try_except_ret38 ::= SETUP_FINALLY . returns except_ret38a
try_except_ret38a ::= SETUP_FINALLY . returns except_handler38c END_FINALLY \e_come_from_opt
try_except_ret38a ::= SETUP_FINALLY . returns except_handler38c END_FINALLY come_from_opt
tryfinally36 ::= SETUP_FINALLY . returns COME_FROM_FINALLY suite_stmts
tryfinally38_return ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 . except_ret38c
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP \e_suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP \e_suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP suite_stmts_opt END_FINALLY POP_TOP
tryfinally38rstmt3 ::= SETUP_FINALLY . expr POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY ss_end_finally
tryfinally38rstmt3 ::= SETUP_FINALLY expr . POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY ss_end_finally
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally_return_stmt1 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt1 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt1 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt1 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt2 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY
tryfinally_return_stmt2 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY
tryfinally_return_stmt2 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY
tryfinally_return_stmt2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY
tryfinallystmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK POP_EXCEPT . CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK POP_EXCEPT . CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK POP_EXCEPT CALL_FINALLY . JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK POP_EXCEPT CALL_FINALLY . JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tuple ::= expr . expr BUILD_TUPLE_2
tuple ::= expr . expr expr expr BUILD_TUPLE_4
tuple ::= expr expr . BUILD_TUPLE_2
tuple ::= expr expr . expr expr BUILD_TUPLE_4
tuple ::= expr expr expr . expr BUILD_TUPLE_4
tuple ::= expr expr expr expr . BUILD_TUPLE_4
unary_not ::= expr . UNARY_NOT
unary_op ::= expr . unary_operator
while1stmt ::= \e__come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM_LOOP
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= \e__come_froms . pass JUMP_LOOP
whileTruestmt38 ::= \e__come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
yield ::= expr . YIELD_VALUE
yield_from ::= expr . GET_YIELD_FROM_ITER LOAD_CONST YIELD_FROM
Instruction context:
   
 L.1010       156  POP_BLOCK        
                 158  POP_EXCEPT       
                 160  CALL_FINALLY        166  'to 166'
->               162  LOAD_CONST               None
                 164  RETURN_VALUE     
               166_0  COME_FROM           160  '160'
               166_1  COME_FROM_FINALLY   132  '132'
                 166  LOAD_CONST               None
                 168  STORE_FAST               'e'
                 170  DELETE_FAST              'e'
                 172  END_FINALLY      
                 174  POP_EXCEPT       
                 176  JUMP_FORWARD        244  'to 244'
               178_0  COME_FROM           124  '124'

-- Stacks of completed symbols:
START ::= |- stmts . 
_come_froms ::= \e__come_froms . COME_FROM
_come_froms ::= \e__come_froms COME_FROM . 
_come_froms ::= _come_froms . COME_FROM
_come_froms ::= _come_froms COME_FROM . 
_stmts ::= stmts . 
and_cond ::= and_parts . expr_pjif \e__come_froms
and_cond ::= and_parts . expr_pjif _come_froms
and_cond ::= and_parts expr_pjif . _come_froms
and_cond ::= and_parts expr_pjif \e__come_froms . 
and_cond ::= testfalse . expr_pjif \e__come_froms
and_cond ::= testfalse . expr_pjif _come_froms
and_cond ::= testfalse expr_pjif . _come_froms
and_cond ::= testfalse expr_pjif \e__come_froms . 
and_not ::= expr_pjif . expr_pjit
and_or_cond ::= and_parts . expr POP_JUMP_IF_TRUE come_froms expr_pjif \e__come_froms
and_or_cond ::= and_parts . expr POP_JUMP_IF_TRUE come_froms expr_pjif _come_froms
and_or_cond ::= and_parts expr . POP_JUMP_IF_TRUE come_froms expr_pjif \e__come_froms
and_or_cond ::= and_parts expr . POP_JUMP_IF_TRUE come_froms expr_pjif _come_froms
and_or_expr ::= and_parts . expr jitop_come_from_expr COME_FROM
and_or_expr ::= and_parts expr . jitop_come_from_expr COME_FROM
and_parts ::= and_parts . expr_pjif
and_parts ::= and_parts expr_pjif . 
and_parts ::= expr_pjif . 
assert2 ::= expr . POP_JUMP_IF_TRUE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2 ::= expr POP_JUMP_IF_TRUE . LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr . POP_JUMP_IF_FALSE LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE . LOAD_GLOBAL expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert2_not ::= expr POP_JUMP_IF_FALSE LOAD_GLOBAL . expr CALL_FUNCTION_1 RAISE_VARARGS_1
assert_invert ::= testtrue . LOAD_GLOBAL RAISE_VARARGS_1
assign ::= expr . DUP_TOP designList
assign ::= expr . store
assign ::= expr store . 
assign2 ::= expr . expr ROT_TWO store store
assign2 ::= expr expr . ROT_TWO store store
assign3 ::= expr . expr expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr . expr ROT_THREE ROT_TWO store store store
assign3 ::= expr expr expr . ROT_THREE ROT_TWO store store store
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP \e_c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_ASYNC_WITH WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH END_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY
async_with_stmt38 ::= expr . BEFORE_ASYNC_WITH GET_AWAITABLE LOAD_CONST YIELD_FROM SETUP_ASYNC_WITH POP_TOP c_stmts_opt POP_BLOCK BEGIN_FINALLY WITH_CLEANUP_START GET_AWAITABLE LOAD_CONST YIELD_FROM WITH_CLEANUP_FINISH POP_FINALLY JUMP_LOOP
attribute ::= expr . LOAD_ATTR
attribute ::= expr LOAD_ATTR . 
attribute37 ::= expr . LOAD_METHOD
attribute37 ::= expr LOAD_METHOD . 
aug_assign1 ::= expr . expr inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr . expr inplace_op store
aug_assign1 ::= expr expr . inplace_op ROT_THREE STORE_SUBSCR
aug_assign1 ::= expr expr . inplace_op store
aug_assign2 ::= expr . DUP_TOP LOAD_ATTR expr inplace_op ROT_TWO STORE_ATTR
await_expr ::= expr . GET_AWAITABLE LOAD_CONST YIELD_FROM
bin_op ::= expr . expr binary_operator
bin_op ::= expr expr . binary_operator
bin_op ::= expr expr binary_operator . 
binary_operator ::= BINARY_ADD . 
binary_operator ::= BINARY_MODULO . 
bool_op ::= and_cond . 
break ::= POP_BLOCK . BREAK_LOOP
break ::= POP_BLOCK . POP_TOP BREAK_LOOP
break ::= POP_BLOCK . POP_TOP JUMP_FORWARD
c_compare_chained37 ::= expr . c_compare_chained_middlea_37
c_compare_chained37_false ::= expr . c_compare_chained_middleb_false_37
c_compare_chained37_false ::= expr . c_compare_chained_right_false_37
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suitec
c_forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suitec
c_nand ::= and_parts . expr_pjitt come_froms
c_returns ::= c_stmts . return
c_returns ::= c_stmts return . 
c_returns ::= returns . 
c_stmt ::= if_not_stmtc . 
c_stmt ::= ifelsestmtc . 
c_stmt ::= ifstmtc . 
c_stmt ::= stmt . 
c_stmts ::= _stmts . 
c_stmts ::= _stmts . lastc_stmt
c_stmts ::= c_returns . 
c_stmts ::= c_stmt . 
c_stmts ::= c_stmts . c_stmt
c_stmts ::= c_stmts c_stmt . 
c_stmts ::= lastc_stmt . 
c_stmts_opt ::= c_stmts . 
c_suite_stmts ::= c_stmts . 
c_suite_stmts ::= suite_stmts . 
c_suite_stmts_opt ::= c_suite_stmts . 
c_suite_stmts_opt ::= suite_stmts_opt . 
c_try_except ::= SETUP_FINALLY . c_suite_stmts POP_BLOCK except_handler38
c_try_except ::= SETUP_FINALLY c_suite_stmts . POP_BLOCK except_handler38
c_try_except ::= SETUP_FINALLY c_suite_stmts POP_BLOCK . except_handler38
c_tryfinallybstmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallybstmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY BREAK_LOOP POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY . c_suite_stmts_opt POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY \e_c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt . POP_BLOCK CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_c_suite_stmts_opt END_FINALLY
c_tryfinallystmt38 ::= SETUP_FINALLY c_suite_stmts_opt POP_BLOCK . CALL_FINALLY POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY c_suite_stmts_opt END_FINALLY
call ::= expr . CALL_FUNCTION_0
call ::= expr . CALL_METHOD_0
call ::= expr . expr CALL_FUNCTION_1
call ::= expr . expr CALL_METHOD_1
call ::= expr . expr expr CALL_METHOD_2
call ::= expr . expr expr expr CALL_FUNCTION_3
call ::= expr . expr expr expr CALL_METHOD_3
call ::= expr . expr expr expr expr CALL_METHOD_4
call ::= expr . expr expr expr expr expr expr expr CALL_METHOD_7
call ::= expr CALL_METHOD_0 . 
call ::= expr expr . CALL_FUNCTION_1
call ::= expr expr . CALL_METHOD_1
call ::= expr expr . expr CALL_METHOD_2
call ::= expr expr . expr expr CALL_FUNCTION_3
call ::= expr expr . expr expr CALL_METHOD_3
call ::= expr expr . expr expr expr CALL_METHOD_4
call ::= expr expr . expr expr expr expr expr expr CALL_METHOD_7
call ::= expr expr CALL_METHOD_1 . 
call ::= expr expr expr . CALL_METHOD_2
call ::= expr expr expr . expr CALL_FUNCTION_3
call ::= expr expr expr . expr CALL_METHOD_3
call ::= expr expr expr . expr expr CALL_METHOD_4
call ::= expr expr expr . expr expr expr expr expr CALL_METHOD_7
call ::= expr expr expr CALL_METHOD_2 . 
call ::= expr expr expr expr . CALL_FUNCTION_3
call ::= expr expr expr expr . CALL_METHOD_3
call ::= expr expr expr expr . expr CALL_METHOD_4
call ::= expr expr expr expr . expr expr expr expr CALL_METHOD_7
call ::= expr expr expr expr CALL_METHOD_3 . 
call ::= expr expr expr expr expr . CALL_METHOD_4
call ::= expr expr expr expr expr . expr expr expr CALL_METHOD_7
call ::= expr expr expr expr expr expr . expr expr CALL_METHOD_7
call ::= expr expr expr expr expr expr expr . expr CALL_METHOD_7
call_kw36 ::= expr . expr LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr . expr expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr . expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr . expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr . expr expr expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_7
call_kw36 ::= expr expr . LOAD_CONST CALL_FUNCTION_KW_1
call_kw36 ::= expr expr . expr LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr . expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr . expr expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_7
call_kw36 ::= expr expr LOAD_CONST . CALL_FUNCTION_KW_1
call_kw36 ::= expr expr expr . LOAD_CONST CALL_FUNCTION_KW_2
call_kw36 ::= expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr . expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_7
call_kw36 ::= expr expr expr LOAD_CONST . CALL_FUNCTION_KW_2
call_kw36 ::= expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_3
call_kw36 ::= expr expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr . expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_7
call_kw36 ::= expr expr expr expr LOAD_CONST . CALL_FUNCTION_KW_3
call_kw36 ::= expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_3 . 
call_kw36 ::= expr expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr . expr expr expr LOAD_CONST CALL_FUNCTION_KW_7
call_kw36 ::= expr expr expr expr expr LOAD_CONST . CALL_FUNCTION_KW_4
call_kw36 ::= expr expr expr expr expr LOAD_CONST CALL_FUNCTION_KW_4 . 
call_kw36 ::= expr expr expr expr expr expr . LOAD_CONST CALL_FUNCTION_KW_5
call_kw36 ::= expr expr expr expr expr expr . expr expr LOAD_CONST CALL_FUNCTION_KW_7
call_kw36 ::= expr expr expr expr expr expr expr . expr LOAD_CONST CALL_FUNCTION_KW_7
cf_jump_back ::= COME_FROM . JUMP_LOOP
cf_pt ::= COME_FROM . POP_TOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP \e_come_from_opt POP_JUMP_IF_FALSE_LOOP
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE
chained_part ::= expr . DUP_TOP ROT_THREE COMPARE_OP come_from_opt POP_JUMP_IF_FALSE_LOOP
classdefdeco1 ::= expr . classdefdeco1 CALL_FUNCTION_1
classdefdeco1 ::= expr . classdefdeco2 CALL_FUNCTION_1
come_any_from ::= COME_FROM . 
come_any_froms ::= come_any_from . 
come_any_froms ::= come_any_froms . come_any_from
come_any_froms ::= come_any_froms come_any_from . 
come_from_opt ::= COME_FROM . 
come_froms ::= COME_FROM . 
come_froms ::= come_froms . COME_FROM
come_froms ::= come_froms COME_FROM . 
compare ::= compare_single . 
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP \e__come_froms
compare_chained ::= expr . compare_chained_middle ROT_TWO POP_TOP _come_froms
compare_chained37 ::= expr . chained_parts
compare_chained37 ::= expr . compare_chained_middlea_37
compare_chained37 ::= expr . compare_chained_middlec_37
compare_chained37_false ::= expr . compare_chained_middle_false_37
compare_chained37_false ::= expr . compare_chained_middleb_false_37
compare_chained37_false ::= expr . compare_chained_right_false_37
compare_chained_and ::= expr . chained_parts compare_chained_righta_false_37 come_froms POP_TOP JUMP_FORWARD COME_FROM negated_testtrue come_froms
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_middle COME_FROM
compare_chained_middle ::= expr . DUP_TOP ROT_THREE COMPARE_OP JUMP_IF_FALSE_OR_POP compare_chained_right COME_FROM
compare_single ::= expr . expr COMPARE_OP
compare_single ::= expr expr . COMPARE_OP
compare_single ::= expr expr COMPARE_OP . 
cond_except_stmts_opt ::= \e_cond_except_stmts_opt . cond_except_stmt
continues ::= _stmts . lastc_stmt continue
continues ::= lastc_stmt . continue
dict ::= expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_2
dict ::= expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr . expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr . expr expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_2
dict ::= expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr expr . expr expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr LOAD_CONST . BUILD_CONST_KEY_MAP_2
dict ::= expr expr LOAD_CONST BUILD_CONST_KEY_MAP_2 . 
dict ::= expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr expr expr . expr expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr expr expr expr . expr expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr LOAD_CONST . BUILD_CONST_KEY_MAP_4
dict ::= expr expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_5
dict ::= expr expr expr expr expr . expr expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr LOAD_CONST . BUILD_CONST_KEY_MAP_5
dict ::= expr expr expr expr expr expr . expr LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= expr expr expr expr expr expr expr . LOAD_CONST BUILD_CONST_KEY_MAP_7
dict ::= kvlist_1 . 
else_suite ::= returns . 
else_suite ::= suite_stmts . 
else_suite_opt ::= else_suite . 
else_suitec ::= c_stmts . 
else_suitec ::= suite_stmts . 
except_cond1 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP POP_TOP POP_TOP POP_EXCEPT
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . POP_TOP POP_TOP
except_cond1 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . POP_TOP POP_TOP POP_EXCEPT
except_cond2 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP . expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr . COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP . POP_JUMP_IF_FALSE POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE . POP_TOP store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . store POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP . store POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store . POP_TOP \e_come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store . POP_TOP come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP . come_from_opt
except_cond2 ::= DUP_TOP expr COMPARE_OP POP_JUMP_IF_FALSE POP_TOP store POP_TOP \e_come_from_opt . 
except_handler38 ::= jump . COME_FROM_FINALLY except_stmts END_FINALLY \e_opt_come_from_except
except_handler38 ::= jump . COME_FROM_FINALLY except_stmts END_FINALLY opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY . except_stmts END_FINALLY \e_opt_come_from_except
except_handler38 ::= jump COME_FROM_FINALLY . except_stmts END_FINALLY opt_come_from_except
except_ret38 ::= SETUP_FINALLY . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
except_ret38 ::= SETUP_FINALLY . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
except_ret38 ::= SETUP_FINALLY expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
except_ret38 ::= SETUP_FINALLY expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
except_ret38b ::= SETUP_FINALLY . suite_stmts expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY . suite_stmts expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY suite_stmts . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY suite_stmts . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY suite_stmts expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38b ::= SETUP_FINALLY suite_stmts expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM
except_ret38c ::= SETUP_FINALLY . suite_stmts expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY expr STORE_FAST DELETE_FAST END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM END_FINALLY come_any_froms
except_ret38c ::= SETUP_FINALLY suite_stmts . expr ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY expr STORE_FAST DELETE_FAST END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM END_FINALLY come_any_froms
except_ret38c ::= SETUP_FINALLY suite_stmts expr . ROT_FOUR POP_BLOCK POP_EXCEPT CALL_FINALLY POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY expr STORE_FAST DELETE_FAST END_FINALLY POP_EXCEPT JUMP_FORWARD COME_FROM END_FINALLY come_any_froms
except_return_value ::= POP_BLOCK . return
except_return_value ::= expr . POP_BLOCK RETURN_VALUE
except_return_value2 ::= POP_BLOCK . return
except_stmt ::= except_cond2 . except_ret38b
except_stmt ::= except_cond2 . except_suite \e_come_from_opt
except_stmt ::= except_cond2 . except_suite come_from_opt
except_stmt ::= except_cond2 . except_suite_finalize
except_suite ::= \e_c_stmts_opt . COME_FROM POP_EXCEPT jump_except COME_FROM
except_suite ::= \e_c_stmts_opt . POP_EXCEPT POP_TOP JUMP_FORWARD POP_EXCEPT jump_except
except_suite ::= \e_c_stmts_opt . POP_EXCEPT jump_except
except_suite_finalize ::= SETUP_FINALLY . c_stmts_opt except_var_finalize END_FINALLY POP_EXCEPT jump
except_suite_finalize ::= SETUP_FINALLY . c_stmts_opt except_var_finalize END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY . returns COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY . returns COME_FROM_FINALLY suite_stmts_opt END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY \e_c_stmts_opt . except_var_finalize END_FINALLY POP_EXCEPT jump
except_suite_finalize ::= SETUP_FINALLY \e_c_stmts_opt . except_var_finalize END_FINALLY jump
except_suite_finalize ::= SETUP_FINALLY c_stmts_opt . except_var_finalize END_FINALLY POP_EXCEPT jump
except_suite_finalize ::= SETUP_FINALLY c_stmts_opt . except_var_finalize END_FINALLY jump
except_var_finalize ::= POP_BLOCK . LOAD_CONST COME_FROM_FINALLY LOAD_CONST store delete
except_var_finalize ::= POP_BLOCK . POP_EXCEPT LOAD_CONST COME_FROM_FINALLY LOAD_CONST store delete
except_var_finalize ::= POP_BLOCK POP_EXCEPT . LOAD_CONST COME_FROM_FINALLY LOAD_CONST store delete
expr ::= LOAD_CONST . 
expr ::= LOAD_FAST . 
expr ::= LOAD_GLOBAL . 
expr ::= LOAD_STR . 
expr ::= attribute . 
expr ::= attribute37 . 
expr ::= bin_op . 
expr ::= call . 
expr ::= call_kw36 . 
expr ::= compare . 
expr ::= dict . 
expr ::= list . 
expr ::= not . 
expr ::= subscript . 
expr_jifop ::= expr . JUMP_IF_FALSE_OR_POP
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP \e__come_froms
expr_jifop_cfs ::= expr . JUMP_IF_FALSE_OR_POP _come_froms
expr_jitop ::= expr . JUMP_IF_TRUE_OR_POP
expr_pjif ::= expr . POP_JUMP_IF_FALSE
expr_pjif ::= expr POP_JUMP_IF_FALSE . 
expr_pjit ::= expr . POP_JUMP_IF_TRUE
expr_pjit ::= expr POP_JUMP_IF_TRUE . 
expr_pjitt ::= expr . pjump_ift
expr_stmt ::= expr . POP_TOP
expr_stmt ::= expr POP_TOP . 
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms
for38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms POP_BLOCK
for38 ::= expr . get_for_iter store for_block \e__come_froms
for38 ::= expr . get_for_iter store for_block _come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP \e__come_froms
for38 ::= expr . get_iter store for_block JUMP_LOOP _come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmt38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec \e__come_froms
forelselaststmtc38 ::= expr . get_for_iter store for_block else_suitec _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP \e__come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block JUMP_LOOP _come_froms else_suite _come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite \e__come_froms
forelsestmt38 ::= expr . get_for_iter store for_block POP_BLOCK else_suite _come_froms
get_iter ::= expr . GET_ITER
if_and_elsestmtc ::= expr_pjif . expr_pjif c_stmts jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif . expr_pjif c_stmts jb_cfs else_suitec opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif . c_stmts jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif . c_stmts jb_cfs else_suitec opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif c_stmts . jb_cfs else_suitec \e_opt_come_from_except
if_and_elsestmtc ::= expr_pjif expr_pjif c_stmts . jb_cfs else_suitec opt_come_from_except
if_and_stmt ::= expr_pjif . expr COME_FROM stmts \e__come_froms
if_and_stmt ::= expr_pjif . expr COME_FROM stmts _come_froms
if_and_stmt ::= expr_pjif expr . COME_FROM stmts \e__come_froms
if_and_stmt ::= expr_pjif expr . COME_FROM stmts _come_froms
if_exp ::= expr_pjif . expr jf_cf expr COME_FROM
if_exp ::= expr_pjif . expr jump_forward_else expr
if_exp ::= expr_pjif . expr jump_forward_else expr come_froms
if_exp ::= expr_pjif expr . jf_cf expr COME_FROM
if_exp ::= expr_pjif expr . jump_forward_else expr
if_exp ::= expr_pjif expr . jump_forward_else expr come_froms
if_exp_37b ::= expr_pjif . expr_pjif jump_forward_else expr
if_exp_37b ::= expr_pjif expr_pjif . jump_forward_else expr
if_exp_compare ::= bool_op . expr jf_cfs expr COME_FROM
if_exp_compare ::= bool_op expr . jf_cfs expr COME_FROM
if_exp_compare ::= expr . expr jf_cfs expr COME_FROM
if_exp_compare ::= expr expr . jf_cfs expr COME_FROM
if_exp_compare38 ::= or_in_ifexp . jump_if_false_cf expr jf_cfs expr come_froms
if_exp_compare38 ::= or_in_ifexp jump_if_false_cf . expr jf_cfs expr come_froms
if_exp_loop ::= expr_pjif . expr POP_JUMP_IF_FALSE_LOOP JUMP_FORWARD come_froms expr
if_exp_loop ::= expr_pjif expr . POP_JUMP_IF_FALSE_LOOP JUMP_FORWARD come_froms expr
if_exp_not ::= expr . POP_JUMP_IF_TRUE expr jump_forward_else expr COME_FROM
if_exp_not ::= expr POP_JUMP_IF_TRUE . expr jump_forward_else expr COME_FROM
if_exp_not ::= expr POP_JUMP_IF_TRUE expr . jump_forward_else expr COME_FROM
if_exp_true ::= expr . JUMP_FORWARD expr COME_FROM
if_not_stmtc ::= testexprc . ifstmts_jumpc \e__come_froms
if_not_stmtc ::= testexprc . ifstmts_jumpc _come_froms
if_not_stmtc ::= testexprc ifstmts_jumpc . _come_froms
if_not_stmtc ::= testexprc ifstmts_jumpc \e__come_froms . 
if_not_stmtc ::= testexprc ifstmts_jumpc _come_froms . 
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr . POP_JUMP_IF_TRUE come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE . come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE . come_from_opt expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt . expr POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr . POP_JUMP_IF_TRUE come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE . come_froms stmts jf_cfs else_suite \e_opt_come_from_except
if_or_not_elsestmt ::= expr POP_JUMP_IF_TRUE \e_come_from_opt expr POP_JUMP_IF_TRUE . come_froms stmts jf_cfs else_suite opt_come_from_except
if_or_stmt ::= expr . POP_JUMP_IF_TRUE expr pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE . expr pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr . pop_jump come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump . come_froms stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms . stmts COME_FROM
if_or_stmt ::= expr POP_JUMP_IF_TRUE expr pop_jump come_froms stmts . COME_FROM
ifelsestmt ::= bool_op . stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op . stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op . stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op . stmts_opt jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op \e_stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs . else_suite_opt \e_opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs . else_suite_opt opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs \e_else_suite_opt . opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= bool_op stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except . 
ifelsestmt ::= bool_op stmts_opt jf_cfs else_suite_opt . opt_come_from_except
ifelsestmt ::= bool_op stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= bool_op stmts_opt jf_cfs else_suite_opt opt_come_from_except . 
ifelsestmt ::= testexpr . stmts_opt JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr . stmts_opt JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr . stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr . stmts_opt jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr \e_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr \e_stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmt ::= testexpr stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmt ::= testexpr stmts_opt . jf_cfs \e_else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs \e_else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt . jf_cfs else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt JUMP_FORWARD . else_suite \e__come_froms
ifelsestmt ::= testexpr stmts_opt JUMP_FORWARD . else_suite _come_froms
ifelsestmt ::= testexpr stmts_opt jf_cfs . else_suite_opt \e_opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs . else_suite_opt opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt . opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs \e_else_suite_opt opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt . opt_come_from_except
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt \e_opt_come_from_except . 
ifelsestmt ::= testexpr stmts_opt jf_cfs else_suite_opt opt_come_from_except . 
ifelsestmtc ::= testexpr . c_stmts cf_pt else_suite
ifelsestmtc ::= testexpr . c_stmts come_froms else_suite
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr . c_stmts_opt cf_jump_back else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt jb_cfs else_suitec
ifelsestmtc ::= testexpr . c_stmts_opt jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr . c_stmts_opt jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr . c_stmts_opt jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr \e_c_stmts_opt . cf_jump_back else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . jb_cfs else_suitec
ifelsestmtc ::= testexpr \e_c_stmts_opt . jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr \e_c_stmts_opt . jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr \e_c_stmts_opt . jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts . cf_pt else_suite
ifelsestmtc ::= testexpr c_stmts . come_froms else_suite
ifelsestmtc ::= testexpr c_stmts come_froms . else_suite
ifelsestmtc ::= testexpr c_stmts come_froms else_suite . 
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suite \e__come_froms
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suite _come_froms
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_FORWARD else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . JUMP_LOOP else_suitec JUMP_LOOP
ifelsestmtc ::= testexpr c_stmts_opt . cf_jump_back else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . jb_cfs else_suitec
ifelsestmtc ::= testexpr c_stmts_opt . jb_cfs else_suitec JUMP_LOOP come_froms
ifelsestmtc ::= testexpr c_stmts_opt . jump_forward_else else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt . jump_forward_else else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suite \e__come_froms
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suite _come_froms
ifelsestmtc ::= testexpr c_stmts_opt JUMP_FORWARD . else_suitec
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else . else_suitec \e_opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else . else_suitec opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec . opt_come_from_except
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec \e_opt_come_from_except . 
ifelsestmtc ::= testexpr c_stmts_opt jump_forward_else else_suitec opt_come_from_except . 
ifelsestmtc ::= testexpr_cf . c_stmts_opt jb_cf else_suitec
ifelsestmtc ::= testexpr_cf \e_c_stmts_opt . jb_cf else_suitec
ifelsestmtc ::= testexpr_cf c_stmts_opt . jb_cf else_suitec
ifelsestmtr ::= testexpr . return_if_stmts returns
iflaststmt ::= testexpr . returns
iflaststmt ::= testexpr . stmts
iflaststmt ::= testexpr . stmts JUMP_FORWARD
iflaststmt ::= testexpr . stmts_opt JUMP_FORWARD
iflaststmt ::= testexpr \e_stmts_opt . JUMP_FORWARD
iflaststmt ::= testexpr returns . 
iflaststmt ::= testexpr stmts . 
iflaststmt ::= testexpr stmts . JUMP_FORWARD
iflaststmt ::= testexpr stmts JUMP_FORWARD . 
iflaststmt ::= testexpr stmts_opt . JUMP_FORWARD
iflaststmt ::= testexpr stmts_opt JUMP_FORWARD . 
iflaststmtc ::= testexpr . c_stmts
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexpr . c_stmts JUMP_LOOP POP_BLOCK
iflaststmtc ::= testexpr . c_stmts come_froms
iflaststmtc ::= testexpr c_stmts . 
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexpr c_stmts . JUMP_LOOP POP_BLOCK
iflaststmtc ::= testexpr c_stmts . come_froms
iflaststmtc ::= testexpr c_stmts come_froms . 
iflaststmtc ::= testexprc . c_stmts
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP \e_opt_pop_block
iflaststmtc ::= testexprc . c_stmts JUMP_LOOP opt_pop_block
iflaststmtc ::= testexprc c_stmts . 
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP COME_FROM_LOOP
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP \e_opt_pop_block
iflaststmtc ::= testexprc c_stmts . JUMP_LOOP opt_pop_block
ifpoplaststmtc ::= testexpr . POP_TOP \e_c_stmts_opt
ifpoplaststmtc ::= testexpr . POP_TOP c_stmts_opt
ifstmt ::= testexpr . ifstmts_jump \e__come_froms
ifstmt ::= testexpr . ifstmts_jump _come_froms
ifstmt ::= testexpr . stmts \e__come_froms
ifstmt ::= testexpr . stmts _come_froms
ifstmt ::= testexpr ifstmts_jump . _come_froms
ifstmt ::= testexpr ifstmts_jump \e__come_froms . 
ifstmt ::= testexpr stmts . _come_froms
ifstmt ::= testexpr stmts \e__come_froms . 
ifstmt ::= testexpr stmts _come_froms . 
ifstmt_bool ::= not_and_not . stmts come_froms
ifstmt_bool ::= or_and1 . stmts come_froms
ifstmt_bool ::= or_and1 stmts . come_froms
ifstmtc ::= testexpr . ifstmts_jumpc
ifstmtc ::= testexpr ifstmts_jumpc . 
ifstmtc ::= testexprc . ifstmts_jumpc \e__come_froms
ifstmtc ::= testexprc . ifstmts_jumpc _come_froms
ifstmtc ::= testexprc ifstmts_jumpc . _come_froms
ifstmtc ::= testexprc ifstmts_jumpc \e__come_froms . 
ifstmtc ::= testexprc ifstmts_jumpc _come_froms . 
ifstmts_jump ::= COME_FROM . stmts COME_FROM
ifstmts_jump ::= COME_FROM . stmts come_froms
ifstmts_jump ::= COME_FROM stmts . COME_FROM
ifstmts_jump ::= COME_FROM stmts . come_froms
ifstmts_jump ::= \e_stmts_opt . JUMP_FORWARD JUMP_FORWARD \e__come_froms
ifstmts_jump ::= \e_stmts_opt . JUMP_FORWARD JUMP_FORWARD _come_froms
ifstmts_jump ::= \e_stmts_opt . come_froms
ifstmts_jump ::= \e_stmts_opt come_froms . 
ifstmts_jump ::= stmts . come_froms
ifstmts_jump ::= stmts come_froms . 
ifstmts_jump ::= stmts_opt . JUMP_FORWARD JUMP_FORWARD \e__come_froms
ifstmts_jump ::= stmts_opt . JUMP_FORWARD JUMP_FORWARD _come_froms
ifstmts_jump ::= stmts_opt . come_froms
ifstmts_jump ::= stmts_opt JUMP_FORWARD . JUMP_FORWARD \e__come_froms
ifstmts_jump ::= stmts_opt JUMP_FORWARD . JUMP_FORWARD _come_froms
ifstmts_jump ::= stmts_opt come_froms . 
ifstmts_jumpc ::= COME_FROM . c_stmts JUMP_FORWARD
ifstmts_jumpc ::= COME_FROM . c_stmts JUMP_LOOP
ifstmts_jumpc ::= COME_FROM . c_stmts come_froms
ifstmts_jumpc ::= COME_FROM c_stmts . JUMP_FORWARD
ifstmts_jumpc ::= COME_FROM c_stmts . JUMP_LOOP
ifstmts_jumpc ::= COME_FROM c_stmts . come_froms
ifstmts_jumpc ::= COME_FROM c_stmts JUMP_FORWARD . 
ifstmts_jumpc ::= \e_c_stmts_opt . come_froms
ifstmts_jumpc ::= \e_c_stmts_opt come_froms . 
ifstmts_jumpc ::= c_stmts . 
ifstmts_jumpc ::= c_stmts . JUMP_LOOP
ifstmts_jumpc ::= c_stmts_opt . come_froms
ifstmts_jumpc ::= c_stmts_opt come_froms . 
ifstmts_jumpc ::= ifstmts_jump . 
import ::= LOAD_CONST . LOAD_CONST alias
import_as37 ::= LOAD_CONST . LOAD_CONST importlist37 store POP_TOP
import_from ::= LOAD_CONST . LOAD_CONST IMPORT_NAME importlist POP_TOP
import_from ::= LOAD_CONST . LOAD_CONST importlist POP_TOP
import_from37 ::= LOAD_CONST . LOAD_CONST IMPORT_NAME_ATTR importlist37 POP_TOP
import_from_as37 ::= LOAD_CONST . LOAD_CONST import_from_attr37 store POP_TOP
import_from_star ::= LOAD_CONST . LOAD_CONST IMPORT_NAME IMPORT_STAR
import_from_star ::= LOAD_CONST . LOAD_CONST IMPORT_NAME_ATTR IMPORT_STAR
importmultiple ::= LOAD_CONST . LOAD_CONST alias imports_cont
jb_cfs ::= \e_come_from_opt . JUMP_LOOP come_froms
jb_cfs ::= come_from_opt . JUMP_LOOP come_froms
jf_cfs ::= JUMP_FORWARD . _come_froms
jf_cfs ::= JUMP_FORWARD \e__come_froms . 
jf_cfs ::= JUMP_FORWARD _come_froms . 
jump ::= JUMP_FORWARD . 
jump_forward_else ::= JUMP_FORWARD . _come_froms
jump_forward_else ::= JUMP_FORWARD \e__come_froms . 
jump_forward_else ::= JUMP_FORWARD _come_froms . 
jump_forward_else ::= come_froms . jump COME_FROM
jump_if_false_cf ::= POP_JUMP_IF_FALSE . COME_FROM
jump_if_false_cf ::= POP_JUMP_IF_FALSE COME_FROM . 
kvlist_1 ::= expr . expr BUILD_MAP_1
kvlist_1 ::= expr expr . BUILD_MAP_1
kvlist_1 ::= expr expr BUILD_MAP_1 . 
lastc_stmt ::= ifelsestmtc . 
lc_setup_finally ::= LOAD_CONST . SETUP_FINALLY
list ::= expr . BUILD_LIST_1
list ::= expr BUILD_LIST_1 . 
mkfuncdeco ::= expr . mkfuncdeco CALL_FUNCTION_1
mkfuncdeco ::= expr . mkfuncdeco0 CALL_FUNCTION_1
named_expr ::= expr . DUP_TOP store
nand ::= and_parts . expr_pjit come_froms
nor_cond ::= or_parts . expr_pjif
nor_cond ::= or_parts expr_pjif . 
not ::= expr_pjit . 
not_and_not ::= not . expr_pjif COME_FROM
not_and_not ::= not expr_pjif . COME_FROM
not_and_not ::= not expr_pjif COME_FROM . 
not_or ::= and_parts . expr_pjif \e__come_froms
not_or ::= and_parts . expr_pjif _come_froms
not_or ::= and_parts expr_pjif . _come_froms
not_or ::= and_parts expr_pjif \e__come_froms . 
opt_come_from_except ::= come_any_froms . 
or ::= expr_pjit . expr COME_FROM
or ::= expr_pjit . expr jump_if_false_cf
or ::= expr_pjit expr . COME_FROM
or ::= expr_pjit expr . jump_if_false_cf
or ::= expr_pjit expr jump_if_false_cf . 
or ::= or_parts . expr
or ::= or_parts expr . 
or_and1 ::= or_parts . and_parts come_froms
or_and1 ::= or_parts and_parts . come_froms
or_and1 ::= or_parts and_parts come_froms . 
or_and_not ::= expr_pjit . and_not COME_FROM
or_cond ::= not_and_not . expr_pjif come_froms
or_cond ::= or_parts . expr_pjif come_froms
or_cond ::= or_parts expr_pjif . come_froms
or_cond ::= or_parts expr_pjif come_froms . 
or_expr ::= expr . JUMP_IF_TRUE expr COME_FROM
or_in_ifexp ::= expr_pjit . expr
or_in_ifexp ::= expr_pjit expr . 
or_in_ifexp ::= or_in_ifexp . POP_JUMP_IF_TRUE expr
or_in_ifexp ::= or_in_ifexp POP_JUMP_IF_TRUE . expr
or_in_ifexp ::= or_in_ifexp POP_JUMP_IF_TRUE expr . 
or_parts ::= expr_pjit . 
or_parts ::= or_parts . expr_pjit
or_parts ::= or_parts expr_pjit . 
pop_ex_return ::= return_expr . ROT_FOUR POP_EXCEPT RETURN_VALUE
pop_jump ::= POP_JUMP_IF_FALSE . 
pop_jump ::= POP_JUMP_IF_TRUE . 
popb_return ::= return_expr . POP_BLOCK RETURN_VALUE
return ::= return_expr . RETURN_END_IF
return ::= return_expr . RETURN_VALUE
return ::= return_expr . discard_tops RETURN_VALUE
return ::= return_expr RETURN_VALUE . 
return_except ::= stmts . POP_BLOCK return
return_except ::= stmts POP_BLOCK . return
return_expr ::= expr . 
return_if_stmt ::= return_expr . RETURN_END_IF
return_if_stmt ::= return_expr . RETURN_END_IF POP_BLOCK
return_if_stmts ::= _stmts . return_if_stmt \e__come_froms
return_if_stmts ::= _stmts . return_if_stmt _come_froms
returns ::= _stmts . return
returns ::= _stmts . return_if_stmt
returns ::= _stmts return . 
returns ::= return . 
returns_in_except ::= _stmts . except_return_value
returns_in_except2 ::= _stmts . except_return_value2
sf_pb_call_returns ::= SETUP_FINALLY . POP_BLOCK CALL_FINALLY returns
sf_pb_call_returns ::= SETUP_FINALLY . POP_BLOCK POP_EXCEPT CALL_FINALLY returns
sstmt ::= return . RETURN_LAST
sstmt ::= return RETURN_LAST . 
sstmt ::= sstmt . RETURN_LAST
sstmt ::= sstmt RETURN_LAST . 
sstmt ::= stmt . 
stmt ::= assign . 
stmt ::= expr_stmt . 
stmt ::= ifelsestmt . 
stmt ::= ifstmt . 
stmt ::= return . 
stmts ::= sstmt . 
stmts ::= stmt . 
stmts ::= stmts . last_stmt
stmts ::= stmts . sstmt
stmts ::= stmts . stmt
stmts ::= stmts sstmt . 
stmts ::= stmts stmt . 
stmts_opt ::= stmts . 
store ::= STORE_FAST . 
store ::= expr . STORE_ATTR
store ::= expr STORE_ATTR . 
store ::= store_subscript . 
store_subscript ::= expr . expr STORE_SUBSCR
store_subscript ::= expr expr . STORE_SUBSCR
store_subscript ::= expr expr STORE_SUBSCR . 
subscript ::= expr . expr BINARY_SUBSCR
subscript ::= expr expr . BINARY_SUBSCR
subscript ::= expr expr BINARY_SUBSCR . 
subscript2 ::= expr . expr DUP_TOP_TWO BINARY_SUBSCR
subscript2 ::= expr expr . DUP_TOP_TWO BINARY_SUBSCR
suite_stmts ::= _stmts . 
suite_stmts ::= returns . 
suite_stmts_opt ::= suite_stmts . 
testexpr ::= testfalse . 
testexpr ::= testtrue . 
testexpr_cf ::= testexpr . come_froms
testexpr_cf ::= testexpr come_froms . 
testexprc ::= testexpr . 
testfalse ::= expr_pjif . 
testfalse ::= or_cond . 
testfalsec ::= expr . POP_JUMP_IF_TRUE_LOOP
testtrue ::= expr_pjit . 
testtrue ::= nor_cond . 
testtrue ::= or_in_ifexp . POP_JUMP_IF_TRUE
testtrue ::= or_in_ifexp POP_JUMP_IF_TRUE . 
testtruec ::= expr . POP_JUMP_IF_FALSE_LOOP
try_elsestmtl38 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 COME_FROM else_suitec opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 COME_FROM else_suitec \e_opt_come_from_except
try_elsestmtl38 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 COME_FROM else_suitec opt_come_from_except
try_except ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38
try_except ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK except_handler38 jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38
try_except ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38
try_except ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK except_handler38 jump_excepts come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 jump_excepts \e_come_from_except_clauses
try_except ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . except_handler38 jump_excepts come_from_except_clauses
try_except38 ::= SETUP_FINALLY . POP_BLOCK POP_TOP \e_suite_stmts_opt except_handler38a
try_except38 ::= SETUP_FINALLY . POP_BLOCK POP_TOP suite_stmts_opt except_handler38a
try_except38 ::= SETUP_FINALLY . POP_BLOCK suite_stmts except_handler38b
try_except38r ::= SETUP_FINALLY . return_except except_handler38b
try_except38r2 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . POP_TOP POP_TOP POP_TOP \e_cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . POP_TOP POP_TOP POP_TOP cond_except_stmts_opt POP_EXCEPT return END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY \e_cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . cond_except_stmts_opt POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r3 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY \e_cond_except_stmts_opt . POP_EXCEPT return COME_FROM END_FINALLY COME_FROM
try_except38r4 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond1 return COME_FROM END_FINALLY
try_except38r5 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond1 except_ret38d COME_FROM END_FINALLY
try_except38r5 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond1 except_suite COME_FROM END_FINALLY COME_FROM
try_except38r5 ::= SETUP_FINALLY . returns_in_except COME_FROM_FINALLY except_cond2 except_ret38b END_FINALLY COME_FROM
try_except38r6 ::= SETUP_FINALLY . returns_in_except2 COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP except_ret38d END_FINALLY
try_except38r7 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except38r7 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . POP_TOP POP_TOP POP_TOP return_expr ROT_FOUR POP_EXCEPT POP_BLOCK ROT_TWO POP_TOP CALL_FINALLY RETURN_VALUE END_FINALLY COME_FROM POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY
try_except_as ::= SETUP_FINALLY . POP_BLOCK suite_stmts except_handler_as END_FINALLY COME_FROM
try_except_as ::= SETUP_FINALLY . suite_stmts except_handler_as END_FINALLY COME_FROM
try_except_as ::= SETUP_FINALLY suite_stmts . except_handler_as END_FINALLY COME_FROM
try_except_ret38 ::= SETUP_FINALLY . returns except_ret38a
try_except_ret38a ::= SETUP_FINALLY . returns except_handler38c END_FINALLY \e_come_from_opt
try_except_ret38a ::= SETUP_FINALLY . returns except_handler38c END_FINALLY come_from_opt
tryfinally36 ::= SETUP_FINALLY . returns COME_FROM_FINALLY suite_stmts
tryfinally38_return ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . JUMP_FORWARD COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD . COME_FROM_FINALLY except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY . except_cond2 except_ret38c
tryfinally38_return ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK JUMP_FORWARD COME_FROM_FINALLY except_cond2 . except_ret38c
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38a_return ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt except_return38 COME_FROM COME_FROM_FINALLY suite_stmts_opt pop_finally_pt return END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP \e_suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY \e_suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP \e_suite_stmts_opt END_FINALLY POP_TOP
tryfinally38astmt ::= LOAD_CONST . SETUP_FINALLY suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY POP_TOP suite_stmts_opt END_FINALLY POP_TOP
tryfinally38rstmt3 ::= SETUP_FINALLY . expr POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY ss_end_finally
tryfinally38rstmt3 ::= SETUP_FINALLY expr . POP_BLOCK CALL_FINALLY RETURN_VALUE COME_FROM COME_FROM_FINALLY ss_end_finally
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinally38stmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY POP_FINALLY suite_stmts_opt END_FINALLY
tryfinally_return_stmt1 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt1 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt1 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt1 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY returns
tryfinally_return_stmt2 ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK LOAD_CONST COME_FROM_FINALLY
tryfinally_return_stmt2 ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY
tryfinally_return_stmt2 ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK LOAD_CONST COME_FROM_FINALLY
tryfinally_return_stmt2 ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . LOAD_CONST COME_FROM_FINALLY
tryfinallystmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . BEGIN_FINALLY COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY . suite_stmts_opt POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY \e_suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt . POP_BLOCK POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK . POP_EXCEPT CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK POP_EXCEPT . CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK POP_EXCEPT . CALL_FINALLY JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK POP_EXCEPT CALL_FINALLY . JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY \e_suite_stmts_opt END_FINALLY
tryfinallystmt_break ::= SETUP_FINALLY suite_stmts_opt POP_BLOCK POP_EXCEPT CALL_FINALLY . JUMP_FORWARD POP_BLOCK BEGIN_FINALLY COME_FROM COME_FROM_FINALLY suite_stmts_opt END_FINALLY
tuple ::= expr . expr BUILD_TUPLE_2
tuple ::= expr . expr expr expr BUILD_TUPLE_4
tuple ::= expr expr . BUILD_TUPLE_2
tuple ::= expr expr . expr expr BUILD_TUPLE_4
tuple ::= expr expr expr . expr BUILD_TUPLE_4
tuple ::= expr expr expr expr . BUILD_TUPLE_4
unary_not ::= expr . UNARY_NOT
unary_op ::= expr . unary_operator
while1stmt ::= \e__come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts . COME_FROM_LOOP
while1stmt ::= \e__come_froms c_stmts COME_FROM . JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms . c_stmts COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms . c_stmts COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts . COME_FROM JUMP_LOOP COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts . COME_FROM_LOOP
while1stmt ::= _come_froms c_stmts COME_FROM . JUMP_LOOP COME_FROM_LOOP
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= _come_froms . c_stmts JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= _come_froms . c_stmts JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts . JUMP_LOOP \e__come_froms POP_BLOCK
whileTruestmt ::= _come_froms c_stmts . JUMP_LOOP _come_froms POP_BLOCK
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= \e__come_froms . pass JUMP_LOOP
whileTruestmt38 ::= \e__come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= \e__come_froms c_stmts . JUMP_LOOP _come_froms
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP \e__come_froms
whileTruestmt38 ::= _come_froms . c_stmts JUMP_LOOP _come_froms
whileTruestmt38 ::= _come_froms . pass JUMP_LOOP
whileTruestmt38 ::= _come_froms \e_pass . JUMP_LOOP
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP COME_FROM_EXCEPT_CLAUSE
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP \e__come_froms
whileTruestmt38 ::= _come_froms c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts come_froms
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms bool_op . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms bool_op . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms bool_op c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms bool_op c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts come_froms
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr . c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr . returns POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr \e_c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts . come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts come_froms . 
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= \e__come_froms testexpr c_stmts_opt COME_FROM . JUMP_LOOP POP_BLOCK
whilestmt38 ::= \e__come_froms testexpr returns . POP_BLOCK
whilestmt38 ::= \e__come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc \e_c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP \e__come_froms
whilestmt38 ::= \e__come_froms testexprc c_stmts_opt come_froms . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . bool_op c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . bool_op c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr \e_c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts come_froms
whilestmt38 ::= _come_froms . testexpr c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms . testexpr c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms . testexpr returns POP_BLOCK
whilestmt38 ::= _come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexprc \e_c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms . testexprc c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts come_froms
whilestmt38 ::= _come_froms testexpr . c_stmts_opt COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr . c_stmts_opt JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr . c_stmts_opt JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr . returns POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr \e_c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexpr c_stmts . JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexpr c_stmts . JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexpr c_stmts . come_froms
whilestmt38 ::= _come_froms testexpr c_stmts_opt . COME_FROM JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts_opt . JUMP_LOOP POP_BLOCK
whilestmt38 ::= _come_froms testexpr c_stmts_opt . JUMP_LOOP come_froms
whilestmt38 ::= _come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc . c_stmts_opt come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc \e_c_stmts_opt . come_froms JUMP_LOOP _come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP \e__come_froms
whilestmt38 ::= _come_froms testexprc c_stmts_opt . come_froms JUMP_LOOP _come_froms
yield ::= expr . YIELD_VALUE
yield_from ::= expr . GET_YIELD_FROM_ITER LOAD_CONST YIELD_FROM
Instruction context:
   
 L.1190       166  POP_BLOCK        
                 168  POP_EXCEPT       
                 170  CALL_FINALLY        176  'to 176'
->               172  LOAD_CONST               False
                 174  RETURN_VALUE     
               176_0  COME_FROM           170  '170'
               176_1  COME_FROM_FINALLY   138  '138'
                 176  LOAD_CONST               None
                 178  STORE_FAST               'e'
                 180  DELETE_FAST              'e'
                 182  END_FINALLY      
                 184  POP_EXCEPT       
                 186  JUMP_FORWARD        190  'to 190'
               188_0  COME_FROM           130  '130'
                 188  END_FINALLY      
               190_0  COME_FROM           186  '186'
               190_1  COME_FROM           122  '122'
import re, uuid, json, time, stripe, boto3, urllib, hashlib, cherrypy, logging, logging.config, datetime, requests, traceback
from decimal import Decimal
from botocore.exceptions import ClientError
from data.data_access_factory import DataAccessFactory
from utils import passwordComplexityCheck, getRequestJson, is_valid_email_address, parse_multiline_input, Unauthenticated
from cachetools.func import ttl_cache

class SubscriptionApi(object):

    def __init__(self, config):
        self.config = config
        self._db = DataAccessFactory.createSession(config["database"]["type"], config)
        self.logger = logging.getLogger("subscription_api_server")
        self.logger.info("%s initialized" % self.__class__.__name__)

    def get_stripe_products(self):
        if self._db.get_config_setting_bool("subscription", "enforce", True):
            try:
                stripe_product_grouping_id = self._db.get_config_setting_value("subscription", "stripe_product_grouping_id")
                stripe_api_key = self._db.get_config_setting_value("subscription", "stripe_private_key")
                stripe.api_key = stripe_api_key
                stripe.api_version = "2019-12-03"
                products = stripe.Product.list()
                self.all_products = []
                for product in products["data"]:
                    if product["active"]:
                        plans = stripe.Plan.list(product=(product["id"]))
                        _plans = []
                        for plan in plans:
                            if plan["active"]:
                                if plan["metadata"].get("product_grouping_id") == stripe_product_grouping_id:
                                    if product["metadata"].get("product_grouping_id") == stripe_product_grouping_id:
                                        _plans.append({'amount':plan["amount"], 
                                         'description':plan["metadata"]["description"] if ("description" in plan["metadata"]) else None, 
                                         'group_id':plan["metadata"]["group_id"] if ("group_id" in plan["metadata"]) else None, 
                                         'id':plan["id"], 
                                         'product_id':plan["product"], 
                                         'name':plan["nickname"], 
                                         'trial_days':plan["trial_period_days"]})
                                    if _plans:
                                        self.all_products.append({'name':product["name"], 
                                         'id':product["id"], 
                                         'description':(product["metadata"].get)("description", ""), 
                                         'plans':_plans})
                                    self.logger.info("Fetched Stripe Products (%s)" % json.dumps((self.all_products), sort_keys=True))

            except Exception as e:
                try:
                    self.logger.exception("Unable to fetch stripe products. (%s)" % e)
                finally:
                    e = None
                    del e

            return self.all_products

    @cherrypy.expose
    @Unauthenticated()
    def requestResetEmailParse error at or near `RETURN_VALUE' instruction at offset 266

    @cherrypy.expose
    @Unauthenticated()
    def passwordResetParse error at or near `RETURN_VALUE' instruction at offset 528

    @cherrypy.expose
    @Unauthenticated()
    def cancelNewsletterParse error at or near `RETURN_VALUE' instruction at offset 212

    @cherrypy.expose
    @Unauthenticated()
    def signupNewsletterParse error at or near `RETURN_VALUE' instruction at offset 240

    def hubSpotRegisterContact(self, event, demo_account_registration_link, demo_account_registration_href):
        headers = {}
        headers["Content-Type"] = "application/x-www-form-urlencoded"
        endpoint = "https://forms.hubspot.com/uploads/form/v2/%s/%s?&" % (cherrypy.request.db.get_config_setting_value("subscription", "hubspot_portal_id"), cherrypy.request.db.get_config_setting_value("subscription", "hubspot_registration_form_id"))
        hs_context = json.dumps({'hutk':cherrypy.request.cookie["hubspotutk"].value if (cherrypy.request.cookie.get("hubspotutk")) else "", 
         'ipAddress':cherrypy.request.headers["X-Forwarded-For"].split(",")[0] if ("X-Forwarded-For" in cherrypy.request.headers) else (cherrypy.request.remote.ip), 
         'pageUrl':(cherrypy.request.base) + (cherrypy.request.path_info), 
         'pageName':"Create Account"})
        data = urllib.parse.urlencode({'email':event["emailaddress"], 
         'hs_context':hs_context, 
         'demo_account_registration_link':demo_account_registration_link, 
         'demo_account_registration_href':demo_account_registration_href})
        logging.info("Sending Hubspot Registration Request: %s" % data)
        r = requests.post(url=endpoint, data=data, headers=headers)
        if not r.ok:
            self.logger.error("Error sending Hubspot request: %s" % r.content.decode("utf-8"))

    def hubSpotRegisterContactSubscription(self, email, stripe_customer_id, stripe_plan_id, stripe_product_id, stripe_product_name, stripe_plan_nickname, stripe_enrolled):
        headers = {}
        headers["Content-Type"] = "application/x-www-form-urlencoded"
        endpoint = "https://forms.hubspot.com/uploads/form/v2/%s/%s?&" % (cherrypy.request.db.get_config_setting_value("subscription", "hubspot_portal_id"), cherrypy.request.db.get_config_setting_value("subscription", "hubspot_subscription_form_id"))
        data = urllib.parse.urlencode({
          'email': email,
          'stripe_customer_id': stripe_customer_id,
          'stripe_plan_id': stripe_plan_id,
          'stripe_product_id': stripe_product_id,
          'stripe_product_name': stripe_product_name,
          'stripe_plan_nickname': stripe_plan_nickname,
          'stripe_enrolled': stripe_enrolled})
        logging.info("Sending Hubspot Subscription Update Request: %s" % data)
        r = requests.post(url=endpoint, data=data, headers=headers)
        if not r.ok:
            self.logger.error("Error sending Hubspot request: %s" % r.content.decode("utf-8"))

    def is_email_verified(self, address):
        self.logger.info("Verifying Email : %s" % address)
        url = "https://mailcheck.p.rapidapi.com/"
        querystring = {'disable_test_connection':"false",  'domain':address}
        headers = {'x-rapidapi-host':"mailcheck.p.rapidapi.com", 
         'x-rapidapi-key':"cfe41ef802msh127a4f17d978e14p168b82jsnc84bd3fbe49c"}
        response = requests.request("GET", url, headers=headers, params=querystring)
        self.logger.info("Check-Mail API response (%s)" % response.text)
        data = json.loads(response.text)
        do_block = data["block"]
        if do_block:
            self.logger.warning("Block (%s) ? : (%s)" % (address, do_block))
        else:
            self.logger.info("Block (%s) ? : (%s)" % (address, do_block))
        return not data["block"]

    @staticmethod
    @ttl_cache(maxsize=500, ttl=7200)
    def check_ip_requests(ip):
        return time.time()

    @cherrypy.expose
    @Unauthenticated()
    def createAccountParse error at or near `RETURN_VALUE' instruction at offset 946

    @cherrypy.expose
    @Unauthenticated()
    def requestInformationParse error at or near `RETURN_VALUE' instruction at offset 308

    @cherrypy.expose
    @Unauthenticated()
    def confirmEmailAddress(self, emailaddress, token, **params):
        user = cherrypy.request.db.getUser(emailaddress)
        location = cherrypy.request.db.config["subscription"]["app_domain"].value
        response = "\n        <html>\n            <head><meta http-equiv='refresh' content='5; url=https://{location}' /></head>\n            <body>Email Confirmation {status}, redirecting to <a href='http://{location}'>login</a></body>\n        </html>\n        "
        if user.email_confirm_token and user.locked == True:
            if user.email_confirm_token == token:
                user.locked = False
                user.email_confirm_token = None
                cherrypy.request.db.updateUser(user)
                response = response.format(location=location, status="Successful")
            else:
                logging.warning("Attempt to confirm email with invalid token for user {} with token {}".format(emailaddress, token))
                response = response.format(location=location, status="Failed")
        else:
            logging.warning("Invalid attempt to confirm email for user {} with token {}".format(emailaddress, token))
            response = response.format(location=location, status="Failed")
        return response

    @cherrypy.expose
    @Unauthenticated()
    def authorizeUserAccess(self):
        event = getRequestJson(cherrypy.request)
        response = dict()
        response["authorized"] = False
        if "username" in event and "token" in event:
            user = cherrypy.request.db.getUser(event["username"])
            if user:
                if cherrypy.request.db.validateSessionToken(event["token"], user.username):
                    if user.stripe_id is None:
                        response["error_message"] = "User not subscribed to a plan."
                        logging.warning("User (%s) requested authorization, no stripe account." % event["username"])
                    else:
                        cust = stripe.Customer.retrieve(user.stripe_id)
                        if len(cust.subscriptions.data) > 0:
                            response["subscription_status"] = cust.subscriptions.data[0].status
                            if cust.subscriptions.data[0].status == "trialing" or cust.subscriptions.data[0].status == "active":
                                response["authorized"] = True
                            elif cust.subscriptions.data[0].status == "past_due":
                                response["authorized"] = True
                                response["error_message"] = "Your account is past due, please check your profile and update your payment method."
                            else:
                                response["error_message"] = "Your subscription has either been cancelled or is in an unpaid status"
                        else:
                            response["error_message"] = "Access Denied, user not subscribed to a plan."
                            logging.warning("User (%s) requested authorization, user not subscribed to a plan." % event["username"])
                else:
                    response["error_message"] = "Access Denied"
            else:
                logging.warning("User (%s) is not a valid username" % event["username"])
                response["error_message"] = "Access Denied"
        else:
            logging.warning("Invalid request to update payment information")
            response["error_message"] = "Access Denied"
        return json.dumps(response)

    @cherrypy.expose
    @Unauthenticated()
    def updatePaymentInfo(self):
        event = getRequestJson(cherrypy.request)
        response = {}
        if "username" in event and "token" in event and "stripetoken" in event:
            user = cherrypy.request.db.getUser(event["username"])
            if user:
                if cherrypy.request.db.validateSessionToken(event["token"], user.username):
                    print("Stripe Token: (%s)" % event["stripetoken"])
                    if user.stripe_id is None:
                        stripe_id = self.createStripeUser(user)
                        if stripe_id == False:
                            response["error_message"] = "Error creating Stripe customer record"
                    else:
                        stripe_id = user.stripe_id
                    cust = stripe.Customer.retrieve(stripe_id)
                    card = cust.sources.all(object="card")
                    if len(card.data) > 0:
                        cust.sources.retrieve(card.data[0].id).delete()
                    newcard = cust.sources.create(source=(event["stripetoken"]["id"]))
                    cust.default_source = newcard.id
                    cust.save()
                    response["default_card"] = {'brand':newcard.brand, 
                     'last4':newcard.last4, 
                     'exp_month':newcard.exp_month, 
                     'exp_year':newcard.exp_year}
                else:
                    response["error_message"] = "Access Denied"
            else:
                logging.warning("User (%s) is not a valid username" % event["username"])
                response["error_message"] = "Access Denied"
        else:
            logging.warning("Invalid request to update payment information")
            response["error_message"] = "Access Denied"
        return json.dumps(response)

    @cherrypy.expose
    @Unauthenticated()
    def getProducts(self):
        return json.dumps(self.get_stripe_products())

    @cherrypy.expose
    @Unauthenticated()
    def getUserProfile(self):
        event = getRequestJson(cherrypy.request)
        response = {}
        if "username" in event:
            if "token" in event:
                user = cherrypy.request.db.getUser(event["username"])
                if user:
                    if user.stripe_id is None:
                        custid = self.createStripeUser(user)
                    else:
                        custid = user.stripe_id
                    cust = stripe.Customer.retrieve(custid)
                    if cherrypy.request.db.validateSessionToken(event["token"], user.username):
                        subscriptions = stripe.Plan.list()
                        response["plans"] = []
                        for s in subscriptions.data:
                            plan = {'name':s["name"],  'amount':s["amount"], 
                             'description':s["metadata"]["description"], 
                             'id':s["id"], 
                             'is_selected':False}
                            if len(cust.subscriptions.data) > 0:
                                if cust.subscriptions.data[0].plan.id == s["id"]:
                                    plan["is_selected"] = True
                                response["plans"].append(plan)

                        if len(cust.sources.data) > 0:
                            card = {'brand':(cust.sources.data[0]).brand,  'last4':(cust.sources.data[0]).last4, 
                             'exp_month':(cust.sources.data[0]).exp_month, 
                             'exp_year':(cust.sources.data[0]).exp_year}
                            response["default_card"] = card
                        if len(cust.subscriptions.data) > 0:
                            response["subscription_status"] = cust.subscriptions.data[0].status
                    else:
                        response["error_message"] = "Access Denied"
                else:
                    logging.warning("User (%s) is not a valid username" % event["username"])
                    response["error_message"] = "Access Denied"
            return json.dumps(response)

    @cherrypy.expose
    @Unauthenticated()
    def cancelUserSubscription(self):
        event = getRequestJson(cherrypy.request)
        response = {}
        if "username" in event and "token" in event:
            user = cherrypy.request.db.getUser(event["username"])
            if user:
                if cherrypy.request.db.validateSessionToken(event["token"], user.username):
                    if "stripe_id" in user:
                        cust = stripe.Customer.retrieve(user.stripe_id)
                        if len(cust.subscriptions.data) > 0:
                            subscription = stripe.Subscription.retrieve(cust.subscriptions.data[0].id)
                            subscription.delete()
                            user.plan_id = None
                            cherrypy.request.db.updateUser(user)
                        else:
                            response["error_message"] = "You are not subscribed to a plan."
                            logging.warning("User {} attempted to cancel plan, but they are not a assigned a plan in stripe".format(event["username"]))
                    else:
                        response["error_message"] = "You are not subscribed to a plan."
                        logging.warning("User {} attempted to cancel plan, but they do not have a Stripe account.".format(event["username"]))
                else:
                    response["error_message"] = "Access Denied"
                    logging.warning("Invalid token for user {} to cancelUserSubscription".format(event["username"]))
            else:
                response["error_message"] = "Access Denied"
                logging.warning("Invalid username {} to cancelUserSubscription".format(event["username"]))
        else:
            logging.warning("Invalid request to cancelUserSubscription")
            response["error_message"] = "Invalid request"
        return json.dumps(response)

    @cherrypy.expose
    @Unauthenticated()
    def setUserSubscription(self):
        event = getRequestJson(cherrypy.request)
        response = {}
        if "username" in event and "token" in event and "plan_id" in event:
            user = cherrypy.request.db.getUser(event["username"])
            if user:
                if cherrypy.request.db.validateSessionToken(event["token"], user.username):
                    if user.stripe_id is None:
                        stripe_id = self.createStripeUser(user)
                        if stripe_id == False:
                            response["error_message"] = "Error creating Stripe customer record"
                            return json.dumps(response)
                    else:
                        stripe_id = user.stripe_id
                    try:
                        subs = stripe.Subscription.list(customer=stripe_id)
                        if len(subs.data) == 0:
                            stripe.Subscription.create(customer=stripe_id,
                              items=[
                             {"plan": (event["plan_id"])}])
                        else:
                            current_sub = stripe.Subscription.retrieve(subs.data[0].id)
                            print(current_sub)
                            current_sub.plan = event["plan_id"]
                            current_sub.save()
                        user.plan_id = event["plan_id"]
                        cherrypy.request.db.updateUser(user)
                    except stripe.error.InvalidRequestError as ex:
                        try:
                            response["error_message"] = str(ex)
                            if "This customer has no attached payment source" in response["error_message"]:
                                response["error_message"] = "Before you can select a plan, you must setup a payment."
                        finally:
                            ex = None
                            del ex

                    except Exception as ex2:
                        try:
                            response["error_message"] = "An unexpected error occurred."
                            print(ex2)
                        finally:
                            ex2 = None
                            del ex2

                else:
                    response["error_message"] = "Access Denied"
            if "error_message" in response:
                logging.warning("Error setting user {} plan to {}: {}".format(event["username"], event["plan_id"], response["error_message"]))
        else:
            logging.warning("Invalid request to setUserSubscription")
            response["error_message"] = "Invalid request"
        return json.dumps(response)

    @cherrypy.expose()
    @Unauthenticated()
    def confirm_subscription(self):
        print("confirmed")

    @cherrypy.expose()
    @cherrypy.tools.json_in()
    @cherrypy.tools.json_out()
    @Unauthenticated()
    def create_cartParse error at or near `RETURN_VALUE' instruction at offset 448

    @cherrypy.expose()
    @cherrypy.tools.json_in()
    @cherrypy.tools.json_out()
    @Unauthenticated()
    def stripe_checkout_id(self):
        response = {}
        event = cherrypy.request.json
        cart = cherrypy.request.db.getCart(event["cart_id"])
        if cart or not cart.completed:
            user = cherrypy.request.db.get_user_by_id(cart.user_id)
            plan_name = cart.plan_name
            if user:
                try:
                    session = stripe.checkout.Session.create(payment_method_types=[
                     "card"],
                      customer=(cart.stripe_id),
                      subscription_data={"items": [
                               {"plan": plan_name}]},
                      client_reference_id=(cart.cart_id),
                      billing_address_collection="required",
                      success_url=("https://" + cherrypy.request.db.config["subscription"]["website_domain"].value + "/checkout_complete.html#?session_id={CHECKOUT_SESSION_ID}"),
                      cancel_url=("https://" + cherrypy.request.db.config["subscription"]["website_domain"].value + "/checkout.html#?cart_id=" + cherrypy.request.db.serializable(cart.cart_id)))
                except stripe.error.InvalidRequestError:
                    self.logger.error("Invalid Request Sent to Stripe: %s", traceback.format_exc())
                    response["error_message"] = "Invalid Request made to Stripe"
                    return response
                except stripe.error.StripeError:
                    self.logger.error("Invalid Request Sent to Stripe: %s", traceback.format_exc())
                    response["error_message"] = "Stripe Encountered an Error"
                    return response
                else:
                    plans = []
                    for item in session["display_items"]:
                        product = self.getProduct(item["plan"]["product"])
                        if product:
                            plans.append({'name':product["name"], 
                             'description':product["description"], 
                             'quantity':item["quantity"], 
                             'amount':item["amount"], 
                             'plan_name':item["plan"]["nickname"]})
                        response["cart"] = {'name':(user.first_name + " ") + (user.last_name), 
                         'email':user.username, 
                         'phone':user.phone, 
                         'session_id':session.id, 
                         'plans':plans}
                        return response

                    msg = "Error Finding Cart User. Try Creating another cart."
                    response["error_message"] = msg
                return response
        else:
            msg = "Cart for that ID is no longer Valid."
            response["error_message"] = msg
            return response

    @cherrypy.expose()
    @cherrypy.tools.json_in()
    @cherrypy.tools.json_out()
    @Unauthenticated()
    def checkout_complete(self):
        response = {}
        event = cherrypy.request.json
        session_id = event["session_id"]
        session = stripe.checkout.Session.retrieve(session_id)
        cus = stripe.Customer.retrieve(session.customer)
        response["session"] = session
        response["customer"] = cus
        return response

    @cherrypy.expose()
    @Unauthenticated()
    @cherrypy.tools.json_out()
    def checkout_complete_hookParse error at or near `LOAD_CONST' instruction at offset 146

    def remove_subscription_groups(self, user):
        remove_groups = user.none_system_group_ids()
        if remove_groups:
            for group_id in remove_groups:
                group = cherrypy.request.db.getGroup(group_id)
                cherrypy.request.db.removeUserGroup(user, group)
                self.logger.info("Removed from: %s", group.name)

    @cherrypy.expose()
    @cherrypy.tools.json_out()
    @Unauthenticated()
    def subscription_hooksParse error at or near `LOAD_CONST' instruction at offset 162

    def validateReCaptcha(self, event):
        response = {"status": False}
        if "recaptcha" not in event or event["recaptcha"] == None or event["recaptcha"] == "":
            response["error_message"] = "Check the I'm not a robot box"
        else:
            params = {'secret':(cherrypy.request.db.get_config_setting_value)("auth", "google_recaptcha_priv_key"), 
             'response':event["recaptcha"]}
            res = requests.get((cherrypy.request.db.get_config_setting_value("auth", "google_recaptcha_api_url")), params=params, verify=True)
            res = res.json()
            if "success" in res and res["success"] == True:
                response["status"] = True
            elif "error-codes" in res:
                response["error_message"] = "Error in recaptcha request: {0}".format(res["error-codes"])
            else:
                response["error_message"] = "Unknown recaptcha error"
        return response

    def createStripeUser(self, user):
        if user.stripe_id is None:
            customer = stripe.Customer.create(email=(user.username),
              description=(user.user_id),
              name=(user.first_name + " " + user.last_name))
            user.stripe_id = customer.id
            cherrypy.request.db.updateUser(user)
            return customer.id
        return False

    def sendEmailHTMLParse error at or near `LOAD_CONST' instruction at offset 172
